{"version":3,"file":"cubism4.min.js","mappings":"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","sources":["webpack://PIXI.live2d/webpack/universalModuleDefinition","webpack://PIXI.live2d/./node_modules/lodash/_DataView.js","webpack://PIXI.live2d/./node_modules/lodash/_Hash.js","webpack://PIXI.live2d/./node_modules/lodash/_ListCache.js","webpack://PIXI.live2d/./node_modules/lodash/_Map.js","webpack://PIXI.live2d/./node_modules/lodash/_MapCache.js","webpack://PIXI.live2d/./node_modules/lodash/_Promise.js","webpack://PIXI.live2d/./node_modules/lodash/_Set.js","webpack://PIXI.live2d/./node_modules/lodash/_SetCache.js","webpack://PIXI.live2d/./node_modules/lodash/_Stack.js","webpack://PIXI.live2d/./node_modules/lodash/_Symbol.js","webpack://PIXI.live2d/./node_modules/lodash/_Uint8Array.js","webpack://PIXI.live2d/./node_modules/lodash/_WeakMap.js","webpack://PIXI.live2d/./node_modules/lodash/_apply.js","webpack://PIXI.live2d/./node_modules/lodash/_arrayFilter.js","webpack://PIXI.live2d/./node_modules/lodash/_arrayLikeKeys.js","webpack://PIXI.live2d/./node_modules/lodash/_arrayMap.js","webpack://PIXI.live2d/./node_modules/lodash/_arrayPush.js","webpack://PIXI.live2d/./node_modules/lodash/_arraySome.js","webpack://PIXI.live2d/./node_modules/lodash/_assocIndexOf.js","webpack://PIXI.live2d/./node_modules/lodash/_baseAssignValue.js","webpack://PIXI.live2d/./node_modules/lodash/_baseFindIndex.js","webpack://PIXI.live2d/./node_modules/lodash/_baseFor.js","webpack://PIXI.live2d/./node_modules/lodash/_baseForOwn.js","webpack://PIXI.live2d/./node_modules/lodash/_baseGet.js","webpack://PIXI.live2d/./node_modules/lodash/_baseGetAllKeys.js","webpack://PIXI.live2d/./node_modules/lodash/_baseGetTag.js","webpack://PIXI.live2d/./node_modules/lodash/_baseHasIn.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIndexOf.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIndexOfWith.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsArguments.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsEqual.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsEqualDeep.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsMatch.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsNaN.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsNative.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsTypedArray.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIteratee.js","webpack://PIXI.live2d/./node_modules/lodash/_baseKeys.js","webpack://PIXI.live2d/./node_modules/lodash/_baseMatches.js","webpack://PIXI.live2d/./node_modules/lodash/_baseMatchesProperty.js","webpack://PIXI.live2d/./node_modules/lodash/_baseProperty.js","webpack://PIXI.live2d/./node_modules/lodash/_basePropertyDeep.js","webpack://PIXI.live2d/./node_modules/lodash/_basePullAll.js","webpack://PIXI.live2d/./node_modules/lodash/_baseRest.js","webpack://PIXI.live2d/./node_modules/lodash/_baseSetToString.js","webpack://PIXI.live2d/./node_modules/lodash/_baseTimes.js","webpack://PIXI.live2d/./node_modules/lodash/_baseToString.js","webpack://PIXI.live2d/./node_modules/lodash/_baseUnary.js","webpack://PIXI.live2d/./node_modules/lodash/_cacheHas.js","webpack://PIXI.live2d/./node_modules/lodash/_castPath.js","webpack://PIXI.live2d/./node_modules/lodash/_copyArray.js","webpack://PIXI.live2d/./node_modules/lodash/_coreJsData.js","webpack://PIXI.live2d/./node_modules/lodash/_createBaseFor.js","webpack://PIXI.live2d/./node_modules/lodash/_defineProperty.js","webpack://PIXI.live2d/./node_modules/lodash/_equalArrays.js","webpack://PIXI.live2d/./node_modules/lodash/_equalByTag.js","webpack://PIXI.live2d/./node_modules/lodash/_equalObjects.js","webpack://PIXI.live2d/./node_modules/lodash/_freeGlobal.js","webpack://PIXI.live2d/./node_modules/lodash/_getAllKeys.js","webpack://PIXI.live2d/./node_modules/lodash/_getMapData.js","webpack://PIXI.live2d/./node_modules/lodash/_getMatchData.js","webpack://PIXI.live2d/./node_modules/lodash/_getNative.js","webpack://PIXI.live2d/./node_modules/lodash/_getRawTag.js","webpack://PIXI.live2d/./node_modules/lodash/_getSymbols.js","webpack://PIXI.live2d/./node_modules/lodash/_getTag.js","webpack://PIXI.live2d/./node_modules/lodash/_getValue.js","webpack://PIXI.live2d/./node_modules/lodash/_hasPath.js","webpack://PIXI.live2d/./node_modules/lodash/_hashClear.js","webpack://PIXI.live2d/./node_modules/lodash/_hashDelete.js","webpack://PIXI.live2d/./node_modules/lodash/_hashGet.js","webpack://PIXI.live2d/./node_modules/lodash/_hashHas.js","webpack://PIXI.live2d/./node_modules/lodash/_hashSet.js","webpack://PIXI.live2d/./node_modules/lodash/_isIndex.js","webpack://PIXI.live2d/./node_modules/lodash/_isKey.js","webpack://PIXI.live2d/./node_modules/lodash/_isKeyable.js","webpack://PIXI.live2d/./node_modules/lodash/_isMasked.js","webpack://PIXI.live2d/./node_modules/lodash/_isPrototype.js","webpack://PIXI.live2d/./node_modules/lodash/_isStrictComparable.js","webpack://PIXI.live2d/./node_modules/lodash/_listCacheClear.js","webpack://PIXI.live2d/./node_modules/lodash/_listCacheDelete.js","webpack://PIXI.live2d/./node_modules/lodash/_listCacheGet.js","webpack://PIXI.live2d/./node_modules/lodash/_listCacheHas.js","webpack://PIXI.live2d/./node_modules/lodash/_listCacheSet.js","webpack://PIXI.live2d/./node_modules/lodash/_mapCacheClear.js","webpack://PIXI.live2d/./node_modules/lodash/_mapCacheDelete.js","webpack://PIXI.live2d/./node_modules/lodash/_mapCacheGet.js","webpack://PIXI.live2d/./node_modules/lodash/_mapCacheHas.js","webpack://PIXI.live2d/./node_modules/lodash/_mapCacheSet.js","webpack://PIXI.live2d/./node_modules/lodash/_mapToArray.js","webpack://PIXI.live2d/./node_modules/lodash/_matchesStrictComparable.js","webpack://PIXI.live2d/./node_modules/lodash/_memoizeCapped.js","webpack://PIXI.live2d/./node_modules/lodash/_nativeCreate.js","webpack://PIXI.live2d/./node_modules/lodash/_nativeKeys.js","webpack://PIXI.live2d/./node_modules/lodash/_nodeUtil.js","webpack://PIXI.live2d/./node_modules/lodash/_objectToString.js","webpack://PIXI.live2d/./node_modules/lodash/_overArg.js","webpack://PIXI.live2d/./node_modules/lodash/_overRest.js","webpack://PIXI.live2d/./node_modules/lodash/_root.js","webpack://PIXI.live2d/./node_modules/lodash/_setCacheAdd.js","webpack://PIXI.live2d/./node_modules/lodash/_setCacheHas.js","webpack://PIXI.live2d/./node_modules/lodash/_setToArray.js","webpack://PIXI.live2d/./node_modules/lodash/_setToString.js","webpack://PIXI.live2d/./node_modules/lodash/_shortOut.js","webpack://PIXI.live2d/./node_modules/lodash/_stackClear.js","webpack://PIXI.live2d/./node_modules/lodash/_stackDelete.js","webpack://PIXI.live2d/./node_modules/lodash/_stackGet.js","webpack://PIXI.live2d/./node_modules/lodash/_stackHas.js","webpack://PIXI.live2d/./node_modules/lodash/_stackSet.js","webpack://PIXI.live2d/./node_modules/lodash/_strictIndexOf.js","webpack://PIXI.live2d/./node_modules/lodash/_stringToPath.js","webpack://PIXI.live2d/./node_modules/lodash/_toKey.js","webpack://PIXI.live2d/./node_modules/lodash/_toSource.js","webpack://PIXI.live2d/./node_modules/lodash/constant.js","webpack://PIXI.live2d/./node_modules/lodash/eq.js","webpack://PIXI.live2d/./node_modules/lodash/get.js","webpack://PIXI.live2d/./node_modules/lodash/hasIn.js","webpack://PIXI.live2d/./node_modules/lodash/identity.js","webpack://PIXI.live2d/./node_modules/lodash/isArguments.js","webpack://PIXI.live2d/./node_modules/lodash/isArray.js","webpack://PIXI.live2d/./node_modules/lodash/isArrayLike.js","webpack://PIXI.live2d/./node_modules/lodash/isBuffer.js","webpack://PIXI.live2d/./node_modules/lodash/isFunction.js","webpack://PIXI.live2d/./node_modules/lodash/isLength.js","webpack://PIXI.live2d/./node_modules/lodash/isObject.js","webpack://PIXI.live2d/./node_modules/lodash/isObjectLike.js","webpack://PIXI.live2d/./node_modules/lodash/isSymbol.js","webpack://PIXI.live2d/./node_modules/lodash/isTypedArray.js","webpack://PIXI.live2d/./node_modules/lodash/keys.js","webpack://PIXI.live2d/./node_modules/lodash/mapKeys.js","webpack://PIXI.live2d/./node_modules/lodash/memoize.js","webpack://PIXI.live2d/./node_modules/lodash/property.js","webpack://PIXI.live2d/./node_modules/lodash/pull.js","webpack://PIXI.live2d/./node_modules/lodash/pullAll.js","webpack://PIXI.live2d/./node_modules/lodash/stubArray.js","webpack://PIXI.live2d/./node_modules/lodash/stubFalse.js","webpack://PIXI.live2d/./node_modules/lodash/toString.js","webpack://PIXI.live2d/./src/cubism4/check-runtime.ts","webpack://PIXI.live2d/external umd {\"commonjs\":\"@pixi/core\",\"commonjs2\":\"@pixi/core\",\"amd\":\"@pixi/core\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/external umd {\"commonjs\":\"@pixi/display\",\"commonjs2\":\"@pixi/display\",\"amd\":\"@pixi/display\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/external umd {\"commonjs\":\"@pixi/graphics\",\"commonjs2\":\"@pixi/graphics\",\"amd\":\"@pixi/graphics\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/external umd {\"commonjs\":\"@pixi/math\",\"commonjs2\":\"@pixi/math\",\"amd\":\"@pixi/math\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/external umd {\"commonjs\":\"@pixi/text\",\"commonjs2\":\"@pixi/text\",\"amd\":\"@pixi/text\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/external umd {\"commonjs\":\"@pixi/utils\",\"commonjs2\":\"@pixi/utils\",\"amd\":\"@pixi/utils\",\"root\":[\"PIXI\",\"utils\"]}","webpack://PIXI.live2d/webpack/bootstrap","webpack://PIXI.live2d/webpack/runtime/compat get default export","webpack://PIXI.live2d/webpack/runtime/define property getters","webpack://PIXI.live2d/webpack/runtime/global","webpack://PIXI.live2d/webpack/runtime/hasOwnProperty shorthand","webpack://PIXI.live2d/webpack/runtime/make namespace object","webpack://PIXI.live2d/webpack/runtime/node module decorator","webpack://PIXI.live2d/./src/cubism-common/constants.ts","webpack://PIXI.live2d/./src/config.ts","webpack://PIXI.live2d/./src/utils/log.ts","webpack://PIXI.live2d/./src/utils/math.ts","webpack://PIXI.live2d/./src/utils/obj.ts","webpack://PIXI.live2d/./src/utils/string.ts","webpack://PIXI.live2d/./src/cubism-common/MotionState.ts","webpack://PIXI.live2d/./src/cubism-common/ExpressionManager.ts","webpack://PIXI.live2d/./src/cubism-common/FocusController.ts","webpack://PIXI.live2d/./src/cubism-common/ModelSettings.ts","webpack://PIXI.live2d/./src/cubism-common/SoundManager.ts","webpack://PIXI.live2d/./src/cubism-common/MotionManager.ts","webpack://PIXI.live2d/./src/cubism-common/InternalModel.ts","webpack://PIXI.live2d/./src/factory/XHRLoader.ts","webpack://PIXI.live2d/./src/utils/middleware.ts","webpack://PIXI.live2d/./src/factory/Live2DLoader.ts","webpack://PIXI.live2d/./src/factory/model-middlewares.ts","webpack://PIXI.live2d/./src/factory/texture.ts","webpack://PIXI.live2d/./src/factory/Live2DFactory.ts","webpack://PIXI.live2d/./src/InteractionMixin.ts","webpack://PIXI.live2d/./src/Live2DTransform.ts","webpack://PIXI.live2d/./src/Live2DModel.ts","webpack://PIXI.live2d/./src/factory/FileLoader.ts","webpack://PIXI.live2d/./src/factory/ZipLoader.ts","webpack://PIXI.live2d/./src/tools/HitAreaFrames.ts","webpack://PIXI.live2d/./cubism/src/rendering/cubismrenderer.ts","webpack://PIXI.live2d/./cubism/src/math/cubismvector2.ts","webpack://PIXI.live2d/./cubism/src/math/cubismmath.ts","webpack://PIXI.live2d/./cubism/src/math/cubismmatrix44.ts","webpack://PIXI.live2d/./cubism/src/live2dcubismframework.ts","webpack://PIXI.live2d/./cubism/src/utils/cubismdebug.ts","webpack://PIXI.live2d/./cubism/src/motion/acubismmotion.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismexpressionmotion.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismmotionqueueentry.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismmotionqueuemanager.ts","webpack://PIXI.live2d/./src/cubism4/Cubism4ExpressionManager.ts","webpack://PIXI.live2d/./cubism/src/settings/cubismmodelsettingsjson.ts","webpack://PIXI.live2d/./src/cubism4/Cubism4ModelSettings.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismmotioninternal.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismmotionjson.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismmotion.ts","webpack://PIXI.live2d/./src/cubism4/Cubism4MotionManager.ts","webpack://PIXI.live2d/./cubism/src/cubismdefaultparameterid.ts","webpack://PIXI.live2d/./cubism/src/effect/cubismbreath.ts","webpack://PIXI.live2d/./cubism/src/effect/cubismeyeblink.ts","webpack://PIXI.live2d/./cubism/src/config.ts","webpack://PIXI.live2d/./cubism/src/type/csmrectf.ts","webpack://PIXI.live2d/./cubism/src/rendering/cubismrenderer_webgl.ts","webpack://PIXI.live2d/./src/cubism4/Cubism4InternalModel.ts","webpack://PIXI.live2d/./src/cubism4/setup.ts","webpack://PIXI.live2d/./cubism/src/effect/cubismpose.ts","webpack://PIXI.live2d/./cubism/src/model/cubismmodel.ts","webpack://PIXI.live2d/./cubism/src/model/cubismmoc.ts","webpack://PIXI.live2d/./cubism/src/physics/cubismphysicsinternal.ts","webpack://PIXI.live2d/./cubism/src/physics/cubismphysicsjson.ts","webpack://PIXI.live2d/./cubism/src/physics/cubismphysics.ts","webpack://PIXI.live2d/./src/cubism4/factory.ts","webpack://PIXI.live2d/./cubism/src/model/cubismmodeluserdatajson.ts","webpack://PIXI.live2d/./cubism/src/model/cubismmodeluserdata.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismmotionmanager.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@pixi/utils\"), require(\"@pixi/math\"), require(\"@pixi/core\"), require(\"@pixi/display\"), require(\"@pixi/graphics\"), require(\"@pixi/text\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@pixi/utils\", \"@pixi/math\", \"@pixi/core\", \"@pixi/display\", \"@pixi/graphics\", \"@pixi/text\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PIXI\"] = factory(require(\"@pixi/utils\"), require(\"@pixi/math\"), require(\"@pixi/core\"), require(\"@pixi/display\"), require(\"@pixi/graphics\"), require(\"@pixi/text\"));\n\telse\n\t\troot[\"PIXI\"] = root[\"PIXI\"] || {}, root[\"PIXI\"][\"live2d\"] = factory(root[\"PIXI\"][\"utils\"], root[\"PIXI\"], root[\"PIXI\"], root[\"PIXI\"], root[\"PIXI\"], root[\"PIXI\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__5072__, __WEBPACK_EXTERNAL_MODULE__4893__, __WEBPACK_EXTERNAL_MODULE__8704__, __WEBPACK_EXTERNAL_MODULE__8623__, __WEBPACK_EXTERNAL_MODULE__5417__, __WEBPACK_EXTERNAL_MODULE__5888__) => {\nreturn ","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOfWith;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var arrayMap = require('./_arrayMap'),\n    baseIndexOf = require('./_baseIndexOf'),\n    baseIndexOfWith = require('./_baseIndexOfWith'),\n    baseUnary = require('./_baseUnary'),\n    copyArray = require('./_copyArray');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAll;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nmodule.exports = mapKeys;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseRest = require('./_baseRest'),\n    pullAll = require('./pullAll');\n\n/**\n * Removes all given values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n * to remove elements from an array by predicate.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pull(array, 'a', 'c');\n * console.log(array);\n * // => ['b', 'b']\n */\nvar pull = baseRest(pullAll);\n\nmodule.exports = pull;\n","var basePullAll = require('./_basePullAll');\n\n/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pullAll(array, ['a', 'c']);\n * console.log(array);\n * // => ['b', 'b']\n */\nfunction pullAll(array, values) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values)\n    : array;\n}\n\nmodule.exports = pullAll;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","if (!(window as any).Live2DCubismCore) {\n    throw new Error('Cannot find Cubism 4 runtime. Did you forget to include the live2dcubismcore.min.js?');\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8704__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8623__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5417__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4893__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5888__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5072__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","export const LOGICAL_WIDTH = 2;\nexport const LOGICAL_HEIGHT = 2;\n","/**\n * Global configs.\n */\nexport namespace config {\n    export const LOG_LEVEL_VERBOSE = 0;\n    export const LOG_LEVEL_WARNING = 1;\n    export const LOG_LEVEL_ERROR = 2;\n    export const LOG_LEVEL_NONE = 999;\n\n    declare const __PRODUCTION__: boolean;\n\n    /**\n     * Global log level.\n     * @default {@link LOG_LEVEL_WARNING}\n     */\n    export let logLevel = __PRODUCTION__ ? LOG_LEVEL_WARNING : LOG_LEVEL_VERBOSE;\n\n    /**\n     * Enabling sound for motions.\n     */\n    export let sound = true;\n\n    /**\n     * Deferring motion and corresponding sound until both are loaded.\n     */\n    export let motionSync = true;\n\n    /**\n     * Default fading duration for motions without such value specified.\n     */\n    export let motionFadingDuration = 500;\n\n    /**\n     * Default fading duration for idle motions without such value specified.\n     */\n    export let idleMotionFadingDuration = 2000;\n\n    /**\n     * Default fading duration for expressions without such value specified.\n     */\n    export let expressionFadingDuration = 500;\n\n    export let cubism4: {\n        /**\n         * Should masks support 4x4 division, which is unofficial and experimental.\n         * See [official manual](https://docs.live2d.com/cubism-sdk-manual/ow-sdk-mask-premake-web/?locale=en_us).\n         * @default true\n         */\n        supportMoreMaskDivisions: boolean;\n    } | undefined;\n}\n\ndeclare const __VERSION__: string;\n\n/**\n * Consistent with the `version` in package.json.\n */\nexport const VERSION = __VERSION__;\n","import { config } from '@/config';\n\n/**\n * A simple tagged logger.\n *\n * You can replace the methods with your own ones.\n *\n * ```js\n * import { logger } from 'pixi-live2d-display';\n *\n * logger.log = (tag, ...messages) => {\n *     console.log(tag, 'says:', ...messages);\n * };\n * ```\n */\nexport namespace logger {\n    export function log(tag: string, ...messages: any[]) {\n        if (config.logLevel <= config.LOG_LEVEL_VERBOSE) {\n            console.log(`[${tag}]`, ...messages);\n        }\n    }\n\n    export function warn(tag: string, ...messages: any[]) {\n        if (config.logLevel <= config.LOG_LEVEL_WARNING) {\n            console.warn(`[${tag}]`, ...messages);\n        }\n    }\n\n    export function error(tag: string, ...messages: any[]) {\n        if (config.logLevel <= config.LOG_LEVEL_ERROR) {\n            console.error(`[${tag}]`, ...messages);\n        }\n    }\n}\n","/**\n * These functions can be slightly faster than the ones in Lodash.\n * @packageDocumentation\n */\n\nexport function clamp(num: number, lower: number, upper: number) {\n    return num < lower ? lower : num > upper ? upper : num;\n}\n\nexport function rand(min: number, max: number) {\n    return Math.random() * (max - min) + min;\n}\n","/**\n * Copies a property at only if it matches the `type`.\n * @param type - Type expected to match `typeof` on the property.\n * @param from - Source object.\n * @param to - Destination object.\n * @param fromKey - Key of the property in source object.\n * @param toKey - Key of the property in destination object.\n */\n// TODO: lint and fix the formatting!\nexport function copyProperty<From, FromKey extends keyof From, ToKey extends keyof any, To extends Partial<Record<ToKey, From[FromKey]>>>(type: string, from: From, to: To, fromKey: FromKey, toKey: ToKey) {\n    const value = from[fromKey];\n\n    if (value !== null && typeof value === type) {\n        // a type error will occur here, have no idea\n        to[toKey] = value as any;\n    }\n}\n\n/**\n * Copies an array at `key`, filtering the items that match the `type`.\n * @param type - Type expected to match `typeof` on the items.\n * @param from - Source object.\n * @param to - Destination object.\n * @param fromKey - Key of the array property in source object.\n * @param toKey - Key of the array property in destination object.\n */\nexport function copyArray<FromKey extends keyof any, From extends Partial<Record<FromKey, any[]>>, ToKey extends keyof any, To extends Partial<Record<ToKey, any[]>>>(type: string, from: From, to: To, fromKey: FromKey, toKey: ToKey) {\n    const array = from[fromKey];\n\n    if (Array.isArray(array)) {\n        to[toKey] = array.filter(item => item !== null && typeof item === type) as any;\n    }\n}\n\n/**\n * @see {@link https://www.typescriptlang.org/docs/handbook/mixins.html}\n */\nexport function applyMixins(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            if (name !== 'constructor') {\n                Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name)!);\n            }\n        });\n    });\n}\n","/**\n * Gets the name of parent folder in a url.\n * @param url - URL of a file.\n * @return Name of the parent folder, or the file itself if it has no parent folder.\n */\nexport function folderName(url: string) {\n    let lastSlashIndex = url.lastIndexOf('/');\n\n    if (lastSlashIndex != -1) {\n        url = url.slice(0, lastSlashIndex);\n    }\n\n    lastSlashIndex = url.lastIndexOf('/');\n\n    if (lastSlashIndex !== -1) {\n        url = url.slice(lastSlashIndex + 1);\n    }\n\n    return url;\n}\n","import { logger } from '@/utils';\n\n/**\n * Indicates the motion priority.\n */\nexport enum MotionPriority {\n    /** States that the model is currently not playing any motion. This priority cannot be applied to a motion. */\n    NONE,\n\n    /** Low priority, used when starting idle motions automatically. */\n    IDLE,\n\n    /** Medium priority. */\n    NORMAL,\n\n    /** High priority. Motions as this priority will always be played regardless of the current priority. */\n    FORCE\n}\n\n/**\n * Handles the state of a MotionManager.\n */\nexport class MotionState {\n    /**\n     * Tag for logging.\n     */\n    tag!: string;\n\n    /**\n     * When enabled, the states will be dumped to the logger when an exception occurs.\n     */\n    debug = false;\n\n    /**\n     * Priority of the current motion. Will be `MotionPriority.NONE` if there's no playing motion.\n     */\n    currentPriority = MotionPriority.NONE;\n\n    /**\n     * Priority of the reserved motion, which is still in loading and will be played once loaded.\n     * Will be `MotionPriority.NONE` if there's no reserved motion.\n     */\n    reservePriority = MotionPriority.NONE;\n\n    /**\n     * Group of current motion.\n     */\n    currentGroup?: string;\n\n    /**\n     * Index of current motion in its group.\n     */\n    currentIndex?: number;\n\n    /**\n     * Group of the reserved motion.\n     */\n    reservedGroup?: string;\n\n    /**\n     * Index of the reserved motion in its group.\n     */\n    reservedIndex?: number;\n\n    /**\n     * Group of the reserved idle motion.\n     */\n    reservedIdleGroup?: string;\n\n    /**\n     * Index of the reserved idle motion in its group.\n     */\n    reservedIdleIndex?: number;\n\n    /**\n     * Reserves the playback for a motion.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @param priority - The priority to be applied.\n     * @return True if the reserving has succeeded.\n     */\n    reserve(group: string, index: number, priority: MotionPriority): boolean {\n        if (priority <= MotionPriority.NONE) {\n            logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n            return false;\n        }\n\n        if (group === this.currentGroup && index === this.currentIndex) {\n            logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n            return false;\n        }\n\n        if ((group === this.reservedGroup && index === this.reservedIndex) || (group === this.reservedIdleGroup && index === this.reservedIdleIndex)) {\n            logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n            return false;\n        }\n\n        if (priority === MotionPriority.IDLE) {\n            if (this.currentPriority !== MotionPriority.NONE) {\n                logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n                return false;\n            }\n\n            if (this.reservedIdleGroup !== undefined) {\n                logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n                return false;\n            }\n\n            this.setReservedIdle(group, index);\n        } else {\n            if (priority < MotionPriority.FORCE) {\n                if (priority <= this.currentPriority) {\n                    logger.log(this.tag, 'Cannot start motion because another motion is playing as an equivalent or higher priority.', this.dump(group, index));\n                    return false;\n                }\n\n                if (priority <= this.reservePriority) {\n                    logger.log(this.tag, 'Cannot start motion because another motion has reserved as an equivalent or higher priority.', this.dump(group, index));\n                    return false;\n                }\n            }\n\n            this.setReserved(group, index, priority);\n        }\n\n        return true;\n    }\n\n    /**\n     * Requests the playback for a motion.\n     * @param motion - The Motion, can be undefined.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @param priority - The priority to be applied.\n     * @return True if the request has been approved, i.e. the motion is allowed to play.\n     */\n    start(motion: any, group: string, index: number, priority: MotionPriority): boolean {\n        if (priority === MotionPriority.IDLE) {\n            this.setReservedIdle(undefined, undefined);\n\n            if (this.currentPriority !== MotionPriority.NONE) {\n                logger.log(this.tag, 'Cannot start idle motion because another motion is playing.', this.dump(group, index));\n                return false;\n            }\n        } else {\n            if (group !== this.reservedGroup || index !== this.reservedIndex) {\n                logger.log(this.tag, 'Cannot start motion because another motion has taken the place.', this.dump(group, index));\n                return false;\n            }\n\n            this.setReserved(undefined, undefined, MotionPriority.NONE);\n        }\n\n        if (!motion) {\n            return false;\n        }\n\n        this.setCurrent(group, index, priority);\n\n        return true;\n    }\n\n    /**\n     * Notifies the motion playback has finished.\n     */\n    complete() {\n        this.setCurrent(undefined, undefined, MotionPriority.NONE);\n    }\n\n    /**\n     * Sets the current motion.\n     */\n    setCurrent(group: string | undefined, index: number | undefined, priority: MotionPriority) {\n        this.currentPriority = priority;\n        this.currentGroup = group;\n        this.currentIndex = index;\n    }\n\n    /**\n     * Sets the reserved motion.\n     */\n    setReserved(group: string | undefined, index: number | undefined, priority: MotionPriority) {\n        this.reservePriority = priority;\n        this.reservedGroup = group;\n        this.reservedIndex = index;\n    }\n\n    /**\n     * Sets the reserved idle motion.\n     */\n    setReservedIdle(group: string | undefined, index: number | undefined) {\n        this.reservedIdleGroup = group;\n        this.reservedIdleIndex = index;\n    }\n\n    /**\n     * Checks if a Motion is currently playing or has reserved.\n     * @return True if active.\n     */\n    isActive(group: string, index: number): boolean {\n        return (group === this.currentGroup && index === this.currentIndex)\n            || (group === this.reservedGroup && index === this.reservedIndex)\n            || (group === this.reservedIdleGroup && index === this.reservedIdleIndex);\n    }\n\n    /**\n     * Resets the state.\n     */\n    reset() {\n        this.setCurrent(undefined, undefined, MotionPriority.NONE);\n\n        // make sure the reserved motions (if existing) won't start when they are loaded\n        this.setReserved(undefined, undefined, MotionPriority.NONE);\n        this.setReservedIdle(undefined, undefined);\n    }\n\n    /**\n     * Checks if an idle motion should be requests to play.\n     */\n    shouldRequestIdleMotion(): boolean {\n        return this.currentGroup === undefined && this.reservedIdleGroup === undefined;\n    }\n\n    /**\n     * Checks if the model's expression should be overridden by the motion.\n     */\n    shouldOverrideExpression(): boolean {\n        return this.currentPriority > MotionPriority.IDLE;\n    }\n\n    /**\n     * Dumps the state for debugging.\n     */\n    dump(requestedGroup?: string, requestedIndex?: number): string {\n        if (this.debug) {\n            const keys: (keyof this & string)[] = [\n                'currentPriority',\n                'reservePriority',\n                'currentGroup',\n                'currentIndex',\n                'reservedGroup',\n                'reservedIndex',\n                'reservedIdleGroup',\n                'reservedIdleIndex',\n            ];\n            return `\\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\\n` + keys.map(key => '[' + key + '] ' + this[key]).join('\\n');\n        }\n        return '';\n    }\n}\n","import { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport { logger } from '@/utils';\nimport { EventEmitter } from '@pixi/utils';\n\n/**\n * Abstract expression manager.\n * @emits {@link ExpressionManagerEvents}\n */\nexport abstract class ExpressionManager<Expression = any, ExpressionSpec = any> extends EventEmitter {\n    /**\n     * Tag for logging.\n     */\n    tag: string;\n\n    /**\n     * Expression definitions copied from ModelSettings.\n     */\n    abstract readonly definitions: ExpressionSpec[];\n\n    /**\n     * The ModelSettings reference.\n     */\n    readonly settings: ModelSettings;\n\n    /**\n     * The Expressions. The structure is the same as {@link definitions}, initially there's only\n     * an empty array, which means all expressions will be `undefined`. When an Expression has\n     * been loaded, it'll fill the place in which it should be; when it fails to load,\n     * the place will be filled with `null`.\n     */\n    expressions: (Expression | null | undefined)[] = [];\n\n    /**\n     * An empty Expression to reset all the expression parameters.\n     */\n    defaultExpression!: Expression;\n\n    /**\n     * Current Expression. This will not be overwritten by the {@link defaultExpression}.\n     */\n    currentExpression!: Expression;\n\n    /**\n     * The pending Expression.\n     */\n    reserveExpressionIndex = -1;\n\n    /**\n     * Flags the instance has been destroyed.\n     */\n    destroyed = false;\n\n    protected constructor(settings: ModelSettings, options?: MotionManagerOptions) {\n        super();\n        this.settings = settings;\n        this.tag = `ExpressionManager(${settings.name})`;\n    }\n\n    /**\n     * Should be called in the constructor of derived class.\n     */\n    protected init() {\n        this.defaultExpression = this.createExpression({}, undefined);\n        this.currentExpression = this.defaultExpression;\n\n        this.stopAllExpressions();\n    }\n\n    /**\n     * Loads an Expression. Errors in this method will not be thrown,\n     * but be emitted with an \"expressionLoadError\" event.\n     * @param index - Index of the expression in definitions.\n     * @return Promise that resolves with the Expression, or with undefined if it can't be loaded.\n     * @emits {@link ExpressionManagerEvents.expressionLoaded}\n     * @emits {@link ExpressionManagerEvents.expressionLoadError}\n     */\n    protected async loadExpression(index: number): Promise<Expression | undefined> {\n        if (!this.definitions[index]) {\n            logger.warn(this.tag, `Undefined expression at [${index}]`);\n            return undefined;\n        }\n\n        if (this.expressions[index] === null) {\n            logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n            return undefined;\n        }\n\n        if (this.expressions[index]) {\n            return this.expressions[index] as Expression;\n        }\n\n        const expression = await this._loadExpression(index);\n\n        this.expressions[index] = expression;\n\n        return expression;\n    }\n\n    /**\n     * Loads the Expression. Will be implemented by Live2DFactory.\n     * @ignore\n     */\n    private _loadExpression(index: number): Promise<Expression | undefined> {\n        throw new Error('Not implemented.');\n    }\n\n    /**\n     * Sets a random Expression that differs from current one.\n     * @return Promise that resolves with true if succeeded, with false otherwise.\n     */\n    async setRandomExpression(): Promise<boolean> {\n        if (this.definitions.length) {\n            const availableIndices = [];\n\n            for (let i = 0; i < this.definitions.length; i++) {\n                if (\n                    this.expressions[i] !== null\n                    && this.expressions[i] !== this.currentExpression\n                    && i !== this.reserveExpressionIndex\n                ) {\n                    availableIndices.push(i);\n                }\n            }\n\n            if (availableIndices.length) {\n                const index = Math.floor(Math.random() * availableIndices.length);\n\n                return this.setExpression(index);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Resets model's expression using {@link defaultExpression}.\n     */\n    resetExpression(): void {\n        this._setExpression(this.defaultExpression);\n    }\n\n    /**\n     * Restores model's expression to {@link currentExpression}.\n     */\n    restoreExpression(): void {\n        this._setExpression(this.currentExpression);\n    }\n\n    /**\n     * Sets an Expression.\n     * @param index - Either the index, or the name of the expression.\n     * @return Promise that resolves with true if succeeded, with false otherwise.\n     */\n    async setExpression(index: number | string): Promise<boolean> {\n        if (typeof index !== 'number') {\n            index = this.getExpressionIndex(index);\n        }\n\n        if (!(index > -1 && index < this.definitions.length)) {\n            return false;\n        }\n\n        if (index === this.expressions.indexOf(this.currentExpression)) {\n            return false;\n        }\n\n        this.reserveExpressionIndex = index;\n\n        const expression = await this.loadExpression(index);\n\n        if (!expression || this.reserveExpressionIndex !== index) {\n            return false;\n        }\n\n        this.reserveExpressionIndex = -1;\n        this.currentExpression = expression;\n        this._setExpression(expression);\n\n        return true;\n    }\n\n    /**\n     * Updates parameters of the core model.\n     * @return True if the parameters are actually updated.\n     */\n    update(model: object, now: DOMHighResTimeStamp) {\n        if (!this.isFinished()) {\n            return this.updateParameters(model, now);\n        }\n\n        return false;\n    }\n\n    /**\n     * Destroys the instance.\n     * @emits {@link ExpressionManagerEvents.destroy}\n     */\n    destroy() {\n        this.destroyed = true;\n        this.emit('destroy');\n\n        const self = this as Mutable<Partial<this>>;\n        self.definitions = undefined;\n        self.expressions = undefined;\n    }\n\n    /**\n     * Checks if the expression playback has finished.\n     */\n    abstract isFinished(): boolean;\n\n    /**\n     * Retrieves the expression's index by its name.\n     * @return The index. `-1` if not found.\n     */\n    abstract getExpressionIndex(name: string): number;\n\n    /**\n     * Retrieves the expression's file path by its definition.\n     * @return The file path extracted from given definition. Not resolved.\n     */\n    abstract getExpressionFile(definition: ExpressionSpec): string;\n\n    /**\n     * Creates an Expression from the data.\n     * @param data - Content of the expression file.\n     * @param definition - The expression definition. Can be undefined when creating the {@link defaultExpression}.\n     * @return The created Expression.\n     */\n    abstract createExpression(data: JSONObject, definition: ExpressionSpec | undefined): Expression;\n\n    /**\n     * Applies the Expression to the model.\n     */\n    protected abstract _setExpression(motion: Expression): number;\n\n    /**\n     * Cancels expression playback.\n     */\n    protected abstract stopAllExpressions(): void;\n\n    /**\n     * Updates parameters of the core model.\n     * @return True if the parameters are actually updated.\n     */\n    protected abstract updateParameters(model: object, now: DOMHighResTimeStamp): boolean;\n}\n","import { clamp } from '@/utils';\n\n// Minimum distance to respond\nconst EPSILON = 0.01;\n\nconst MAX_SPEED = 40 / 7.5;\n\n// the time to accelerate to max speed\nconst ACCELERATION_TIME = 1 / (0.15 * 1000);\n\n/**\n * Interpolates the transition of focus position.\n */\nexport class FocusController {\n    /** The focus position. */\n    targetX = 0;\n\n    /** The focus position. */\n    targetY = 0;\n\n    /** Current position. */\n    x = 0;\n\n    /** Current position. */\n    y = 0;\n\n    /** Current velocity. */\n    vx = 0;\n\n    /** Current velocity. */\n    vy = 0;\n\n    /**\n     * Sets the focus position.\n     * @param x - X position in range `[-1, 1]`.\n     * @param y - Y position in range `[-1, 1]`.\n     * @param instant - Should the focus position be instantly applied.\n     */\n    focus(x: number, y: number, instant: boolean = false) {\n        this.targetX = clamp(x, -1, 1);\n        this.targetY = clamp(y, -1, 1);\n\n        if (instant) {\n            this.x = this.targetX;\n            this.y = this.targetY;\n        }\n    }\n\n    /**\n     * Updates the interpolation.\n     * @param dt - Delta time in milliseconds.\n     */\n    update(dt: DOMHighResTimeStamp) {\n        const dx = this.targetX - this.x;\n        const dy = this.targetY - this.y;\n\n        if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON) return;\n\n        const d = Math.sqrt(dx ** 2 + dy ** 2);\n        const maxSpeed = MAX_SPEED / (1000 / dt);\n\n        let ax = maxSpeed * (dx / d) - this.vx;\n        let ay = maxSpeed * (dy / d) - this.vy;\n\n        const a = Math.sqrt(ax ** 2 + ay ** 2);\n        const maxA = maxSpeed * ACCELERATION_TIME * dt;\n\n        if (a > maxA) {\n            ax *= maxA / a;\n            ay *= maxA / a;\n        }\n\n        this.vx += ax;\n        this.vy += ay;\n\n        const v = Math.sqrt(this.vx ** 2 + this.vy ** 2);\n        const maxV = 0.5 * (Math.sqrt(maxA ** 2 + 8 * maxA * d) - maxA);\n\n        if (v > maxV) {\n            this.vx *= maxV / v;\n            this.vy *= maxV / v;\n        }\n\n        this.x += this.vx;\n        this.y += this.vy;\n    }\n}\n","import { folderName } from '@/utils';\nimport { url } from '@pixi/utils';\n\n/**\n * Parses, and provides access to the settings JSON.\n */\nexport abstract class ModelSettings {\n    json: JSONObject;\n\n    /**\n     * The model's name, typically used for displaying or logging. By default it's inferred from\n     * the URL by taking the folder name (the second to last component). In Cubism 2 it'll be overwritten\n     * by the `name` field of settings JSON.\n     */\n    name: string;\n\n    /**\n     * URL of the model settings file, used to resolve paths of the resource files defined in settings.\n     * This typically ends with `.model.json` in Cubism 2 and `.model3.json` in Cubism 4.\n     */\n    url: string;\n\n    /**\n     * Relative path of he moc file, typically ends with `.moc` in Cubism 2 and `.moc3` in Cubism 4.\n     */\n    abstract moc: string;\n\n    /**\n     * Relative paths of the texture images.\n     */\n    abstract textures: string[];\n\n    /**\n     * Relative path of the pose file.\n     */\n    pose?: string;\n\n    /**\n     * Relative path of the physics file.\n     */\n    physics?: string;\n\n    /**\n     * @param json - The settings JSON object.\n     * @param json.url - The `url` field must be defined to specify the settings file's URL.\n     */\n    protected constructor(json: JSONObject & { url: string }) {\n        this.json = json;\n\n        let url = (json as any).url;\n\n        if (typeof url !== 'string') {\n            // this is not allowed because it'll typically result in errors, including a\n            // fatal error - an OOM that crashes the browser while initializing this cubism2 model,\n            // I'm not kidding!\n            throw new TypeError('The `url` field in settings JSON must be defined as a string.');\n        }\n\n        this.url = url;\n\n        // set default name to folder's name\n        this.name = folderName(this.url);\n    }\n\n    /**\n     * Resolves a relative path using the {@link url}. This is used to resolve the resource files\n     * defined in the settings.\n     * @param path - Relative path.\n     * @return Resolved path.\n     */\n    resolveURL(path: string): string {\n        return url.resolve(this.url, path);\n    }\n\n    /**\n     * Replaces the resource files by running each file through the `replacer`.\n     * @param replacer - Invoked with two arguments: `(file, path)`, where `file` is the file definition,\n     * and `path` is its property path in the ModelSettings instance. A string must be returned to be the replacement.\n     *\n     * ```js\n     * modelSettings.replaceFiles((file, path) => {\n     *     // file = \"foo.moc\", path = \"moc\"\n     *     // file = \"foo.png\", path = \"textures[0]\"\n     *     // file = \"foo.mtn\", path = \"motions.idle[0].file\"\n     *     // file = \"foo.motion3.json\", path = \"motions.idle[0].File\"\n     *\n     *     return \"bar/\" + file;\n     * });\n     * ```\n     */\n    replaceFiles(replacer: (file: string, path: string) => string) {\n        this.moc = replacer(this.moc, 'moc');\n\n        if (this.pose !== undefined) {\n            (this.pose = replacer(this.pose, 'pose'));\n        }\n\n        if (this.physics !== undefined) {\n            (this.physics = replacer(this.physics, 'physics'));\n        }\n\n        for (let i = 0; i < this.textures.length; i++) {\n            this.textures[i] = replacer(this.textures[i]!, `textures[${i}]`);\n        }\n    };\n\n    /**\n     * Retrieves all resource files defined in the settings.\n     * @return A flat array of the paths of all resource files.\n     *\n     * ```js\n     * modelSettings.getDefinedFiles();\n     * // returns: [\"foo.moc\", \"foo.png\", ...]\n     * ```\n     */\n    getDefinedFiles(): string[] {\n        const files: string[] = [];\n\n        this.replaceFiles((file: string) => {\n            files.push(file);\n\n            return file;\n        });\n\n        return files;\n    }\n\n    /**\n     * Validates that the files defined in the settings exist in given files. Each file will be\n     * resolved by {@link resolveURL} before comparison.\n     * @param files - A flat array of file paths.\n     * @return All the files which are defined in the settings and also exist in given files,\n     * *including the optional files*.\n     * @throws Error if any *essential* file is defined in settings but not included in given files.\n     */\n    validateFiles(files: string[]): string[] {\n        const assertFileExists = (expectedFile: string, shouldThrow: boolean): boolean => {\n            const actualPath = this.resolveURL(expectedFile);\n\n            if (!files.includes(actualPath)) {\n                if (shouldThrow) {\n                    throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n                }\n\n                return false;\n            }\n\n            return true;\n        };\n\n        const essentialFiles = [this.moc, ...this.textures];\n\n        essentialFiles.forEach(texture => assertFileExists(texture, true));\n\n        const definedFiles = this.getDefinedFiles();\n\n        return definedFiles.filter(file => assertFileExists(file, false));\n    }\n}\n","import { logger } from '@/utils';\nimport pull from 'lodash/pull';\n\nconst TAG = 'SoundManager';\nconst VOLUME = 0.5;\n\n/**\n * Manages all the sounds.\n */\nexport class SoundManager {\n    /**\n     * Audio elements playing or pending to play. Finished audios will be removed automatically.\n     */\n    static audios: HTMLAudioElement[] = [];\n\n    protected static _volume = VOLUME;\n\n    /**\n     * Global volume that applies to all the sounds.\n     */\n    static get volume(): number {\n        return this._volume;\n    }\n\n    static set volume(value: number) {\n        this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n        this.audios.forEach(audio => (audio.volume = this._volume));\n    }\n\n    // TODO: return an ID?\n    /**\n     * Creates an audio element and adds it to the {@link audios}.\n     * @param file - URL of the sound file.\n     * @param onFinish - Callback invoked when the playback has finished.\n     * @param onError - Callback invoked when error occurs.\n     * @return Created audio element.\n     */\n    static add(file: string, onFinish?: () => void, onError?: (e: Error) => void): HTMLAudioElement {\n        const audio = new Audio(file);\n\n        audio.volume = this._volume;\n        audio.preload = 'auto';\n\n        audio.addEventListener('ended', () => {\n            this.dispose(audio);\n            onFinish?.();\n        });\n\n        audio.addEventListener('error', (e: ErrorEvent) => {\n            this.dispose(audio);\n            logger.warn(TAG, `Error occurred on \"${file}\"`, e.error);\n            onError?.(e.error);\n        });\n\n        this.audios.push(audio);\n\n        return audio;\n    }\n\n    /**\n     * Plays the sound.\n     * @param audio - An audio element.\n     * @return Promise that resolves when the audio is ready to play, rejects when error occurs.\n     */\n    static play(audio: HTMLAudioElement): Promise<void> {\n        return new Promise((resolve, reject) => {\n            // see https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n            audio.play()?.catch(e => {\n                audio.dispatchEvent(new ErrorEvent('error', { error: e }));\n                reject(e);\n            });\n\n            if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n                resolve();\n            } else {\n                audio.addEventListener('canplaythrough', resolve as () => void);\n            }\n        });\n    }\n\n    /**\n     * Disposes an audio element and removes it from {@link audios}.\n     * @param audio - An audio element.\n     */\n    static dispose(audio: HTMLAudioElement): void {\n        audio.pause();\n        audio.removeAttribute('src');\n\n        pull(this.audios, audio);\n    }\n\n    /**\n     * Destroys all managed audios.\n     */\n    static destroy(): void {\n        // dispose() removes given audio from the array, so the loop must be backward\n        for (let i = this.audios.length - 1; i >= 0; i--) {\n            this.dispose(this.audios[i]!);\n        }\n    }\n}\n","import { config } from '@/config';\nimport { ExpressionManager } from '@/cubism-common/ExpressionManager';\nimport { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { MotionPriority, MotionState } from '@/cubism-common/MotionState';\nimport { SoundManager } from '@/cubism-common/SoundManager';\nimport { logger } from '@/utils';\nimport { EventEmitter } from '@pixi/utils';\n\nexport interface MotionManagerOptions {\n    /**\n     * How to preload the motions.\n     * @default {@link MotionPreloadStrategy.NONE}\n     */\n    motionPreload?: MotionPreloadStrategy;\n\n    /**\n     * Specifies the idle motion group.\n     * @default \"idle\" in Cubism 2 and \"Idle\" in Cubism 4.\n     */\n    idleMotionGroup?: string;\n}\n\n/**\n * Indicates how the motions will be preloaded.\n */\nexport enum MotionPreloadStrategy {\n    /** Preload all the motions. */\n    ALL = 'ALL',\n\n    /** Preload only the idle motions. */\n    IDLE = 'IDLE',\n\n    /** No preload. */\n    NONE = 'NONE',\n}\n\n/**\n * Handles the motion playback.\n * @emits {@link MotionManagerEvents}\n */\nexport abstract class MotionManager<Motion = any, MotionSpec = any> extends EventEmitter {\n    /**\n     * Tag for logging.\n     */\n    tag: string;\n\n    /**\n     * Motion definitions copied from ModelSettings.\n     */\n    abstract readonly definitions: Partial<Record<string, MotionSpec[]>>;\n\n    /**\n     * Motion groups with particular internal usages. Currently there's only the `idle` field,\n     * which specifies the actual name of the idle motion group, so the idle motions\n     * can be correctly found from the settings JSON of various Cubism versions.\n     */\n    abstract readonly groups: { idle: string };\n\n    /**\n     * Indicates the content type of the motion files, varies in different Cubism versions.\n     * This will be used as `xhr.responseType`.\n     */\n    abstract readonly motionDataType: 'json' | 'arraybuffer';\n\n    /**\n     * Can be undefined if the settings defines no expression.\n     */\n    abstract expressionManager?: ExpressionManager;\n\n    /**\n     * The ModelSettings reference.\n     */\n    readonly settings: ModelSettings;\n\n    /**\n     * The Motions. The structure is the same as {@link definitions}, initially each group contains\n     * an empty array, which means all motions will be `undefined`. When a Motion has been loaded,\n     * it'll fill the place in which it should be; when it fails to load, the place will be filled\n     * with `null`.\n     */\n    motionGroups: Partial<Record<string, (Motion | undefined | null)[]>> = {};\n\n    /**\n     * Maintains the state of this MotionManager.\n     */\n    state = new MotionState();\n\n    /**\n     * Audio element of the current motion if a sound file is defined with it.\n     */\n    currentAudio?: HTMLAudioElement;\n\n    /**\n     * Flags there's a motion playing.\n     */\n    playing = false;\n\n    /**\n     * Flags the instances has been destroyed.\n     */\n    destroyed = false;\n\n    protected constructor(settings: ModelSettings, options?: MotionManagerOptions) {\n        super();\n        this.settings = settings;\n        this.tag = `MotionManager(${settings.name})`;\n        this.state.tag = this.tag;\n    }\n\n    /**\n     * Should be called in the constructor of derived class.\n     */\n    protected init(options?: MotionManagerOptions) {\n        if (options?.idleMotionGroup) {\n            this.groups.idle = options.idleMotionGroup;\n        }\n\n        this.setupMotions(options);\n        this.stopAllMotions();\n    }\n\n    /**\n     * Sets up motions from the definitions, and preloads them according to the preload strategy.\n     */\n    protected setupMotions(options?: MotionManagerOptions): void {\n        for (const group of Object.keys(this.definitions)) {\n            // init with the same structure of definitions\n            this.motionGroups[group] = [];\n        }\n\n        // preload motions\n\n        let groups;\n\n        switch (options?.motionPreload) {\n            case MotionPreloadStrategy.NONE:\n                return;\n\n            case MotionPreloadStrategy.ALL:\n                groups = Object.keys(this.definitions);\n                break;\n\n            case MotionPreloadStrategy.IDLE:\n            default:\n                groups = [this.groups.idle];\n                break;\n        }\n\n        for (const group of groups) {\n            if (this.definitions[group]) {\n                for (let i = 0; i < this.definitions[group]!.length; i++) {\n                    this.loadMotion(group, i).then();\n                }\n            }\n        }\n    }\n\n    /**\n     * Loads a Motion in a motion group. Errors in this method will not be thrown,\n     * but be emitted with a \"motionLoadError\" event.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @return Promise that resolves with the Motion, or with undefined if it can't be loaded.\n     * @emits {@link MotionManagerEvents.motionLoaded}\n     * @emits {@link MotionManagerEvents.motionLoadError}\n     */\n    async loadMotion(group: string, index: number): Promise<Motion | undefined> {\n        if (!this.definitions[group] ?. [index]) {\n            logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n            return undefined;\n        }\n\n        if (this.motionGroups[group]![index] === null) {\n            logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n            return undefined;\n        }\n\n        if (this.motionGroups[group]![index]) {\n            return this.motionGroups[group]![index]!;\n        }\n\n        const motion = await this._loadMotion(group, index);\n\n        if (this.destroyed) {\n            return;\n        }\n\n        this.motionGroups[group]![index] = motion ?? null;\n\n        return motion;\n    }\n\n    // TODO: remove\n    /**\n     * Loads the Motion. Will be implemented by Live2DFactory.\n     * @ignore\n     */\n    private _loadMotion(group: string, index: number): Promise<Motion | undefined> {\n        throw new Error('Not implemented.');\n    }\n\n    /**\n     * Starts a motion as given priority.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @param priority - The priority to be applied.\n     * @return Promise that resolves with true if the motion is successfully started, with false otherwise.\n     */\n    async startMotion(group: string, index: number, priority = MotionPriority.NORMAL): Promise<boolean> {\n        if (!this.state.reserve(group, index, priority)) {\n            return false;\n        }\n\n        const definition = this.definitions[group]?.[index];\n\n        if (!definition) {\n            return false;\n        }\n\n        if (this.currentAudio) {\n            // TODO: reuse the audio?\n            SoundManager.dispose(this.currentAudio);\n        }\n\n        let audio: HTMLAudioElement | undefined;\n\n        if (config.sound) {\n            const soundURL = this.getSoundFile(definition);\n\n            if (soundURL) {\n                try {\n                    // start to load the audio\n                    audio = SoundManager.add(\n                        this.settings.resolveURL(soundURL),\n                        () => this.currentAudio = undefined,\n                        () => this.currentAudio = undefined,\n                    );\n\n                    this.currentAudio = audio;\n                } catch (e) {\n                    logger.warn(this.tag, 'Failed to create audio', soundURL, e);\n                }\n            }\n        }\n\n        const motion = await this.loadMotion(group, index);\n\n        if (audio) {\n            const readyToPlay = SoundManager.play(audio)\n                .catch(e => logger.warn(this.tag, 'Failed to play audio', audio!.src, e));\n\n            if (config.motionSync) {\n                // wait until the audio is ready\n                await readyToPlay;\n            }\n        }\n\n        if (!this.state.start(motion, group, index, priority)) {\n            if (audio) {\n                SoundManager.dispose(audio);\n                this.currentAudio = undefined;\n            }\n\n            return false;\n        }\n\n        logger.log(this.tag, 'Start motion:', this.getMotionName(definition));\n\n        this.emit('motionStart', group, index, audio);\n\n        if (this.state.shouldOverrideExpression()) {\n            this.expressionManager && this.expressionManager.resetExpression();\n        }\n\n        this.playing = true;\n\n        this._startMotion(motion!);\n\n        return true;\n    }\n\n    /**\n     * Starts a random Motion as given priority.\n     * @param group - The motion group.\n     * @param priority - The priority to be applied.\n     * @return Promise that resolves with true if the motion is successfully started, with false otherwise.\n     */\n    async startRandomMotion(group: string, priority?: MotionPriority): Promise<boolean> {\n        const groupDefs = this.definitions[group];\n\n        if (groupDefs?.length) {\n            const availableIndices = [];\n\n            for (let i = 0; i < groupDefs!.length; i++) {\n                if (this.motionGroups[group]![i] !== null && !this.state.isActive(group, i)) {\n                    availableIndices.push(i);\n                }\n            }\n\n            if (availableIndices.length) {\n                const index = Math.floor(Math.random() * availableIndices.length);\n\n                return this.startMotion(group, availableIndices[index]!, priority);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Stops all playing motions as well as the sound.\n     */\n    stopAllMotions(): void {\n        this._stopAllMotions();\n\n        this.state.reset();\n\n        if (this.currentAudio) {\n            SoundManager.dispose(this.currentAudio);\n            this.currentAudio = undefined;\n        }\n    }\n\n    /**\n     * Updates parameters of the core model.\n     * @param model - The core model.\n     * @param now - Current time in milliseconds.\n     * @return True if the parameters have been actually updated.\n     */\n    update(model: object, now: DOMHighResTimeStamp): boolean {\n        if (this.isFinished()) {\n            if (this.playing) {\n                this.playing = false;\n                this.emit('motionFinish');\n            }\n\n            if (this.state.shouldOverrideExpression()) {\n                this.expressionManager?.restoreExpression();\n            }\n\n            this.state.complete();\n\n            if (this.state.shouldRequestIdleMotion()) {\n                // noinspection JSIgnoredPromiseFromCall\n                this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n            }\n        }\n\n        return this.updateParameters(model, now);\n    }\n\n    /**\n     * Destroys the instance.\n     * @emits {@link MotionManagerEvents.destroy}\n     */\n    destroy() {\n        this.destroyed = true;\n        this.emit('destroy');\n\n        this.stopAllMotions();\n        this.expressionManager?.destroy();\n\n        const self = this as Mutable<Partial<this>>;\n        self.definitions = undefined;\n        self.motionGroups = undefined;\n    }\n\n    /**\n     * Checks if the motion playback has finished.\n     */\n    abstract isFinished(): boolean;\n\n    /**\n     * Creates a Motion from the data.\n     * @param data - Content of the motion file. The format must be consistent with {@link motionDataType}.\n     * @param group - The motion group.\n     * @param definition - The motion definition.\n     * @return The created Motion.\n     */\n    abstract createMotion(data: ArrayBuffer | JSONObject, group: string, definition: MotionSpec): Motion;\n\n    /**\n     * Retrieves the motion's file path by its definition.\n     * @return The file path extracted from given definition. Not resolved.\n     */\n    abstract getMotionFile(definition: MotionSpec): string;\n\n    /**\n     * Retrieves the motion's name by its definition.\n     * @return The motion's name.\n     */\n    protected abstract getMotionName(definition: MotionSpec): string;\n\n    /**\n     * Retrieves the motion's sound file by its definition.\n     * @return The motion's sound file, can be undefined.\n     */\n    protected abstract getSoundFile(definition: MotionSpec): string | undefined;\n\n    /**\n     * Starts the Motion.\n     */\n    protected abstract _startMotion(motion: Motion, onFinish?: (motion: Motion) => void): number;\n\n    /**\n     * Stops all playing motions.\n     */\n    protected abstract _stopAllMotions(): void;\n\n    /**\n     * Updates parameters of the core model.\n     * @param model - The core model.\n     * @param now - Current time in milliseconds.\n     * @return True if the parameters have been actually updated.\n     */\n    protected abstract updateParameters(model: object, now: DOMHighResTimeStamp): boolean;\n}\n","import { LOGICAL_HEIGHT, LOGICAL_WIDTH } from '@/cubism-common/constants';\nimport { FocusController } from '@/cubism-common/FocusController';\nimport { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { MotionManager, MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport { Matrix } from '@pixi/math';\nimport { EventEmitter } from '@pixi/utils';\n\n/**\n * Common layout definition shared between all Cubism versions.\n */\nexport interface CommonLayout {\n    centerX?: number;\n    centerY?: number;\n    x?: number;\n    y?: number;\n    width?: number;\n    height?: number;\n    top?: number;\n    bottom?: number;\n    left?: number;\n    right?: number;\n}\n\n/**\n * Common hit area definition shared between all Cubism versions.\n */\nexport interface CommonHitArea {\n    id: string;\n    name: string;\n    index: number;\n}\n\nexport interface Bounds {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface InternalModelOptions extends MotionManagerOptions {}\n\nconst tempBounds: Bounds = { x: 0, y: 0, width: 0, height: 0 };\n\n/**\n * A wrapper that manages the states of a Live2D core model, and delegates all operations to it.\n * @emits {@link InternalModelEvents}\n */\nexport abstract class InternalModel extends EventEmitter {\n    /**\n     * The managed Live2D core model.\n     */\n    abstract readonly coreModel: object;\n\n    abstract readonly settings: ModelSettings;\n\n    focusController = new FocusController();\n\n    abstract motionManager: MotionManager;\n\n    pose?: any;\n    physics?: any;\n\n    /**\n     * Original canvas width of the model. Note this doesn't represent the model's real size,\n     * as the model can overflow from its canvas.\n     */\n    readonly originalWidth: number = 0;\n\n    /**\n     * Original canvas height of the model. Note this doesn't represent the model's real size,\n     * as the model can overflow from its canvas.\n     */\n    readonly originalHeight: number = 0;\n\n    /**\n     * Canvas width of the model, scaled by the `width` of the model's layout.\n     */\n    readonly width: number = 0;\n\n    /**\n     * Canvas height of the model, scaled by the `height` of the model's layout.\n     */\n    readonly height: number = 0;\n\n    /**\n     * Local transformation, calculated from the model's layout.\n     */\n    localTransform = new Matrix();\n\n    /**\n     * The final matrix to draw the model.\n     */\n    drawingMatrix = new Matrix();\n\n    // TODO: change structure\n    /**\n     * The hit area definitions, keyed by their names.\n     */\n    hitAreas: Record<string, CommonHitArea> = {};\n\n    /**\n     * Flags whether `gl.UNPACK_FLIP_Y_WEBGL` should be enabled when binding the textures.\n     */\n    textureFlipY = false;\n\n    /**\n     * WebGL viewport when drawing the model. The format is `[x, y, width, height]`.\n     */\n    viewport: [number, number, number, number] = [0, 0, 0, 0];\n\n    /**\n     * Flags this instance has been destroyed.\n     */\n    destroyed = false;\n\n    /**\n     * Should be called in the constructor of derived class.\n     */\n    protected init() {\n        this.setupLayout();\n        this.setupHitAreas();\n    }\n\n    /**\n     * Sets up the model's size and local transform by the model's layout.\n     */\n    protected setupLayout() {\n        // cast `this` to be mutable\n        const self = this as Mutable<this>;\n\n        const size = this.getSize();\n\n        self.originalWidth = size[0];\n        self.originalHeight = size[1];\n\n        const layout = Object.assign(\n            {\n                width: LOGICAL_WIDTH,\n                height: LOGICAL_HEIGHT,\n            },\n            this.getLayout(),\n        );\n\n        this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n\n        self.width = this.originalWidth * this.localTransform.a;\n        self.height = this.originalHeight * this.localTransform.d;\n\n        // this calculation differs from Live2D SDK...\n        const offsetX = (layout.x !== undefined && layout.x - layout.width / 2)\n            || (layout.centerX !== undefined && layout.centerX)\n            || (layout.left !== undefined && layout.left - layout.width / 2)\n            || (layout.right !== undefined && layout.right + layout.width / 2)\n            || 0;\n\n        const offsetY = (layout.y !== undefined && layout.y - layout.height / 2)\n            || (layout.centerY !== undefined && layout.centerY)\n            || (layout.top !== undefined && layout.top - layout.height / 2)\n            || (layout.bottom !== undefined && layout.bottom + layout.height / 2)\n            || 0;\n\n        this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n    }\n\n    /**\n     * Sets up the hit areas by their definitions in settings.\n     */\n    protected setupHitAreas() {\n        const definitions = this.getHitAreaDefs().filter(hitArea => hitArea.index >= 0);\n\n        for (const def of definitions) {\n            this.hitAreas[def.name] = def;\n        }\n    }\n\n    /**\n     * Hit-test on the model.\n     * @param x - Position in model canvas.\n     * @param y - Position in model canvas.\n     * @return The names of the *hit* hit areas. Can be empty if none is hit.\n     */\n    hitTest(x: number, y: number): string[] {\n        return Object.keys(this.hitAreas).filter(hitAreaName => this.isHit(hitAreaName, x, y));\n    }\n\n    /**\n     * Hit-test for a single hit area.\n     * @param hitAreaName - The hit area's name.\n     * @param x - Position in model canvas.\n     * @param y - Position in model canvas.\n     * @return True if hit.\n     */\n    isHit(hitAreaName: string, x: number, y: number): boolean {\n        if (!this.hitAreas[hitAreaName]) {\n            return false;\n        }\n\n        const drawIndex = this.hitAreas[hitAreaName]!.index;\n\n        const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n\n        return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n    }\n\n    /**\n     * Gets a drawable's bounds.\n     * @param index - Index of the drawable.\n     * @param bounds - Object to store the output values.\n     * @return The bounds in model canvas space.\n     */\n    getDrawableBounds(index: number, bounds?: Bounds): Bounds {\n        const vertices = this.getDrawableVertices(index);\n\n        let left = vertices[0]!;\n        let right = vertices[0]!;\n        let top = vertices[1]!;\n        let bottom = vertices[1]!;\n\n        for (let i = 0; i < vertices.length; i += 2) {\n            const vx = vertices[i]!;\n            const vy = vertices[i + 1]!;\n\n            left = Math.min(vx, left);\n            right = Math.max(vx, right);\n            top = Math.min(vy, top);\n            bottom = Math.max(vy, bottom);\n        }\n\n        bounds ??= {} as Bounds;\n\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left;\n        bounds.height = bottom - top;\n\n        return bounds;\n    }\n\n    /**\n     * Updates the model's transform.\n     * @param transform - The world transform.\n     */\n    updateTransform(transform: Matrix) {\n        this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n    }\n\n    /**\n     * Updates the model's parameters.\n     * @param dt - Elapsed time in milliseconds from last frame.\n     * @param now - Current time in milliseconds.\n     */\n    update(dt: DOMHighResTimeStamp, now: DOMHighResTimeStamp): void {\n        this.focusController.update(dt);\n    };\n\n    /**\n     * Destroys the model and all related resources.\n     * @emits {@link InternalModelEvents.destroy | destroy}\n     */\n    destroy() {\n        this.destroyed = true;\n        this.emit('destroy');\n\n        this.motionManager.destroy();\n        (this as Partial<this>).motionManager = undefined;\n    }\n\n    /**\n     * Gets all the hit area definitions.\n     * @return Normalized definitions.\n     */\n    protected abstract getHitAreaDefs(): CommonHitArea[];\n\n    /**\n     * Gets the model's original canvas size.\n     * @return `[width, height]`\n     */\n    protected abstract getSize(): [number, number];\n\n    /**\n     * Gets the layout definition.\n     * @return Normalized definition.\n     */\n    protected abstract getLayout(): CommonLayout;\n\n    /**\n     * Gets all the drawables' IDs.\n     * @return IDs.\n     */\n    abstract getDrawableIDs(): string[];\n\n    /**\n     * Finds the index of a drawable by its ID.\n     * @return The index.\n     */\n    abstract getDrawableIndex(id: string): number;\n\n    /**\n     * Gets a drawable's vertices.\n     * @param index - Either the index or the ID of the drawable.\n     * @throws Error when the drawable cannot be found.\n     */\n    abstract getDrawableVertices(index: number | string): Float32Array;\n\n    /**\n     * Updates WebGL context bound to this model.\n     * @param gl - WebGL context.\n     * @param glContextID - Unique ID for given WebGL context.\n     */\n    abstract updateWebGLContext(gl: WebGLRenderingContext, glContextID: number): void;\n\n    /**\n     * Binds a texture to the model. The index must be the same as that of this texture\n     * in the {@link ModelSettings.textures} array.\n     */\n    abstract bindTexture(index: number, texture: WebGLTexture): void;\n\n    /**\n     * Draws the model.\n     */\n    abstract draw(gl: WebGLRenderingContext): void;\n}\n","import { Live2DLoaderContext, Live2DLoaderTarget } from '@/factory/Live2DLoader';\nimport { logger } from '@/utils';\nimport { Middleware } from '@/utils/middleware';\n\nconst TAG = 'XHRLoader';\n\nclass NetworkError extends Error {\n    constructor(message: string, public url: string, public status: number, public aborted = false) {\n        super(message);\n    }\n}\n\n/**\n * The basic XHR loader.\n *\n * A network error will be thrown with the following properties:\n * - `url` - The request URL.\n * - `status` - The HTTP status.\n * - `aborted` - True if the error is caused by aborting the XHR.\n */\nexport class XHRLoader {\n    /**\n     * All the created XHRs, keyed by their owners respectively.\n     */\n    static xhrMap = new WeakMap<Live2DLoaderTarget, Set<XMLHttpRequest>>();\n\n    /**\n     * All the created XHRs as a flat array.\n     */\n    static allXhrSet = new Set<XMLHttpRequest>();\n\n    /**\n     * Middleware for Live2DLoader.\n     */\n    static loader: Middleware<Live2DLoaderContext> = (context, next) => {\n        return new Promise<void>((resolve, reject) => {\n            const xhr = XHRLoader.createXHR(\n                context.target,\n                context.settings ? context.settings.resolveURL(context.url) : context.url,\n                context.type,\n                data => {\n                    context.result = data;\n                    resolve();\n                },\n                reject,\n            );\n            xhr.send();\n        });\n    };\n\n    /**\n     * Creates a managed XHR.\n     * @param target - If provided, the XHR will be canceled when receiving an \"destroy\" event from the target.\n     * @param url - The URL.\n     * @param type - The XHR response type.\n     * @param onload - Load listener.\n     * @param onerror - Error handler.\n     */\n    static createXHR<T = any>(\n        target: Live2DLoaderTarget | undefined,\n        url: string,\n        type: XMLHttpRequestResponseType,\n        onload: (data: T) => void,\n        onerror: (e: Error) => void,\n    ): XMLHttpRequest {\n        const xhr = new XMLHttpRequest();\n\n        XHRLoader.allXhrSet.add(xhr);\n\n        if (target) {\n            let xhrSet = XHRLoader.xhrMap.get(target);\n\n            if (!xhrSet) {\n                xhrSet = new Set([xhr]);\n                XHRLoader.xhrMap.set(target, xhrSet);\n            } else {\n                xhrSet.add(xhr);\n            }\n\n            if (!target.listeners('destroy').includes(XHRLoader.cancelXHRs)) {\n                target.once('destroy', XHRLoader.cancelXHRs);\n            }\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = type;\n        xhr.onload = () => {\n            if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n                onload(xhr.response);\n            } else {\n                (xhr.onerror as any)();\n            }\n        };\n        xhr.onerror = () => {\n            logger.warn(TAG, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url}`);\n            onerror(new NetworkError('Network error.', url, xhr.status));\n        };\n        xhr.onabort = () => onerror(new NetworkError('Aborted.', url, xhr.status, true));\n        xhr.onloadend = () => {\n            XHRLoader.allXhrSet.delete(xhr);\n\n            if (target) {\n                XHRLoader.xhrMap.get(target)?.delete(xhr);\n            }\n        };\n\n        return xhr;\n    }\n\n    /**\n     * Cancels all XHRs related to this target.\n     */\n    static cancelXHRs(this: Live2DLoaderTarget) {\n        XHRLoader.xhrMap.get(this)?.forEach(xhr => {\n            xhr.abort();\n            XHRLoader.allXhrSet.delete(xhr);\n        });\n        XHRLoader.xhrMap.delete(this);\n    }\n\n    /**\n     * Release all XHRs.\n     */\n    static release() {\n        XHRLoader.allXhrSet.forEach(xhr => xhr.abort());\n        XHRLoader.allXhrSet.clear();\n        XHRLoader.xhrMap = new WeakMap();\n    }\n}\n","export type Middleware<T> = (context: T, next: (err?: any) => Promise<void>) => Promise<void>\n\n/**\n * Run middlewares with given context.\n * @see https://github.com/koajs/compose/blob/master/index.js\n *\n * @param middleware\n * @param context\n */\nexport function runMiddlewares<T>(middleware: Middleware<T>[], context: T): Promise<void> {\n    // last called middleware #\n    let index = -1;\n    return dispatch(0);\n\n    function dispatch(i: number, err?: Error): Promise<void> {\n        if (err) return Promise.reject(err);\n        if (i <= index) return Promise.reject(new Error('next() called multiple times'));\n        index = i;\n        const fn = middleware[i];\n        if (!fn) return Promise.resolve();\n        try {\n            return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    }\n}\n","import { ExpressionManager, InternalModel, ModelSettings, MotionManager } from '@/cubism-common';\nimport { XHRLoader } from '@/factory/XHRLoader';\nimport { Live2DModel } from '@/Live2DModel';\nimport { Middleware, runMiddlewares } from '@/utils/middleware';\n\nexport type Live2DLoaderTarget = Live2DModel | InternalModel | MotionManager | ExpressionManager\n\n/**\n * The context transferred through Live2DLoader middlewares.\n */\nexport interface Live2DLoaderContext {\n    /** The XHR's response type. */\n    type: XMLHttpRequestResponseType;\n\n    /** Will be resolved by {@link ModelSettings.resolveURL} if a ModelSettings is provided. */\n    url: string;\n\n    /** If provided, the given URL will be resolved by {@link ModelSettings.resolveURL}. */\n    settings?: ModelSettings;\n\n    /**\n     * Owner of this resource. The load task will be automatically canceled\n     * when receiving an \"destroy\" event from the target.\n     */\n    target?: Live2DLoaderTarget;\n\n    /** Loaded data. */\n    result?: any;\n}\n\nexport class Live2DLoader {\n    static middlewares: Middleware<Live2DLoaderContext>[] = [XHRLoader.loader];\n\n    /**\n     * Loads a resource.\n     * @return Promise that resolves with the loaded data in a format that's consistent with the specified `type`.\n     */\n    static load<T = any>(context: Live2DLoaderContext): Promise<T> {\n        return runMiddlewares(this.middlewares, context).then(() => context.result);\n    }\n}\n","import { Middleware } from '@/utils/middleware';\nimport { Live2DLoader } from '@/factory/Live2DLoader';\nimport { ModelSettings } from '@/cubism-common';\nimport { logger } from '@/utils';\nimport { createTexture } from '@/factory/texture';\nimport { Live2DFactory, Live2DFactoryContext } from '@/factory/Live2DFactory';\n\nconst TAG = 'Live2DFactory';\n\n/**\n * A middleware that converts the source from a URL to a settings JSON object.\n */\nexport const urlToJSON: Middleware<Live2DFactoryContext> = async (context, next) => {\n    if (typeof context.source === 'string') {\n        const data = await Live2DLoader.load({\n            url: context.source,\n            type: 'json',\n            target: context.live2dModel,\n        });\n\n        data.url = context.source;\n\n        context.source = data;\n\n        context.live2dModel.emit('settingsJSONLoaded', data);\n    }\n\n    return next();\n};\n\n/**\n * A middleware that converts the source from a settings JSON object to a ModelSettings instance.\n */\nexport const jsonToSettings: Middleware<Live2DFactoryContext> = async (context, next) => {\n    if (context.source instanceof ModelSettings) {\n        context.settings = context.source;\n\n        return next();\n    } else if (typeof context.source === 'object') {\n        const runtime = Live2DFactory.findRuntime(context.source);\n\n        if (runtime) {\n            const settings = runtime.createModelSettings(context.source);\n\n            context.settings = settings;\n            context.live2dModel.emit('settingsLoaded', settings);\n\n            return next();\n        }\n    }\n\n    throw new TypeError('Unknown settings format.');\n};\n\nexport const waitUntilReady: Middleware<Live2DFactoryContext> = (context, next) => {\n    if (context.settings) {\n        const runtime = Live2DFactory.findRuntime(context.settings);\n\n        if (runtime) {\n            return runtime.ready().then(next);\n        }\n    }\n\n    return next();\n};\n\n/**\n * A middleware that populates the Live2DModel with optional resources.\n * Requires InternalModel in context when all the subsequent middlewares have finished.\n */\nexport const setupOptionals: Middleware<Live2DFactoryContext> = async (context, next) => {\n    // wait until all has finished\n    await next();\n\n    const internalModel = context.internalModel;\n\n    if (internalModel) {\n        const settings = context.settings!;\n        const runtime = Live2DFactory.findRuntime(settings);\n\n        if (runtime) {\n            const tasks: Promise<void>[] = [];\n\n            if (settings.pose) {\n                tasks.push(\n                    Live2DLoader.load({\n                            settings,\n                            url: settings.pose,\n                            type: 'json',\n                            target: internalModel,\n                        })\n                        .then((data: ArrayBuffer) => {\n                            internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n                            context.live2dModel.emit('poseLoaded', internalModel.pose);\n                        })\n                        .catch((e: Error) => {\n                            context.live2dModel.emit('poseLoadError', e);\n                            logger.warn(TAG, 'Failed to load pose.', e);\n                        }),\n                );\n            }\n\n            if (settings.physics) {\n                tasks.push(\n                    Live2DLoader.load({\n                            settings,\n                            url: settings.physics,\n                            type: 'json',\n                            target: internalModel,\n                        })\n                        .then((data: ArrayBuffer) => {\n                            internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n                            context.live2dModel.emit('physicsLoaded', internalModel.physics);\n                        })\n                        .catch((e: Error) => {\n                            context.live2dModel.emit('physicsLoadError', e);\n                            logger.warn(TAG, 'Failed to load physics.', e);\n                        }),\n                );\n            }\n\n            if (tasks.length) {\n                await Promise.all(tasks);\n            }\n        }\n    }\n};\n\n/**\n * A middleware that populates the Live2DModel with essential resources.\n * Requires ModelSettings in context immediately, and InternalModel in context\n * when all the subsequent middlewares have finished.\n */\nexport const setupEssentials: Middleware<Live2DFactoryContext> = async (context, next) => {\n    if (context.settings) {\n        const live2DModel = context.live2dModel;\n\n        const textureLoadings = context.settings.textures.map(tex => {\n            const url = context.settings!.resolveURL(tex);\n            return createTexture(url, { crossOrigin: context.options.crossOrigin });\n        });\n\n        // wait for the internal model to be created\n        await next();\n\n        if (context.internalModel) {\n            live2DModel.internalModel = context.internalModel;\n            live2DModel.emit('modelLoaded', context.internalModel);\n        } else {\n            throw new TypeError('Missing internal model.');\n        }\n\n        live2DModel.textures = await Promise.all(textureLoadings);\n        live2DModel.emit('textureLoaded', live2DModel.textures);\n    } else {\n        throw new TypeError('Missing settings.');\n    }\n};\n\n/**\n * A middleware that creates the InternalModel. Requires ModelSettings in context.\n */\nexport const createInternalModel: Middleware<Live2DFactoryContext> = async (context, next) => {\n    const settings = context.settings;\n\n    if (settings instanceof ModelSettings) {\n        const runtime = Live2DFactory.findRuntime(settings);\n\n        if (!runtime) {\n            throw new TypeError('Unknown model settings.');\n        }\n\n        const modelData = await Live2DLoader.load<ArrayBuffer>({\n            settings,\n            url: settings.moc,\n            type: 'arraybuffer',\n            target: context.live2dModel,\n        });\n\n        if (!runtime.isValidMoc(modelData)) {\n            throw new Error('Invalid moc data');\n        }\n\n        const coreModel = runtime.createCoreModel(modelData);\n\n        context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n\n        return next();\n    }\n\n    throw new TypeError('Missing settings.');\n};\n","import { Texture } from '@pixi/core';\n\nexport function createTexture(url: string, options: { crossOrigin?: string } = {}): Promise<Texture> {\n    const textureOptions: any = { resourceOptions: { crossorigin: options.crossOrigin } };\n\n    // there's already such a method since Pixi v5.3.0\n    if ((Texture as any).fromURL) {\n        return Texture.fromURL(url, textureOptions).catch(e => {\n            if (e instanceof Error) {\n                throw e;\n            }\n\n            // assume e is an ErrorEvent, let's convert it to an Error\n            const err = new Error('Texture loading error');\n            (err as any).event = e;\n\n            throw err;\n        });\n    }\n\n    // and in order to provide backward compatibility for older Pixi versions,\n    // we have to manually implement this method\n    // see https://github.com/pixijs/pixi.js/pull/6687/files\n\n    textureOptions.resourceOptions.autoLoad = false;\n\n    const texture = Texture.from(url, textureOptions);\n\n    if (texture.baseTexture.valid) {\n        return Promise.resolve(texture);\n    }\n\n    const resource = texture.baseTexture.resource as any;\n\n    // before Pixi v5.2.2, the Promise will not be rejected when loading has failed,\n    // we have to manually handle the \"error\" event\n    // see https://github.com/pixijs/pixi.js/pull/6374\n    resource._live2d_load ??= new Promise<Texture>((resolve, reject) => {\n        const errorHandler = (event: ErrorEvent) => {\n            (resource.source as HTMLImageElement).removeEventListener('error', errorHandler);\n\n            // convert the ErrorEvent to an Error\n            const err = new Error('Texture loading error');\n            (err as any).event = event;\n\n            reject(err);\n        };\n\n        (resource.source as HTMLImageElement).addEventListener('error', errorHandler);\n\n        (resource.load() as Promise<unknown>).then(() => resolve(texture)).catch(errorHandler);\n    });\n\n    return resource._live2d_load;\n}\n","import { ExpressionManager, InternalModel, ModelSettings, MotionManager } from '@/cubism-common';\nimport { Live2DLoader } from '@/factory/Live2DLoader';\nimport { Live2DModel, Live2DModelOptions } from '@/Live2DModel';\nimport { logger } from '@/utils';\nimport { Middleware, runMiddlewares } from '@/utils/middleware';\nimport {\n    createInternalModel,\n    jsonToSettings,\n    setupEssentials,\n    setupOptionals,\n    urlToJSON,\n    waitUntilReady,\n} from '@/factory/model-middlewares';\n\nexport interface Live2DFactoryOptions extends Live2DModelOptions {\n    /**\n     * String to use for crossOrigin properties on `<img>` elements when loading textures.\n     * @default undefined\n     */\n    crossOrigin?: string;\n\n    /**\n     * Callback invokes when the model has been loaded.\n     * @default undefined\n     */\n    onLoad?(): void;\n\n    /**\n     * Callback invokes when error occurs while loading the model.\n     * @default undefined\n     */\n    onError?(e: Error): void;\n}\n\n/**\n * The context transferred through the model creation middlewares.\n */\nexport interface Live2DFactoryContext {\n    source: any,\n    options: Live2DFactoryOptions;\n    live2dModel: Live2DModel;\n    internalModel?: InternalModel;\n    settings?: ModelSettings;\n}\n\n/**\n * Represents a Cubism version.\n */\nexport interface Live2DRuntime {\n    /**\n     * The version number. Higher version takes priority when matching the runtime.\n     */\n    version: number;\n\n    /**\n     * Checks if the source belongs to this runtime.\n     * @param source - Either a settings JSON object or a ModelSettings instance.\n     * @return True if the source belongs to this runtime.\n     */\n    test(source: any): boolean;\n\n    // TODO: remove\n    ready(): Promise<void>;\n\n    /**\n     * Checks if the data is a valid moc to create the core model.\n     * @param modelData - The moc content.\n     * @return True if the data is valid.\n     */\n    isValidMoc(modelData: ArrayBuffer): boolean;\n\n    /**\n     * Creates a ModelSettings.\n     * @param json - The settings JSON object.\n     * @return Created ModelSettings.\n     */\n    createModelSettings(json: JSONObject): ModelSettings;\n\n    /**\n     * Creates a core model.\n     * @param data - Content of the moc file.\n     * @return Created core model.\n     */\n    createCoreModel(data: ArrayBuffer): any;\n\n    /**\n     * Creates an InternalModel.\n     * @param coreModel - Core model that *must* belong to this runtime.\n     * @param settings - ModelSettings of this model.\n     * @param options - Options that will be passed to the InternalModel's constructor.\n     * @return Created InternalModel.\n     */\n    createInternalModel(coreModel: any, settings: ModelSettings, options?: Live2DFactoryOptions): InternalModel;\n\n    /**\n     * Creates a pose.\n     * @param coreModel - Core model that *must* belong to this runtime.\n     * @param data - Content of the pose file.\n     * @return Created pose.\n     */\n    createPose(coreModel: any, data: any): any;\n\n    /**\n     * Creates a physics.\n     * @param coreModel - Core model that *must* belong to this runtime.\n     * @param data - Content of the physics file.\n     * @return Created physics.\n     */\n    createPhysics(coreModel: any, data: any): any;\n}\n\n/**\n * Handles all the network load tasks.\n *\n * - Model creation: requested by {@link Live2DModel.from}.\n * - Motion loading: implements the load method of MotionManager.\n * - Expression loading: implements the load method of ExpressionManager.\n */\nexport class Live2DFactory {\n    /**\n     * All registered runtimes, sorted by versions in descending order.\n     */\n    static runtimes: Live2DRuntime[] = [];\n\n    static urlToJSON = urlToJSON;\n    static jsonToSettings = jsonToSettings;\n    static waitUntilReady = waitUntilReady;\n    static setupOptionals = setupOptionals;\n    static setupEssentials = setupEssentials;\n    static createInternalModel = createInternalModel;\n\n    /**\n     * Middlewares to run through when setting up a Live2DModel.\n     */\n    static live2DModelMiddlewares: Middleware<Live2DFactoryContext>[] = [\n        urlToJSON, jsonToSettings, waitUntilReady, setupOptionals, setupEssentials, createInternalModel,\n    ];\n\n    /**\n     * load tasks of each motion. The structure of each value in this map\n     * is the same as respective {@link MotionManager.definitions}.\n     */\n    static motionTasksMap = new WeakMap<MotionManager, Record<string, (Promise<any> | undefined)[]>>();\n\n    /**\n     * Load tasks of each expression.\n     */\n    static expressionTasksMap = new WeakMap<ExpressionManager, (Promise<any> | undefined)[]>();\n\n    /**\n     * Registers a Live2DRuntime.\n     */\n    static registerRuntime(runtime: Live2DRuntime) {\n        Live2DFactory.runtimes.push(runtime);\n\n        // higher version as higher priority\n        Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n    }\n\n    /**\n     * Finds a runtime that matches given source.\n     * @param source - Either a settings JSON object or a ModelSettings instance.\n     * @return The Live2DRuntime, or undefined if not found.\n     */\n    static findRuntime(source: any): Live2DRuntime | undefined {\n        for (const runtime of Live2DFactory.runtimes) {\n            if (runtime.test(source)) {\n                return runtime;\n            }\n        }\n    }\n\n    /**\n     * Sets up a Live2DModel, populating it with all defined resources.\n     * @param live2dModel - The Live2DModel instance.\n     * @param source - Can be one of: settings file URL, settings JSON object, ModelSettings instance.\n     * @param options - Options for the process.\n     * @return Promise that resolves when all resources have been loaded, rejects when error occurs.\n     */\n    static async setupLive2DModel<IM extends InternalModel>(live2dModel: Live2DModel<IM>, source: string | object | IM['settings'], options?: Live2DFactoryOptions): Promise<void> {\n        const textureLoaded = new Promise(resolve => live2dModel.once('textureLoaded', resolve));\n        const modelLoaded = new Promise(resolve => live2dModel.once('modelLoaded', resolve));\n\n        // because the \"ready\" event is supposed to be emitted after\n        // both the internal model and textures have been loaded,\n        // we should here wrap the emit() in a then() so it'll\n        // be executed after all the handlers of \"modelLoaded\" and \"textureLoaded\"\n        const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit('ready'));\n\n        await runMiddlewares(Live2DFactory.live2DModelMiddlewares, {\n            live2dModel: live2dModel as Live2DModel<InternalModel>,\n            source,\n            options: options || {},\n        });\n\n        // the \"load\" event should never be emitted before \"ready\"\n        await readyEventEmitted;\n\n        live2dModel.emit('load');\n    }\n\n    /**\n     * Loads a Motion and registers the task to {@link motionTasksMap}. The task will be automatically\n     * canceled when its owner - the MotionManager instance - has been destroyed.\n     * @param motionManager - MotionManager that owns this Motion.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @return Promise that resolves with the Motion, or with undefined if it can't be loaded.\n     */\n    static loadMotion<Motion, MotionSpec>(motionManager: MotionManager<Motion, MotionSpec>, group: string, index: number): Promise<Motion | undefined> {\n        // errors in this method are always handled\n        const handleError = (e: any) => motionManager.emit('motionLoadError', group, index, e);\n\n        try {\n            const definition = motionManager.definitions[group] ?. [index];\n\n            if (!definition) {\n                return Promise.resolve(undefined);\n            }\n\n            if (!motionManager.listeners('destroy').includes(Live2DFactory.releaseTasks)) {\n                motionManager.once('destroy', Live2DFactory.releaseTasks);\n            }\n\n            let tasks = Live2DFactory.motionTasksMap.get(motionManager);\n\n            if (!tasks) {\n                tasks = {};\n                Live2DFactory.motionTasksMap.set(motionManager, tasks);\n            }\n\n            let taskGroup = tasks[group];\n\n            if (!taskGroup) {\n                taskGroup = [];\n                tasks[group] = taskGroup;\n            }\n\n            const path = motionManager.getMotionFile(definition);\n\n            taskGroup[index] ??= Live2DLoader.load({\n                    url: path,\n                    settings: motionManager.settings,\n                    type: motionManager.motionDataType,\n                    target: motionManager,\n                })\n                .then(data => {\n                    const taskGroup = Live2DFactory.motionTasksMap.get(motionManager)?.[group];\n\n                    if (taskGroup) {\n                        delete taskGroup[index];\n                    }\n\n                    const motion = motionManager.createMotion(data, group, definition);\n\n                    motionManager.emit('motionLoaded', group, index, motion);\n\n                    return motion;\n                })\n                .catch(e => {\n                    logger.warn(motionManager.tag, `Failed to load motion: ${path}\\n`, e);\n                    handleError(e);\n                });\n\n            return taskGroup[index]!;\n        } catch (e) {\n            logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\\n`, e);\n            handleError(e);\n        }\n\n        return Promise.resolve(undefined);\n    }\n\n    /**\n     * Loads an Expression and registers the task to {@link expressionTasksMap}. The task will be automatically\n     * canceled when its owner - the ExpressionManager instance - has been destroyed.\n     * @param expressionManager - ExpressionManager that owns this Expression.\n     * @param index - Index of the Expression.\n     * @return Promise that resolves with the Expression, or with undefined if it can't be loaded.\n     */\n    static loadExpression<Expression, ExpressionSpec>(expressionManager: ExpressionManager<Expression, ExpressionSpec>, index: number): Promise<Expression | undefined> {\n        // errors in this method are always handled\n        const handleError = (e: any) => expressionManager.emit('expressionLoadError', index, e);\n\n        try {\n            const definition = expressionManager.definitions[index];\n\n            if (!definition) {\n                return Promise.resolve(undefined);\n            }\n\n            if (!expressionManager.listeners('destroy').includes(Live2DFactory.releaseTasks)) {\n                expressionManager.once('destroy', Live2DFactory.releaseTasks);\n            }\n\n            let tasks = Live2DFactory.expressionTasksMap.get(expressionManager);\n\n            if (!tasks) {\n                tasks = [];\n                Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n            }\n\n            const path = expressionManager.getExpressionFile(definition);\n\n            tasks[index] ??= Live2DLoader.load({\n                    url: path,\n                    settings: expressionManager.settings,\n                    type: 'json',\n                    target: expressionManager,\n                })\n                .then(data => {\n                    const tasks = Live2DFactory.expressionTasksMap.get(expressionManager);\n\n                    if (tasks) {\n                        delete tasks[index];\n                    }\n\n                    const expression = expressionManager.createExpression(data, definition);\n\n                    expressionManager.emit('expressionLoaded', index, expression);\n\n                    return expression;\n                })\n                .catch(e => {\n                    logger.warn(expressionManager.tag, `Failed to load expression: ${path}\\n`, e);\n                    handleError(e);\n                });\n\n            return tasks[index]!;\n        } catch (e) {\n            logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\\n`, e);\n            handleError(e);\n        }\n\n        return Promise.resolve(undefined);\n    }\n\n    static releaseTasks(this: MotionManager | ExpressionManager) {\n        if (this instanceof MotionManager) {\n            Live2DFactory.motionTasksMap.delete(this);\n        } else {\n            Live2DFactory.expressionTasksMap.delete(this);\n        }\n    }\n}\n\n(MotionManager.prototype as any)._loadMotion = function(this: MotionManager, group: string, index: number) {\n    return Live2DFactory.loadMotion(this, group, index);\n};\n\n(ExpressionManager.prototype as any)._loadExpression = function(this: ExpressionManager, index: number) {\n    return Live2DFactory.loadExpression(this, index);\n};\n","import { InteractionEvent, InteractionManager } from '@pixi/interaction';\nimport { Live2DModel } from './Live2DModel';\n\n/**\n * The interaction control split from Live2DModel class for code clarity. This mixin should *only*\n * be used on the Live2DModel.\n */\nexport class InteractionMixin {\n    private _autoInteract = false;\n\n    /**\n     * Enables automatic interaction. Only takes effect if Pixi's interaction\n     * feature has been enabled (by registering the `PIXI.InteractionManager` into `PIXI.Renderer`).\n     */\n    get autoInteract(): boolean {\n        return this._autoInteract;\n    }\n\n    set autoInteract(autoInteract: boolean) {\n        if (autoInteract !== this._autoInteract) {\n            if (autoInteract) {\n                (this as any as Live2DModel<any>).on('pointertap', onTap, this);\n            } else {\n                (this as any as Live2DModel<any>).off('pointertap', onTap, this);\n            }\n\n            this._autoInteract = autoInteract;\n        }\n    }\n\n    /**\n     * Local reference used to clean up the event listeners when destroying the model.\n     */\n    interactionManager?: InteractionManager;\n\n    /**\n     * Registers interaction by subscribing to the `PIXI.InteractionManager`.\n     */\n    registerInteraction(this: Live2DModel<any>, manager?: InteractionManager): void {\n        if (manager !== this.interactionManager) {\n            this.unregisterInteraction();\n\n            if (this._autoInteract && manager) {\n                this.interactionManager = manager;\n\n                manager.on('pointermove', onPointerMove, this);\n            }\n        }\n    }\n\n    /**\n     * Unregisters interaction.\n     */\n    unregisterInteraction(this: Live2DModel<any>): void {\n        if (this.interactionManager) {\n            this.interactionManager?.off('pointermove', onPointerMove, this);\n            this.interactionManager = undefined;\n        }\n    }\n}\n\nfunction onTap(this: Live2DModel<any>, event: InteractionEvent): void {\n    this.tap(event.data.global.x, event.data.global.y);\n}\n\nfunction onPointerMove(this: Live2DModel<any>, event: InteractionEvent) {\n    this.focus(event.data.global.x, event.data.global.y);\n}\n","import { Transform } from '@pixi/math';\n\n/**\n * Useless class. May be useful in the future.\n */\nexport class Live2DTransform extends Transform {\n}\n","import { InternalModel, ModelSettings, MotionPriority } from '@/cubism-common';\nimport { MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport type { Live2DFactoryOptions } from '@/factory/Live2DFactory';\nimport { Live2DFactory } from '@/factory/Live2DFactory';\nimport { Renderer, Texture } from '@pixi/core';\nimport { Container } from '@pixi/display';\nimport { Matrix, ObservablePoint, Point, Rectangle } from '@pixi/math';\nimport { Ticker } from '@pixi/ticker';\nimport { InteractionMixin } from './InteractionMixin';\nimport { Live2DTransform } from './Live2DTransform';\nimport { applyMixins, logger } from './utils';\n\nexport interface Live2DModelOptions extends MotionManagerOptions {\n    /**\n     * Should the internal model be automatically updated by `PIXI.Ticker.shared`.\n     * @default ture\n     */\n    autoUpdate?: boolean;\n\n    /**\n     * Should the internal model automatically reacts to interactions by listening for pointer events.\n     * @see {@link InteractionMixin}\n     * @default true\n     */\n    autoInteract?: boolean;\n}\n\nconst tempPoint = new Point();\nconst tempMatrix = new Matrix();\n\n// a reference to Ticker class, defaults to window.PIXI.Ticker (when loaded by a <script> tag)\nlet TickerClass: typeof Ticker | undefined = (window as any).PIXI?.Ticker;\n\nexport interface Live2DModel<IM extends InternalModel = InternalModel> extends InteractionMixin {}\n\nexport type Live2DConstructor = { new(options?: Live2DModelOptions): Live2DModel }\n\n/**\n * A wrapper that allows the Live2D model to be used as a DisplayObject in PixiJS.\n *\n * ```js\n * const model = await Live2DModel.from('shizuku.model.json');\n * container.add(model);\n * ```\n * @emits {@link Live2DModelEvents}\n */\nexport class Live2DModel<IM extends InternalModel = InternalModel> extends Container {\n    /**\n     * Creates a Live2DModel from given source.\n     * @param source - Can be one of: settings file URL, settings JSON object, ModelSettings instance.\n     * @param options - Options for the creation.\n     * @return Promise that resolves with the Live2DModel.\n     */\n    static from<M extends Live2DConstructor = typeof Live2DModel>(this: M, source: string | JSONObject | ModelSettings, options?: Live2DFactoryOptions): Promise<InstanceType<M>> {\n        const model = new this(options) as InstanceType<M>;\n\n        return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n    }\n\n    /**\n     * Synchronous version of `Live2DModel.from()`. This method immediately returns a Live2DModel instance,\n     * whose resources have not been loaded. Therefore this model can't be manipulated or rendered\n     * until the \"load\" event has been emitted.\n     *\n     * ```js\n     * // no `await` here as it's not a Promise\n     * const model = Live2DModel.fromSync('shizuku.model.json');\n     *\n     * // these will cause errors!\n     * // app.stage.addChild(model);\n     * // model.motion('tap_body');\n     *\n     * model.once('load', () => {\n     *     // now it's safe\n     *     app.stage.addChild(model);\n     *     model.motion('tap_body');\n     * });\n     * ```\n     */\n    static fromSync<M extends Live2DConstructor = typeof Live2DModel>(this: M, source: string | JSONObject | ModelSettings, options?: Live2DFactoryOptions): InstanceType<M> {\n        const model = new this(options) as InstanceType<M>;\n\n        Live2DFactory.setupLive2DModel(model, source, options).then(options?.onLoad).catch(options?.onError);\n\n        return model;\n    }\n\n    /**\n     * Registers the class of `PIXI.Ticker` for auto updating.\n     */\n    static registerTicker(tickerClass: typeof Ticker): void {\n        TickerClass = tickerClass;\n    }\n\n    /**\n     * Tag for logging.\n     */\n    tag = 'Live2DModel(uninitialized)';\n\n    /**\n     * The internal model. Though typed as non-nullable, it'll be undefined until the \"ready\" event is emitted.\n     */\n    internalModel!: IM;\n\n    /**\n     * Pixi textures.\n     */\n    textures: Texture[] = [];\n\n    /** @override */\n    transform = new Live2DTransform();\n\n    /**\n     * The anchor behaves like the one in `PIXI.Sprite`, where `(0, 0)` means the top left\n     * and `(1, 1)` means the bottom right.\n     */\n    anchor = new ObservablePoint(this.onAnchorChange, this, 0, 0) as ObservablePoint<any>; // cast the type because it breaks the casting of Live2DModel\n\n    /**\n     * An ID of Gl context that syncs with `renderer.CONTEXT_UID`. Used to check if the GL context has changed.\n     */\n    protected glContextID = -1;\n\n    /**\n     * Elapsed time in milliseconds since created.\n     */\n    elapsedTime: DOMHighResTimeStamp = performance.now();\n\n    /**\n     * Elapsed time in milliseconds from last frame to this frame.\n     */\n    deltaTime: DOMHighResTimeStamp = 0;\n\n    protected _autoUpdate = false;\n\n    /**\n     * Enables automatic updating. Requires {@link Live2DModel.registerTicker} or the global `window.PIXI.Ticker`.\n     */\n    get autoUpdate() {\n        return this._autoUpdate;\n    }\n\n    set autoUpdate(autoUpdate: boolean) {\n        if (autoUpdate) {\n            if (!this._destroyed) {\n                if (TickerClass) {\n                    TickerClass.shared.add(this.onTickerUpdate, this);\n\n                    this._autoUpdate = true;\n                } else {\n                    logger.warn(this.tag, 'No Ticker registered, please call Live2DModel.registerTicker(Ticker).');\n                }\n            }\n        } else {\n            TickerClass?.shared.remove(this.onTickerUpdate, this);\n\n            this._autoUpdate = false;\n        }\n    }\n\n    constructor(options?: Live2DModelOptions) {\n        super();\n\n        this.once('modelLoaded', () => this.init(options));\n    }\n\n    // TODO: rename\n    /**\n     * A handler of the \"modelLoaded\" event, invoked when the internal model has been loaded.\n     */\n    protected init(options?: Live2DModelOptions) {\n        this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n\n        const _options = Object.assign({\n            autoUpdate: true,\n            autoInteract: true,\n        }, options);\n\n        if (_options.autoInteract) {\n            this.interactive = true;\n        }\n\n        this.autoInteract = _options.autoInteract;\n        this.autoUpdate = _options.autoUpdate;\n    }\n\n    /**\n     * A callback that observes {@link anchor}, invoked when the anchor's values have been changed.\n     */\n    protected onAnchorChange(): void {\n        this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n    }\n\n    /**\n     * Shorthand to start a motion.\n     * @param group - The motion group.\n     * @param index - The index in this group. If not presented, a random motion will be started.\n     * @param priority - The motion priority. Defaults to `MotionPriority.NORMAL`.\n     * @return Promise that resolves with true if the motion is successfully started, with false otherwise.\n     */\n    motion(group: string, index?: number, priority?: MotionPriority): Promise<boolean> {\n        return index === undefined\n            ? this.internalModel.motionManager.startRandomMotion(group, priority)\n            : this.internalModel.motionManager.startMotion(group, index, priority);\n    }\n\n    /**\n     * Shorthand to set an expression.\n     * @param id - Either the index, or the name of the expression. If not presented, a random expression will be set.\n     * @return Promise that resolves with true if succeeded, with false otherwise.\n     */\n    expression(id?: number | string): Promise<boolean> {\n        if (this.internalModel.motionManager.expressionManager) {\n            return id === undefined\n                ? this.internalModel.motionManager.expressionManager.setRandomExpression()\n                : this.internalModel.motionManager.expressionManager.setExpression(id);\n        }\n        return Promise.resolve(false);\n    }\n\n    /**\n     * Updates the focus position. This will not cause the model to immediately look at the position,\n     * instead the movement will be interpolated.\n     * @param x - Position in world space.\n     * @param y - Position in world space.\n     * @param instant - Should the focus position be instantly applied.\n     */\n    focus(x: number, y: number, instant: boolean = false): void {\n        tempPoint.x = x;\n        tempPoint.y = y;\n\n        // we can pass `true` as the third argument to skip the update transform\n        // because focus won't take effect until the model is rendered,\n        // and a model being rendered will always get transform updated\n        this.toModelPosition(tempPoint, tempPoint, true);\n\n        this.internalModel.focusController.focus(\n            (tempPoint.x / this.internalModel.originalWidth) * 2 - 1,\n            -((tempPoint.y / this.internalModel.originalHeight) * 2 - 1),\n            instant,\n        );\n    }\n\n    /**\n     * Tap on the model. This will perform a hit-testing, and emit a \"hit\" event\n     * if at least one of the hit areas is hit.\n     * @param x - Position in world space.\n     * @param y - Position in world space.\n     * @emits {@link Live2DModelEvents.hit}\n     */\n    tap(x: number, y: number): void {\n        const hitAreaNames = this.hitTest(x, y);\n\n        if (hitAreaNames.length) {\n            logger.log(this.tag, `Hit`, hitAreaNames);\n\n            this.emit('hit', hitAreaNames);\n        }\n    }\n\n    /**\n     * Hit-test on the model.\n     * @param x - Position in world space.\n     * @param y - Position in world space.\n     * @return The names of the *hit* hit areas. Can be empty if none is hit.\n     */\n    hitTest(x: number, y: number): string[] {\n        tempPoint.x = x;\n        tempPoint.y = y;\n        this.toModelPosition(tempPoint, tempPoint);\n\n        return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n    }\n\n    /**\n     * Calculates the position in the canvas of original, unscaled Live2D model.\n     * @param position - A Point in world space.\n     * @param result - A Point to store the new value. Defaults to a new Point.\n     * @param skipUpdate - True to skip the update transform.\n     * @return The Point in model canvas space.\n     */\n    toModelPosition(position: Point, result: Point = position.clone(), skipUpdate?: boolean): Point {\n        if (!skipUpdate) {\n            this._recursivePostUpdateTransform();\n\n            if (!this.parent) {\n                (this.parent as any) = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                (this.parent as any) = null;\n            } else {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        this.transform.worldTransform.applyInverse(position, result);\n        this.internalModel.localTransform.applyInverse(result, result);\n\n        return result;\n    }\n\n    /**\n     * A method required by `PIXI.InteractionManager` to perform hit-testing.\n     * @param point - A Point in world space.\n     * @return True if the point is inside this model.\n     */\n    containsPoint(point: Point): boolean {\n        return this.getBounds(true).contains(point.x, point.y);\n    }\n\n    /** @override */\n    protected _calculateBounds(): void {\n        this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n    }\n\n    /**\n     * An update callback to be added to `PIXI.Ticker` and invoked every tick.\n     */\n    onTickerUpdate(): void {\n        this.update(TickerClass!.shared.deltaMS);\n    }\n\n    /**\n     * Updates the model. Note this method just updates the timer,\n     * and the actual update will be done right before rendering the model.\n     * @param dt - The elapsed time in milliseconds since last frame.\n     */\n    update(dt: DOMHighResTimeStamp): void {\n        this.deltaTime += dt;\n        this.elapsedTime += dt;\n\n        // don't call `this.internalModel.update()` here, because it requires WebGL context\n    }\n\n    /** @override */\n    protected _render(renderer: Renderer): void {\n        this.registerInteraction(renderer.plugins.interaction);\n\n        // reset certain systems in renderer to make Live2D's drawing system compatible with Pixi\n        renderer.batch.reset();\n        renderer.geometry.reset();\n        renderer.shader.reset();\n        renderer.state.reset();\n\n        let shouldUpdateTexture = false;\n\n        // when the WebGL context has changed\n        if (this.glContextID !== (renderer as any).CONTEXT_UID) {\n            this.glContextID = (renderer as any).CONTEXT_UID;\n\n            this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n\n            shouldUpdateTexture = true;\n        }\n\n        for (let i = 0; i < this.textures.length; i++) {\n            const texture = this.textures[i]!;\n\n            if (!texture.valid) {\n                continue;\n            }\n\n            if (shouldUpdateTexture || !(texture.baseTexture as any)._glTextures[this.glContextID]) {\n                renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n\n                // let the TextureSystem generate corresponding WebGLTexture, and bind to an arbitrary location\n                renderer.texture.bind(texture.baseTexture, 0);\n            }\n\n            // bind the WebGLTexture into Live2D core.\n            // because the Texture in Pixi can be shared between multiple DisplayObjects,\n            // it's unable to know if the WebGLTexture in this Texture has been destroyed (GCed) and regenerated,\n            // and therefore we always bind the texture at this moment no matter what\n            this.internalModel.bindTexture(i, (texture.baseTexture as any)._glTextures[this.glContextID].texture);\n\n            // manually update the GC counter so they won't be GCed while using this model\n            (texture.baseTexture as any).touched = renderer.textureGC.count;\n        }\n\n        const viewport = (renderer.framebuffer as any).viewport as Rectangle;\n        this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n\n        // update only if the time has changed, as the model will possibly be updated once but rendered multiple times\n        if (this.deltaTime) {\n            this.internalModel.update(this.deltaTime, this.elapsedTime);\n            this.deltaTime = 0;\n        }\n\n        const internalTransform = tempMatrix\n            .copyFrom(renderer.globalUniforms.uniforms.projectionMatrix)\n            .append(this.worldTransform);\n\n        this.internalModel.updateTransform(internalTransform);\n        this.internalModel.draw(renderer.gl);\n\n        // reset WebGL state and texture bindings\n        renderer.state.reset();\n        renderer.texture.reset();\n    }\n\n    /**\n     * Destroys the model and all related resources. This takes the same options and also\n     * behaves the same as `PIXI.Container#destroy`.\n     * @param options - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param [options.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'options' will be passed on to those calls.\n     * @param [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     */\n    destroy(options?: { children?: boolean, texture?: boolean, baseTexture?: boolean }): void {\n        this.emit('destroy');\n\n        // the setters will do the cleanup\n        this.autoUpdate = false;\n\n        this.unregisterInteraction();\n\n        if (options?.texture) {\n            this.textures.forEach(texture => texture.destroy(options.baseTexture));\n        }\n\n        this.internalModel.destroy();\n\n        super.destroy(options);\n    }\n}\n\napplyMixins(Live2DModel, [InteractionMixin]);\n","import { InternalModel, ModelSettings } from '@/cubism-common';\nimport { Live2DFactory, Live2DFactoryContext } from '@/factory';\nimport { Middleware } from '@/utils/middleware';\nimport { url as urlUtils } from '@pixi/utils';\n\ndeclare global {\n    interface File {\n        readonly webkitRelativePath: string;\n    }\n}\n\ndeclare module '@/cubism-common/ModelSettings' {\n    interface ModelSettings {\n        /** @ignore */\n        _objectURL?: string;\n    }\n}\n\nexport type ExtendedFileList = File[] & { settings?: ModelSettings }\n\n/**\n * Experimental loader to load resources from uploaded files.\n *\n * This loader relies on\n * [webkitRelativePath](https://developer.mozilla.org/en-US/docs/Web/API/File/webkitRelativePath)\n * to recognize the file path.\n *\n * Though named as a \"Loader\", this class has nothing to do with Live2DLoader,\n * it only contains a middleware for the Live2DFactory.\n */\nexport class FileLoader {\n    /**\n     * Stores all the object URLs of uploaded files.\n     */\n    static filesMap: {\n        [settingsFileURL: string]: {\n            [resourceFileURL: string]: string\n        }\n    } = {};\n\n    /**\n     * Resolves the path of a resource file to the object URL.\n     * @param settingsURL - Object URL of the settings file.\n     * @param filePath - Resource file path.\n     * @return Resolved object URL.\n     */\n    static resolveURL(settingsURL: string, filePath: string): string {\n        const resolved = FileLoader.filesMap[settingsURL]?.[filePath];\n\n        if (resolved === undefined) {\n            throw new Error('Cannot find this file from uploaded files: ' + filePath);\n        }\n\n        return resolved;\n    }\n\n    /**\n     * Middleware for Live2DFactory.\n     */\n    static factory: Middleware<Live2DFactoryContext> = async (context, next) => {\n        if (Array.isArray(context.source) && context.source[0] instanceof File) {\n            const files = context.source as File[];\n\n            let settings = (files as ExtendedFileList).settings;\n\n            if (!settings) {\n                settings = await FileLoader.createSettings(files);\n            } else if (!settings._objectURL) {\n                throw  new Error('\"_objectURL\" must be specified in ModelSettings');\n            }\n\n            settings.validateFiles(files.map(file => encodeURI(file.webkitRelativePath)));\n\n            await FileLoader.upload(files, settings);\n\n            // override the default method to resolve URL from uploaded files\n            settings.resolveURL = function(url) {\n                return FileLoader.resolveURL(this._objectURL!, url);\n            };\n\n            context.source = settings;\n\n            // clean up when destroying the model\n            context.live2dModel.once('modelLoaded', (internalModel: InternalModel) => {\n                internalModel.once('destroy', function(this: InternalModel) {\n                    const objectURL = this.settings._objectURL!;\n\n                    URL.revokeObjectURL(objectURL);\n\n                    if (FileLoader.filesMap[objectURL]) {\n                        for (const resourceObjectURL of Object.values(FileLoader.filesMap[objectURL]!)) {\n                            URL.revokeObjectURL(resourceObjectURL);\n                        }\n                    }\n\n                    delete FileLoader.filesMap[objectURL];\n                });\n            });\n        }\n\n        return next();\n    };\n\n    /**\n     * Consumes the files by storing their object URLs. Files not defined in the settings will be ignored.\n     */\n    static async upload(files: File[], settings: ModelSettings): Promise<void> {\n        const fileMap: Record<string, string> = {};\n\n        // only consume the files defined in settings\n        for (const definedFile of settings.getDefinedFiles()) {\n            const actualPath = decodeURI(urlUtils.resolve(settings.url, definedFile));\n\n            const actualFile = files.find(file => file.webkitRelativePath === actualPath);\n\n            if (actualFile) {\n                fileMap[definedFile] = URL.createObjectURL(actualFile);\n            }\n        }\n\n        FileLoader.filesMap[settings._objectURL!] = fileMap;\n    }\n\n    /**\n     * Creates a ModelSettings by given files.\n     * @return Promise that resolves with the created ModelSettings.\n     */\n    static async createSettings(files: File[]): Promise<ModelSettings> {\n        const settingsFile = files.find(file => file.name.endsWith('model.json') || file.name.endsWith('model3.json'));\n\n        if (!settingsFile) {\n            throw new TypeError('Settings file not found');\n        }\n\n        const settingsText = await FileLoader.readText(settingsFile);\n        const settingsJSON = JSON.parse(settingsText);\n\n        settingsJSON.url = settingsFile.webkitRelativePath;\n\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n\n        if (!runtime) {\n            throw new Error('Unknown settings JSON');\n        }\n\n        const settings = runtime.createModelSettings(settingsJSON);\n\n        settings._objectURL = URL.createObjectURL(settingsFile);\n\n        return settings;\n    }\n\n    /**\n     * Reads a file as text in UTF-8.\n     */\n    static async readText(file: File): Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = reject;\n            reader.readAsText(file, 'utf8');\n        });\n    }\n}\n\nLive2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\n","import { url as urlUtils } from '@pixi/utils';\nimport { Middleware } from '@/utils/middleware';\nimport { InternalModel, ModelSettings } from '@/cubism-common';\nimport { ExtendedFileList } from './FileLoader';\nimport { Live2DFactory, Live2DFactoryContext } from '@/factory/Live2DFactory';\nimport { Live2DLoader } from '@/factory/Live2DLoader';\n\ntype ZipReader = any;\n\n/**\n * Experimental loader to load resources from a zip file.\n *\n * Though named as a \"Loader\", this class has nothing to do with Live2DLoader,\n * it only contains a middleware for the Live2DFactory.\n */\nexport class ZipLoader {\n    static ZIP_PROTOCOL = 'zip://';\n    static uid = 0;\n\n    static factory: Middleware<Live2DFactoryContext> = async (context, next) => {\n        const source = context.source;\n\n        let sourceURL: string;\n        let zipBlob: Blob | undefined;\n        let settings: ModelSettings | undefined;\n\n        if (typeof source === 'string' && (source.endsWith('.zip') || source.startsWith(ZipLoader.ZIP_PROTOCOL))) {\n            if (source.startsWith(ZipLoader.ZIP_PROTOCOL)) {\n                sourceURL = source.slice(ZipLoader.ZIP_PROTOCOL.length);\n            } else {\n                sourceURL = source;\n            }\n\n            zipBlob = await Live2DLoader.load({\n                url: sourceURL,\n                type: 'blob',\n                target: context.live2dModel,\n            });\n        } else if (\n            Array.isArray(source)\n            && source.length === 1\n            && source[0] instanceof File\n            && source[0].name.endsWith('.zip')\n        ) {\n            zipBlob = source[0];\n\n            sourceURL = URL.createObjectURL(zipBlob);\n\n            settings = (source as ExtendedFileList).settings;\n        }\n\n        if (zipBlob) {\n            if (!zipBlob.size) {\n                throw new Error('Empty zip file');\n            }\n\n            const reader = await ZipLoader.zipReader(zipBlob, sourceURL!);\n\n            if (!settings) {\n                settings = await ZipLoader.createSettings(reader);\n            }\n\n            // a fake URL, the only requirement is it should be unique,\n            // as FileLoader will use it as the ID of all uploaded files\n            settings._objectURL = ZipLoader.ZIP_PROTOCOL + ZipLoader.uid + '/' + settings.url;\n\n            const files = await ZipLoader.unzip(reader, settings);\n\n            (files as ExtendedFileList).settings = settings;\n\n            // pass files to the FileLoader\n            context.source = files;\n\n            // clean up when destroying the model\n            if (sourceURL!.startsWith('blob:')) {\n                context.live2dModel.once('modelLoaded', (internalModel: InternalModel) => {\n                    internalModel.once('destroy', function(this: InternalModel) {\n                        URL.revokeObjectURL(sourceURL);\n\n                    });\n                });\n            }\n\n            ZipLoader.releaseReader(reader);\n        }\n\n        return next();\n    };\n\n    static async unzip(reader: ZipReader, settings: ModelSettings): Promise<File[]> {\n        const filePaths = await ZipLoader.getFilePaths(reader);\n\n        const requiredFilePaths: string[] = [];\n\n        // only consume the files defined in settings\n        for (const definedFile of settings.getDefinedFiles()) {\n            const actualPath = decodeURI(urlUtils.resolve(settings.url, definedFile));\n\n            if (filePaths.includes(actualPath)) {\n                requiredFilePaths.push(actualPath);\n            }\n        }\n\n        const files = await ZipLoader.getFiles(reader, requiredFilePaths);\n\n        for (let i = 0; i < files.length; i++) {\n            const path = requiredFilePaths[i]!;\n            const file = files[i]!;\n\n            // let's borrow this property...\n            Object.defineProperty(file, 'webkitRelativePath', {\n                value: path,\n            });\n        }\n\n        return files;\n    }\n\n    static async createSettings(reader: ZipReader): Promise<ModelSettings> {\n        const filePaths = await ZipLoader.getFilePaths(reader);\n\n        const settingsFilePath = filePaths.find(path => path.endsWith('model.json') || path.endsWith('model3.json'));\n\n        if (!settingsFilePath) {\n            throw  new Error('Settings file not found');\n        }\n\n        const settingsText = await ZipLoader.readText(reader, settingsFilePath);\n\n        if (!settingsText) {\n            throw new Error('Empty settings file: ' + settingsFilePath);\n        }\n\n        const settingsJSON = JSON.parse(settingsText);\n\n        settingsJSON.url = settingsFilePath;\n\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n\n        if (!runtime) {\n            throw new Error('Unknown settings JSON');\n        }\n\n        return runtime.createModelSettings(settingsJSON);\n    }\n\n    static async zipReader(data: Blob, url: string): Promise<ZipReader> {\n        throw new Error('Not implemented');\n    }\n\n    static async getFilePaths(reader: ZipReader): Promise<string[]> {\n        throw new Error('Not implemented');\n    }\n\n    static async getFiles(reader: ZipReader, paths: string[]): Promise<File[]> {\n        throw new Error('Not implemented');\n    }\n\n    static async readText(reader: ZipReader, path: string): Promise<string> {\n        throw new Error('Not implemented');\n    }\n\n    static releaseReader(reader: ZipReader) {\n        // this method is optional\n    }\n}\n\nLive2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\n","import { Live2DModel } from '@/Live2DModel';\nimport { Renderer } from '@pixi/core';\nimport { Graphics } from '@pixi/graphics';\nimport { InteractionEvent } from '@pixi/interaction';\nimport { Text, TextStyle } from '@pixi/text';\nimport { Rectangle } from '@pixi/math';\n\nconst tempBounds = new Rectangle();\n\nexport class HitAreaFrames extends Graphics {\n    initialized = false;\n\n    texts: Text[] = [];\n\n    strokeWidth = 4;\n    normalColor = 0xE31A1A;\n    activeColor = 0x1EC832;\n\n    constructor() {\n        super();\n\n        this.interactive = true;\n\n        this.on('added', this.init).on('pointermove', this.onPointerMove);\n    }\n\n    init() {\n        const internalModel = (this.parent as Live2DModel).internalModel;\n\n        const textStyle = new TextStyle({\n            fontSize: 24,\n            fill: '#ffffff',\n            stroke: '#000000',\n            strokeThickness: 4,\n        });\n\n        this.texts = Object.keys(internalModel.hitAreas).map(hitAreaName => {\n            const text = new Text(hitAreaName, textStyle);\n\n            text.visible = false;\n\n            this.addChild(text);\n\n            return text;\n        });\n    }\n\n    onPointerMove(e: InteractionEvent) {\n        const hitAreaNames = (this.parent as Live2DModel).hitTest(e.data.global.x, e.data.global.y);\n\n        this.texts.forEach(text => {\n            text.visible = hitAreaNames.includes(text.text);\n        });\n    }\n\n    /** @override */\n    protected _render(renderer: Renderer): void {\n        const internalModel = (this.parent as Live2DModel).internalModel;\n\n        // extract scale from the transform matrix, and invert it to ease following calculation\n        // https://math.stackexchange.com/a/13165\n        const scale = 1 / Math.sqrt(this.transform.worldTransform.a ** 2 + this.transform.worldTransform.b ** 2);\n\n        this.texts.forEach(text => {\n            (\n                // correct the type definition of this method, the official definition is wrong!\n                this.lineStyle as any as (options: { width?: number, color?: number }) => void\n            )({\n                width: this.strokeWidth * scale,\n                color: text.visible ? this.activeColor : this.normalColor,\n            });\n\n            const bounds = internalModel.getDrawableBounds(internalModel.hitAreas[text.text]!.index, tempBounds);\n            const transform = internalModel.localTransform;\n\n            bounds.x = bounds.x * transform.a + transform.tx;\n            bounds.y = bounds.y * transform.d + transform.ty;\n            bounds.width = bounds.width * transform.a;\n            bounds.height = bounds.height * transform.d;\n\n            this.drawRect(bounds.x, bounds.y, bounds.width, bounds.height);\n\n            text.x = bounds.x + this.strokeWidth * scale;\n            text.y = bounds.y + this.strokeWidth * scale;\n            text.scale.set(scale);\n        });\n\n        super._render(renderer);\n\n        this.clear();\n    }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismMatrix44 } from '../math/cubismmatrix44';\nimport { CubismModel } from '../model/cubismmodel';\n\n/**\n * モデル描画を処理するレンダラ\n *\n * サブクラスに環境依存の描画命令を記述する。\n */\nexport abstract class CubismRenderer {\n  /**\n   * レンダラの初期化処理を実行する\n   * 引数に渡したモデルからレンダラの初期化処理に必要な情報を取り出すことができる\n   * @param model モデルのインスタンス\n   */\n  public initialize(model: CubismModel): void {\n    this._model = model;\n  }\n\n  /**\n   * モデルを描画する\n   */\n  public drawModel(): void {\n    if (this.getModel() == null) return;\n\n    this.doDrawModel();\n  }\n\n  /**\n   * Model-View-Projection 行列をセットする\n   * 配列は複製されるので、元の配列は外で破棄して良い\n   * @param matrix44 Model-View-Projection 行列\n   */\n  public setMvpMatrix(matrix44: CubismMatrix44): void {\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n  }\n\n  /**\n   * Model-View-Projection 行列を取得する\n   * @return Model-View-Projection 行列\n   */\n  public getMvpMatrix(): CubismMatrix44 {\n    return this._mvpMatrix4x4;\n  }\n\n  /**\n   * モデルの色をセットする\n   * 各色0.0~1.0の間で指定する（1.0が標準の状態）\n   * @param red 赤チャンネルの値\n   * @param green 緑チャンネルの値\n   * @param blue 青チャンネルの値\n   * @param alpha αチャンネルの値\n   */\n  public setModelColor(\n    red: number,\n    green: number,\n    blue: number,\n    alpha: number,\n  ): void {\n    if (red < 0.0) {\n      red = 0.0;\n    } else if (red > 1.0) {\n      red = 1.0;\n    }\n\n    if (green < 0.0) {\n      green = 0.0;\n    } else if (green > 1.0) {\n      green = 1.0;\n    }\n\n    if (blue < 0.0) {\n      blue = 0.0;\n    } else if (blue > 1.0) {\n      blue = 1.0;\n    }\n\n    if (alpha < 0.0) {\n      alpha = 0.0;\n    } else if (alpha > 1.0) {\n      alpha = 1.0;\n    }\n\n    this._modelColor.R = red;\n    this._modelColor.G = green;\n    this._modelColor.B = blue;\n    this._modelColor.A = alpha;\n  }\n\n  /**\n   * モデルの色を取得する\n   * 各色0.0~1.0の間で指定する(1.0が標準の状態)\n   *\n   * @return RGBAのカラー情報\n   */\n  public getModelColor(): CubismTextureColor {\n    return Object.assign({}, this._modelColor);\n  }\n\n  /**\n   * 乗算済みαの有効・無効をセットする\n   * 有効にするならtrue、無効にするならfalseをセットする\n   */\n  public setIsPremultipliedAlpha(enable: boolean): void {\n    this._isPremultipliedAlpha = enable;\n  }\n\n  /**\n   * 乗算済みαの有効・無効を取得する\n   * @return true 乗算済みのα有効\n   * @return false 乗算済みのα無効\n   */\n  public isPremultipliedAlpha(): boolean {\n    return this._isPremultipliedAlpha;\n  }\n\n  /**\n   * カリング（片面描画）の有効・無効をセットする。\n   * 有効にするならtrue、無効にするならfalseをセットする\n   */\n  public setIsCulling(culling: boolean): void {\n    this._isCulling = culling;\n  }\n\n  /**\n   * カリング（片面描画）の有効・無効を取得する。\n   * @return true カリング有効\n   * @return false カリング無効\n   */\n  public isCulling(): boolean {\n    return this._isCulling;\n  }\n\n  /**\n   * テクスチャの異方性フィルタリングのパラメータをセットする\n   * パラメータ値の影響度はレンダラの実装に依存する\n   * @param n パラメータの値\n   */\n  public setAnisotropy(n: number): void {\n    this._anisortopy = n;\n  }\n\n  /**\n   * テクスチャの異方性フィルタリングのパラメータをセットする\n   * @return 異方性フィルタリングのパラメータ\n   */\n  public getAnisotropy(): number {\n    return this._anisortopy;\n  }\n\n  /**\n   * レンダリングするモデルを取得する\n   * @return レンダリングするモデル\n   */\n  public getModel(): CubismModel {\n    return this._model;\n  }\n\n  /**\n   * コンストラクタ\n   */\n  protected constructor() {\n    this._isCulling = false;\n    this._isPremultipliedAlpha = false;\n    this._anisortopy = 0.0;\n    this._modelColor = new CubismTextureColor();\n\n    // 単位行列に初期化\n    this._mvpMatrix4x4 = new CubismMatrix44();\n    this._mvpMatrix4x4.loadIdentity();\n  }\n\n  /**\n   * モデル描画の実装\n   */\n  public abstract doDrawModel(): void;\n\n  /**\n   * 描画オブジェクト（アートメッシュ）を描画する\n   * ポリゴンメッシュとテクスチャ番号をセットで渡す。\n   * @param textureNo 描画するテクスチャ番号\n   * @param indexCount 描画オブジェクトのインデックス値\n   * @param vertexCount ポリゴンメッシュの頂点数\n   * @param indexArray ポリゴンメッシュ頂点のインデックス配列\n   * @param vertexArray ポリゴンメッシュの頂点配列\n   * @param uvArray uv配列\n   * @param opacity 不透明度\n   * @param colorBlendMode カラーブレンディングのタイプ\n   * @param invertedMask マスク使用時のマスクの反転使用\n   */\n  public abstract drawMesh(\n    textureNo: number,\n    indexCount: number,\n    vertexCount: number,\n    indexArray: Uint16Array,\n    vertexArray: Float32Array,\n    uvArray: Float32Array,\n    opacity: number,\n    colorBlendMode: CubismBlendMode,\n    invertedMask: boolean,\n  ): void;\n\n  /**\n   * レンダラが保持する静的なリソースを開放する\n   */\n  public static staticRelease: Function;\n\n  protected _mvpMatrix4x4: CubismMatrix44; // Model-View-Projection 行列\n  protected _modelColor: CubismTextureColor; // モデル自体のカラー（RGBA）\n  protected _isCulling: boolean; // カリングが有効ならtrue\n  protected _isPremultipliedAlpha: boolean; // 乗算済みαならtrue\n  protected _anisortopy: any; // テクスチャの異方性フィルタリングのパラメータ\n  protected _model!: CubismModel; // レンダリング対象のモデル\n}\n\nexport enum CubismBlendMode {\n  CubismBlendMode_Normal = 0, // 通常\n  CubismBlendMode_Additive = 1, // 加算\n  CubismBlendMode_Multiplicative = 2 // 乗算\n}\n\n/**\n * テクスチャの色をRGBAで扱うためのクラス\n */\nexport class CubismTextureColor {\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    this.R = 1.0;\n    this.G = 1.0;\n    this.B = 1.0;\n    this.A = 1.0;\n  }\n\n  R: number; // 赤チャンネル\n  G: number; // 緑チャンネル\n  B: number; // 青チャンネル\n  A: number; // αチャンネル\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * 2次元ベクトル型\n *\n * 2次元ベクトル型の機能を提供する。\n */\nexport class CubismVector2 {\n  x: number;\n  y: number;\n\n  /**\n   * コンストラクタ\n   */\n  public constructor(x?: number, y?: number) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  /**\n   * ベクトルの加算\n   *\n   * @param vector2 加算するベクトル値\n   * @return 加算結果 ベクトル値\n   */\n  public add(vector2: CubismVector2): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの減算\n   *\n   * @param vector2 減算するベクトル値\n   * @return 減算結果 ベクトル値\n   */\n  public substract(vector2: CubismVector2): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの乗算\n   *\n   * @param vector2 乗算するベクトル値\n   * @return 乗算結果 ベクトル値\n   */\n  public multiply(vector2: CubismVector2): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの乗算(スカラー)\n   *\n   * @param scalar 乗算するスカラー値\n   * @return 乗算結果 ベクトル値\n   */\n  public multiplyByScaler(scalar: number): CubismVector2 {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n\n  /**\n   * ベクトルの除算\n   *\n   * @param vector2 除算するベクトル値\n   * @return 除算結果 ベクトル値\n   */\n  public division(vector2: CubismVector2): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの除算(スカラー)\n   *\n   * @param scalar 除算するスカラー値\n   * @return 除算結果 ベクトル値\n   */\n  public divisionByScalar(scalar: number): CubismVector2 {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n\n  /**\n   * ベクトルの長さを取得する\n   *\n   * @return ベクトルの長さ\n   */\n  public getLength(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  /**\n   * ベクトルの距離の取得\n   *\n   * @param a 点\n   * @return ベクトルの距離\n   */\n  public getDistanceWith(a: CubismVector2): number {\n    return Math.sqrt(\n      (this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y),\n    );\n  }\n\n  /**\n   * ドット積の計算\n   *\n   * @param a 値\n   * @return 結果\n   */\n  public dot(a: CubismVector2): number {\n    return this.x * a.x + this.y * a.y;\n  }\n\n  /**\n   * 正規化の適用\n   */\n  public normalize(): void {\n    const length: number = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n\n  /**\n   * 等しさの確認（等しいか？）\n   *\n   * 値が等しいか？\n   *\n   * @param rhs 確認する値\n   * @return true 値は等しい\n   * @return false 値は等しくない\n   */\n  public isEqual(rhs: CubismVector2): boolean {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n\n  /**\n   * 等しさの確認（等しくないか？）\n   *\n   * 値が等しくないか？\n   *\n   * @param rhs 確認する値\n   * @return true 値は等しくない\n   * @return false 値は等しい\n   */\n  public isNotEqual(rhs: CubismVector2): boolean {\n    return !this.isEqual(rhs);\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismVector2 } from './cubismvector2';\n\n  /**\n   * 数値計算などに使用するユーティリティクラス\n   */\n  export class CubismMath {\n    /**\n     * 第一引数の値を最小値と最大値の範囲に収めた値を返す\n     *\n     * @param value 収められる値\n     * @param min   範囲の最小値\n     * @param max   範囲の最大値\n     * @return 最小値と最大値の範囲に収めた値\n     */\n    static range(value: number, min: number, max: number): number {\n      if (value < min) {\n        value = min;\n      } else if (value > max) {\n        value = max;\n      }\n\n      return value;\n    }\n\n    /**\n     * サイン関数の値を求める\n     *\n     * @param x 角度値（ラジアン）\n     * @return サイン関数sin(x)の値\n     */\n    static sin(x: number): number {\n      return Math.sin(x);\n    }\n\n    /**\n     * コサイン関数の値を求める\n     *\n     * @param x 角度値(ラジアン)\n     * @return コサイン関数cos(x)の値\n     */\n    static cos(x: number): number {\n      return Math.cos(x);\n    }\n\n    /**\n     * 値の絶対値を求める\n     *\n     * @param x 絶対値を求める値\n     * @return 値の絶対値\n     */\n    static abs(x: number): number {\n      return Math.abs(x);\n    }\n\n    /**\n     * 平方根(ルート)を求める\n     * @param x -> 平方根を求める値\n     * @return 値の平方根\n     */\n    static sqrt(x: number): number {\n      return Math.sqrt(x);\n    }\n\n    /**\n     * イージング処理されたサインを求める\n     * フェードイン・アウト時のイージングに利用できる\n     *\n     * @param value イージングを行う値\n     * @return イージング処理されたサイン値\n     */\n    static getEasingSine(value: number): number {\n      if (value < 0.0) {\n        return 0.0;\n      } else if (value > 1.0) {\n        return 1.0;\n      }\n\n      return 0.5 - 0.5 * this.cos(value * Math.PI);\n    }\n\n    /**\n     * 大きい方の値を返す\n     *\n     * @param left 左辺の値\n     * @param right 右辺の値\n     * @return 大きい方の値\n     */\n    static max(left: number, right: number): number {\n      return left > right ? left : right;\n    }\n\n    /**\n     * 小さい方の値を返す\n     *\n     * @param left  左辺の値\n     * @param right 右辺の値\n     * @return 小さい方の値\n     */\n    static min(left: number, right: number): number {\n      return left > right ? right : left;\n    }\n\n    /**\n     * 角度値をラジアン値に変換する\n     *\n     * @param degrees   角度値\n     * @return 角度値から変換したラジアン値\n     */\n    static degreesToRadian(degrees: number): number {\n      return (degrees / 180.0) * Math.PI;\n    }\n\n    /**\n     * ラジアン値を角度値に変換する\n     *\n     * @param radian    ラジアン値\n     * @return ラジアン値から変換した角度値\n     */\n    static radianToDegrees(radian: number): number {\n      return (radian * 180.0) / Math.PI;\n    }\n\n    /**\n     * ２つのベクトルからラジアン値を求める\n     *\n     * @param from  始点ベクトル\n     * @param to    終点ベクトル\n     * @return ラジアン値から求めた方向ベクトル\n     */\n    static directionToRadian(from: CubismVector2, to: CubismVector2): number {\n      const q1: number = Math.atan2(to.y, to.x);\n      const q2: number = Math.atan2(from.y, from.x);\n\n      let ret: number = q1 - q2;\n\n      while (ret < -Math.PI) {\n        ret += Math.PI * 2.0;\n      }\n\n      while (ret > Math.PI) {\n        ret -= Math.PI * 2.0;\n      }\n\n      return ret;\n    }\n\n    /**\n     * ２つのベクトルから角度値を求める\n     *\n     * @param from  始点ベクトル\n     * @param to    終点ベクトル\n     * @return 角度値から求めた方向ベクトル\n     */\n    static directionToDegrees(from: CubismVector2, to: CubismVector2): number {\n      const radian: number = this.directionToRadian(from, to);\n      let degree: number = this.radianToDegrees(radian);\n\n      if (to.x - from.x > 0.0) {\n        degree = -degree;\n      }\n\n      return degree;\n    }\n\n    /**\n     * ラジアン値を方向ベクトルに変換する。\n     *\n     * @param totalAngle    ラジアン値\n     * @return ラジアン値から変換した方向ベクトル\n     */\n\n    static radianToDirection(totalAngle: number): CubismVector2 {\n      const ret: CubismVector2 = new CubismVector2();\n\n      ret.x = this.sin(totalAngle);\n      ret.y = this.cos(totalAngle);\n\n      return ret;\n    }\n\n    /**\n     * コンストラクタ\n     */\n    private constructor() {}\n  }\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * 4x4の行列\n *\n * 4x4行列の便利クラス。\n */\nexport class CubismMatrix44 {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._tr = new Float32Array(16); // 4 * 4のサイズ\n    this.loadIdentity();\n  }\n\n  /**\n   * 受け取った２つの行列の乗算を行う。\n   *\n   * @param a 行列a\n   * @param b 行列b\n   * @return 乗算結果の行列\n   */\n  public static multiply(\n    a: Float32Array,\n    b: Float32Array,\n    dst: Float32Array,\n  ): void {\n    const c: Float32Array = new Float32Array([\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n    ]);\n\n    const n = 4;\n\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n\n  /**\n   * 単位行列に初期化する\n   */\n  public loadIdentity(): void {\n    const c: Float32Array = new Float32Array([\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n    ]);\n\n    this.setMatrix(c);\n  }\n\n  /**\n   * 行列を設定\n   *\n   * @param tr 16個の浮動小数点数で表される4x4の行列\n   */\n  public setMatrix(tr: Float32Array): void {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n\n  /**\n   * 行列を浮動小数点数の配列で取得\n   *\n   * @return 16個の浮動小数点数で表される4x4の行列\n   */\n  public getArray(): Float32Array {\n    return this._tr;\n  }\n\n  /**\n   * X軸の拡大率を取得\n   * @return X軸の拡大率\n   */\n  public getScaleX(): number {\n    return this._tr[0];\n  }\n\n  /**\n   * Y軸の拡大率を取得する\n   *\n   * @return Y軸の拡大率\n   */\n  public getScaleY(): number {\n    return this._tr[5];\n  }\n\n  /**\n   * X軸の移動量を取得\n   * @return X軸の移動量\n   */\n  public getTranslateX(): number {\n    return this._tr[12];\n  }\n\n  /**\n   * Y軸の移動量を取得\n   * @return Y軸の移動量\n   */\n  public getTranslateY(): number {\n    return this._tr[13];\n  }\n\n  /**\n   * X軸の値を現在の行列で計算\n   *\n   * @param src X軸の値\n   * @return 現在の行列で計算されたX軸の値\n   */\n  public transformX(src: number): number {\n    return this._tr[0] * src + this._tr[12];\n  }\n\n  /**\n   * Y軸の値を現在の行列で計算\n   *\n   * @param src Y軸の値\n   * @return 現在の行列で計算されたY軸の値\n   */\n  public transformY(src: number): number {\n    return this._tr[5] * src + this._tr[13];\n  }\n\n  /**\n   * X軸の値を現在の行列で逆計算\n   */\n  public invertTransformX(src: number): number {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n\n  /**\n   * Y軸の値を現在の行列で逆計算\n   */\n  public invertTransformY(src: number): number {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n\n  /**\n   * 現在の行列の位置を起点にして移動\n   *\n   * 現在の行列の位置を起点にして相対的に移動する。\n   *\n   * @param x X軸の移動量\n   * @param y Y軸の移動量\n   */\n  public translateRelative(x: number, y: number): void {\n    const tr1: Float32Array = new Float32Array([\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      x,\n      y,\n      0.0,\n      1.0,\n    ]);\n\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n\n  /**\n   * 現在の行列の位置を移動\n   *\n   * 現在の行列の位置を指定した位置へ移動する\n   *\n   * @param x X軸の移動量\n   * @param y y軸の移動量\n   */\n  public translate(x: number, y: number): void {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n\n  /**\n   * 現在の行列のX軸の位置を指定した位置へ移動する\n   *\n   * @param x X軸の移動量\n   */\n  public translateX(x: number): void {\n    this._tr[12] = x;\n  }\n\n  /**\n   * 現在の行列のY軸の位置を指定した位置へ移動する\n   *\n   * @param y Y軸の移動量\n   */\n  public translateY(y: number): void {\n    this._tr[13] = y;\n  }\n\n  /**\n   * 現在の行列の拡大率を相対的に設定する\n   *\n   * @param x X軸の拡大率\n   * @param y Y軸の拡大率\n   */\n  public scaleRelative(x: number, y: number): void {\n    const tr1: Float32Array = new Float32Array([\n      x,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      y,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n    ]);\n\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n\n  /**\n   * 現在の行列の拡大率を指定した倍率に設定する\n   *\n   * @param x X軸の拡大率\n   * @param y Y軸の拡大率\n   */\n  public scale(x: number, y: number): void {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n\n  /**\n   * 現在の行列に行列を乗算\n   *\n   * @param m 行列\n   */\n  public multiplyByMatrix(m: CubismMatrix44): void {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n\n  /**\n   * オブジェクトのコピーを生成する\n   */\n  public clone(): CubismMatrix44 {\n    const cloneMatrix: CubismMatrix44 = new CubismMatrix44();\n\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n\n    return cloneMatrix;\n  }\n\n  protected _tr: Float32Array; // 4x4行列データ\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismRenderer } from './rendering/cubismrenderer';\nimport { CubismLogInfo, CubismLogWarning } from './utils/cubismdebug';\n\n// ファイルスコープの変数を初期化\n\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option: CubismStartupOption | undefined = undefined;\n\n/**\n * Framework内で使う定数の宣言\n */\nexport namespace Constant {\n  export const vertexOffset = 0; // メッシュ頂点のオフセット値\n  export const vertexStep = 2; // メッシュ頂点のステップ値\n}\n\n/**\n * Live2D Cubism SDK Original Workflow SDKのエントリポイント\n * 利用開始時はCubismFramework.initialize()を呼び、CubismFramework.dispose()で終了する。\n */\nexport class CubismFramework {\n  /**\n   * Cubism FrameworkのAPIを使用可能にする。\n   *  APIを実行する前に必ずこの関数を実行すること。\n   *  一度準備が完了して以降は、再び実行しても内部処理がスキップされます。\n   *\n   * @param    option      Optionクラスのインスタンス\n   *\n   * @return   準備処理が完了したらtrueが返ります。\n   */\n  public static startUp(option?: CubismStartupOption): boolean {\n    if (s_isStarted) {\n      CubismLogInfo('CubismFramework.startUp() is already done.');\n      return s_isStarted;\n    }\n\n    if ((Live2DCubismCore as any)._isStarted) {\n      s_isStarted = true;\n      return true;\n    }\n\n    (Live2DCubismCore as any)._isStarted = true;\n\n    s_option = option;\n\n    if (s_option) {\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n\n    s_isStarted = true;\n\n    // Live2D Cubism Coreバージョン情報を表示\n    if (s_isStarted) {\n      const version: number = Live2DCubismCore.Version.csmGetVersion();\n      const major: number = (version & 0xff000000) >> 24;\n      const minor: number = (version & 0x00ff0000) >> 16;\n      const patch: number = version & 0x0000ffff;\n      const versionNumber: number = version;\n\n      CubismLogInfo(\n        `Live2D Cubism Core version: {0}.{1}.{2} ({3})`,\n        ('00' + major).slice(-2),\n        ('00' + minor).slice(-2),\n        ('0000' + patch).slice(-4),\n        versionNumber,\n      );\n    }\n\n    CubismLogInfo('CubismFramework.startUp() is complete.');\n\n    return s_isStarted;\n  }\n\n  /**\n   * StartUp()で初期化したCubismFrameworkの各パラメータをクリアします。\n   * Dispose()したCubismFrameworkを再利用する際に利用してください。\n   */\n  public static cleanUp(): void {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = undefined;\n  }\n\n  /**\n   * Cubism Framework内のリソースを初期化してモデルを表示可能な状態にします。<br>\n   *     再度Initialize()するには先にDispose()を実行する必要があります。\n   */\n  public static initialize(): void {\n    if (!s_isStarted) {\n      CubismLogWarning('CubismFramework is not started.');\n      return;\n    }\n\n    // --- s_isInitializedによる連続初期化ガード ---\n    // 連続してリソース確保が行われないようにする。\n    // 再度Initialize()するには先にDispose()を実行する必要がある。\n    if (s_isInitialized) {\n      CubismLogWarning(\n        'CubismFramework.initialize() skipped, already initialized.',\n      );\n      return;\n    }\n\n    s_isInitialized = true;\n\n    CubismLogInfo('CubismFramework.initialize() is complete.');\n  }\n\n  /**\n   * Cubism Framework内の全てのリソースを解放します。\n   *      ただし、外部で確保されたリソースについては解放しません。\n   *      外部で適切に破棄する必要があります。\n   */\n  public static dispose(): void {\n    if (!s_isStarted) {\n      CubismLogWarning('CubismFramework is not started.');\n      return;\n    }\n\n    // --- s_isInitializedによる未初期化解放ガード ---\n    // dispose()するには先にinitialize()を実行する必要がある。\n    if (!s_isInitialized) {\n      // false...リソース未確保の場合\n      CubismLogWarning('CubismFramework.dispose() skipped, not initialized.');\n      return;\n    }\n\n    // レンダラの静的リソース（シェーダプログラム他）を解放する\n    CubismRenderer.staticRelease();\n\n    s_isInitialized = false;\n\n    CubismLogInfo('CubismFramework.dispose() is complete.');\n  }\n\n  /**\n   * Cubism FrameworkのAPIを使用する準備が完了したかどうか\n   * @return APIを使用する準備が完了していればtrueが返ります。\n   */\n  public static isStarted(): boolean {\n    return s_isStarted;\n  }\n\n  /**\n   * Cubism Frameworkのリソース初期化がすでに行われているかどうか\n   * @return リソース確保が完了していればtrueが返ります\n   */\n  public static isInitialized(): boolean {\n    return s_isInitialized;\n  }\n\n  /**\n   * Core APIにバインドしたログ関数を実行する\n   *\n   * @praram message ログメッセージ\n   */\n  public static coreLogFunction(message: string): void {\n    // Return if logging not possible.\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n\n  /**\n   * 現在のログ出力レベル設定の値を返す。\n   *\n   * @return  現在のログ出力レベル設定の値\n   */\n  public static getLoggingLevel(): LogLevel {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n\n  /**\n   * 静的クラスとして使用する\n   * インスタンス化させない\n   */\n  private constructor() {}\n}\n\nexport interface CubismStartupOption {\n  logFunction: Live2DCubismCore.csmLogFunction; // ログ出力の関数オブジェクト\n  loggingLevel: LogLevel; // ログ出力レベルの設定\n}\n\n/**\n * ログ出力のレベル\n */\nexport enum LogLevel {\n  LogLevel_Verbose = 0, // 詳細ログ\n  LogLevel_Debug, // デバッグログ\n  LogLevel_Info, // Infoログ\n  LogLevel_Warning, // 警告ログ\n  LogLevel_Error, // エラーログ\n  LogLevel_Off // ログ出力無効\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismFramework, LogLevel } from '../live2dcubismframework';\n\nexport const CSM_ASSERT = process.env.NODE_ENV === 'production' ? () => {} : (expr: any) => console.assert(expr);\n\nexport function CubismLogVerbose(fmt: string, ...args: any[]) {\n  CubismDebug.print(LogLevel.LogLevel_Verbose, '[CSM][V]' + fmt + '\\n', args);\n}\n\nexport function CubismLogDebug(fmt: string, ...args: any[]) {\n  CubismDebug.print(LogLevel.LogLevel_Debug, '[CSM][D]' + fmt + '\\n', args);\n}\n\nexport function CubismLogInfo(fmt: string, ...args: any[]) {\n  CubismDebug.print(LogLevel.LogLevel_Info, '[CSM][I]' + fmt + '\\n', args);\n}\n\nexport function CubismLogWarning(fmt: string, ...args: any[]) {\n  CubismDebug.print(LogLevel.LogLevel_Warning, '[CSM][W]' + fmt + '\\n', args);\n}\n\nexport function CubismLogError(fmt: string, ...args: any[]) {\n  CubismDebug.print(LogLevel.LogLevel_Error, '[CSM][E]' + fmt + '\\n', args);\n}\n\n/**\n * デバッグ用のユーティリティクラス。\n * ログの出力、バイトのダンプなど\n */\nexport class CubismDebug {\n  /**\n   * ログを出力する。第一引数にログレベルを設定する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param format 書式付き文字列\n   * @param args 可変長引数\n   */\n  public static print(\n    logLevel: LogLevel,\n    format: string,\n    args?: any[],\n  ): void {\n    // オプションで設定されたログ出力レベルを下回る場合はログに出さない\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n\n    const logPrint: Live2DCubismCore.csmLogFunction = CubismFramework.coreLogFunction;\n\n    if (!logPrint) return;\n\n    const buffer: string = format.replace(/{(\\d+)}/g, (m, k) => {\n      return args![k];\n    });\n    logPrint(buffer);\n  }\n\n  /**\n   * データから指定した長さだけダンプ出力する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param data ダンプするデータ\n   * @param length ダンプする長さ\n   */\n  public static dumpBytes(\n    logLevel: LogLevel,\n    data: Uint8Array,\n    length: number,\n  ): void {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0) this.print(logLevel, '\\n');\n      else if (i % 8 == 0 && i > 0) this.print(logLevel, '  ');\n      this.print(logLevel, '{0} ', [data[i] & 0xff]);\n    }\n\n    this.print(logLevel, '\\n');\n  }\n\n  /**\n   * private コンストラクタ\n   */\n  private constructor() {}\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismMath } from '../math/cubismmath';\nimport { CubismModel } from '../model/cubismmodel';\nimport { CSM_ASSERT } from '../utils/cubismdebug';\nimport { CubismMotionQueueEntry } from './cubismmotionqueueentry';\n\n/**\n * モーションの抽象基底クラス\n *\n * モーションの抽象基底クラス。MotionQueueManagerによってモーションの再生を管理する。\n */\nexport abstract class ACubismMotion {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._fadeInSeconds = -1.0;\n    this._fadeOutSeconds = -1.0;\n    this._weight = 1.0;\n    this._offsetSeconds = 0.0; // 再生の開始時刻\n    this._firedEventValues = [];\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    this._weight = 0.0;\n  }\n\n  /**\n   * モデルのパラメータ\n   * @param model 対象のモデル\n   * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   */\n  public updateParameters(\n    model: CubismModel,\n    motionQueueEntry: CubismMotionQueueEntry,\n    userTimeSeconds: number,\n  ): void {\n    if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n      return;\n    }\n\n    if (!motionQueueEntry.isStarted()) {\n      motionQueueEntry.setIsStarted(true);\n      motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds); // モーションの開始時刻を記録\n      motionQueueEntry.setFadeInStartTime(userTimeSeconds); // フェードインの開始時刻\n\n      const duration: number = this.getDuration();\n\n      if (motionQueueEntry.getEndTime() < 0) {\n        // 開始していないうちに終了設定している場合がある。\n        motionQueueEntry.setEndTime(\n          duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration,\n        );\n        // duration == -1 の場合はループする\n      }\n    }\n\n    let fadeWeight: number = this._weight; // 現在の値と掛け合わせる割合\n\n    //---- フェードイン・アウトの処理 ----\n    // 単純なサイン関数でイージングする\n    const fadeIn: number =\n      this._fadeInSeconds == 0.0\n        ? 1.0\n        : CubismMath.getEasingSine(\n        (userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n        this._fadeInSeconds,\n        );\n\n    const fadeOut: number =\n      this._fadeOutSeconds == 0.0 || motionQueueEntry.getEndTime() < 0.0\n        ? 1.0\n        : CubismMath.getEasingSine(\n        (motionQueueEntry.getEndTime() - userTimeSeconds) /\n        this._fadeOutSeconds,\n        );\n\n    fadeWeight = fadeWeight * fadeIn * fadeOut;\n\n    motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n\n    CSM_ASSERT(0.0 <= fadeWeight && fadeWeight <= 1.0);\n\n    //---- 全てのパラメータIDをループする ----\n    this.doUpdateParameters(\n      model,\n      userTimeSeconds,\n      fadeWeight,\n      motionQueueEntry,\n    );\n\n    // 後処理\n    // 終了時刻を過ぎたら終了フラグを立てる(CubismMotionQueueManager)\n    if (\n      motionQueueEntry.getEndTime() > 0 &&\n      motionQueueEntry.getEndTime() < userTimeSeconds\n    ) {\n      motionQueueEntry.setIsFinished(true); // 終了\n    }\n  }\n\n  /**\n   * フェードインの時間を設定する\n   * @param fadeInSeconds フェードインにかかる時間[秒]\n   */\n  public setFadeInTime(fadeInSeconds: number): void {\n    this._fadeInSeconds = fadeInSeconds;\n  }\n\n  /**\n   * フェードアウトの時間を設定する\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   */\n  public setFadeOutTime(fadeOutSeconds: number): void {\n    this._fadeOutSeconds = fadeOutSeconds;\n  }\n\n  /**\n   * フェードアウトにかかる時間の取得\n   * @return フェードアウトにかかる時間[秒]\n   */\n  public getFadeOutTime(): number {\n    return this._fadeOutSeconds;\n  }\n\n  /**\n   * フェードインにかかる時間の取得\n   * @return フェードインにかかる時間[秒]\n   */\n  public getFadeInTime(): number {\n    return this._fadeInSeconds;\n  }\n\n  /**\n   * モーション適用の重みの設定\n   * @param weight 重み（0.0 - 1.0）\n   */\n  public setWeight(weight: number): void {\n    this._weight = weight;\n  }\n\n  /**\n   * モーション適用の重みの取得\n   * @return 重み（0.0 - 1.0）\n   */\n  public getWeight(): number {\n    return this._weight;\n  }\n\n  /**\n   * モーションの長さの取得\n   * @return モーションの長さ[秒]\n   *\n   * @note ループの時は「-1」。\n   *       ループでない場合は、オーバーライドする。\n   *       正の値の時は取得される時間で終了する。\n   *       「-1」の時は外部から停止命令がない限り終わらない処理となる。\n   */\n  public getDuration(): number {\n    return -1.0;\n  }\n\n  /**\n   * モーションのループ1回分の長さの取得\n   * @return モーションのループ一回分の長さ[秒]\n   *\n   * @note ループしない場合は、getDuration()と同じ値を返す\n   *       ループ一回分の長さが定義できない場合(プログラム的に動き続けるサブクラスなど)の場合は「-1」を返す\n   */\n  public getLoopDuration(): number {\n    return -1.0;\n  }\n\n  /**\n   * モーション再生の開始時刻の設定\n   * @param offsetSeconds モーション再生の開始時刻[秒]\n   */\n  public setOffsetTime(offsetSeconds: number): void {\n    this._offsetSeconds = offsetSeconds;\n  }\n\n  /**\n   * モデルのパラメータ更新\n   *\n   * イベント発火のチェック。\n   * 入力する時間は呼ばれるモーションタイミングを０とした秒数で行う。\n   *\n   * @param beforeCheckTimeSeconds 前回のイベントチェック時間[秒]\n   * @param motionTimeSeconds 今回の再生時間[秒]\n   */\n  public getFiredEvent(\n    beforeCheckTimeSeconds: number,\n    motionTimeSeconds: number,\n  ): string[] {\n    return this._firedEventValues;\n  }\n\n  /**\n   * モーションを更新して、モデルにパラメータ値を反映する\n   * @param model 対象のモデル\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   * @param weight モーションの重み\n   * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\n   * @return true モデルへパラメータ値の反映あり\n   * @return false モデルへのパラメータ値の反映なし（モーションの変化なし）\n   */\n  public abstract doUpdateParameters(\n    model: CubismModel,\n    userTimeSeconds: number,\n    weight: number,\n    motionQueueEntry: CubismMotionQueueEntry,\n  ): void;\n\n  /**\n   * モーション再生終了コールバックの登録\n   *\n   * モーション再生終了コールバックを登録する。\n   * isFinishedフラグを設定するタイミングで呼び出される。\n   * 以下の状態の際には呼び出されない:\n   *   1. 再生中のモーションが「ループ」として設定されているとき\n   *   2. コールバックが登録されていない時\n   *\n   * @param onFinishedMotionHandler モーション再生終了コールバック関数\n   */\n  public setFinishedMotionHandler(\n    onFinishedMotionHandler?: (self: ACubismMotion) => void,\n  ) {\n    this._onFinishedMotion = onFinishedMotionHandler;\n  };\n\n  /**\n   * モーション再生終了コールバックの取得\n   *\n   * モーション再生終了コールバックを取得する。\n   *\n   * @return 登録されているモーション再生終了コールバック関数\n   */\n  public getFinishedMotionHandler() {\n    return this._onFinishedMotion;\n  };\n\n  public _fadeInSeconds: number; // フェードインにかかる時間[秒]\n  public _fadeOutSeconds: number; // フェードアウトにかかる時間[秒]\n  public _weight: number; // モーションの重み\n  public _offsetSeconds: number; // モーション再生の開始時間[秒]\n\n  public _firedEventValues: string[];\n\n  // モーション再生終了コールバック関数\n  public _onFinishedMotion?: (self: ACubismMotion) => void;\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from '../model/cubismmodel';\nimport { ACubismMotion } from './acubismmotion';\nimport { CubismMotionQueueEntry } from './cubismmotionqueueentry';\n\n// exp3.jsonのキーとデフォルト\nconst DefaultFadeTime = 1.0;\n\n/**\n * 表情のモーション\n *\n * 表情のモーションクラス。\n */\nexport class CubismExpressionMotion extends ACubismMotion {\n  /**\n   * インスタンスを作成する。\n   * @param json expファイルが読み込まれているバッファ\n   * @param size バッファのサイズ\n   * @return 作成されたインスタンス\n   */\n  public static create(json: CubismSpec.ExpressionJSON): CubismExpressionMotion {\n    const expression: CubismExpressionMotion = new CubismExpressionMotion();\n\n    const fadeInTime = json.FadeInTime;\n    const fadeOutTime = json.FadeOutTime;\n\n    expression.setFadeInTime(fadeInTime !== undefined ? fadeInTime : DefaultFadeTime); // フェードイン\n    expression.setFadeOutTime(fadeOutTime !== undefined ? fadeOutTime : DefaultFadeTime); // フェードアウト\n\n    // 各パラメータについて\n    const parameters = json.Parameters || [];\n\n    for (let i = 0; i < parameters.length; ++i) {\n      const param = parameters[i];\n      const parameterId: string = param.Id; // パラメータID\n\n      const value: number = param.Value; // 値\n\n      // 計算方法の設定\n      let blendType: ExpressionBlendType;\n\n      switch (param.Blend) {\n        case 'Multiply':\n          blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n          break;\n\n        case 'Overwrite':\n          blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n          break;\n\n        case 'Add':\n        // その他 仕様にない値を設定した時は加算モードにすることで復旧\n        default:\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n          break;\n      }\n\n      // 設定オブジェクトを作成してリストに追加する\n      const item: ExpressionParameter = {\n        parameterId: parameterId,\n        blendType: blendType,\n        value: value,\n      };\n\n      expression._parameters.push(item);\n    }\n\n    return expression;\n  }\n\n  /**\n   * モデルのパラメータの更新の実行\n   * @param model 対象のモデル\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   * @param weight モーションの重み\n   * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\n   */\n  public doUpdateParameters(\n    model: CubismModel,\n    userTimeSeconds: number,\n    weight: number,\n    motionQueueEntry: CubismMotionQueueEntry,\n  ): void {\n    for (let i = 0; i < this._parameters.length; ++i) {\n      const parameter: ExpressionParameter = this._parameters[i];\n\n      switch (parameter.blendType) {\n        case ExpressionBlendType.ExpressionBlendType_Add: {\n          model.addParameterValueById(\n            parameter.parameterId,\n            parameter.value,\n            weight,\n          );\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Multiply: {\n          model.multiplyParameterValueById(\n            parameter.parameterId,\n            parameter.value,\n            weight,\n          );\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n          model.setParameterValueById(\n            parameter.parameterId,\n            parameter.value,\n            weight,\n          );\n          break;\n        }\n        default:\n          // 仕様にない値を設定した時はすでに加算モードになっている\n          break;\n      }\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    super();\n\n    this._parameters = [];\n  }\n\n  _parameters: ExpressionParameter[]; // 表情のパラメータ情報リスト\n}\n\n/**\n * 表情パラメータ値の計算方式\n */\nexport enum ExpressionBlendType {\n  ExpressionBlendType_Add = 0, // 加算\n  ExpressionBlendType_Multiply = 1, // 乗算\n  ExpressionBlendType_Overwrite = 2 // 上書き\n}\n\n/**\n * 表情のパラメータ情報\n */\nexport interface ExpressionParameter {\n  parameterId: string; // パラメータID\n  blendType: ExpressionBlendType; // パラメータの演算種類\n  value: number; // 値\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { ACubismMotion } from './acubismmotion';\nimport { CubismMotionQueueEntryHandle } from './cubismmotionqueuemanager';\n\n/**\n * CubismMotionQueueManagerで再生している各モーションの管理クラス。\n */\nexport class CubismMotionQueueEntry {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._autoDelete = false;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1.0;\n    this._fadeInStartTimeSeconds = 0.0;\n    this._endTimeSeconds = -1.0;\n    this._stateTimeSeconds = 0.0;\n    this._stateWeight = 0.0;\n    this._lastEventCheckSeconds = 0.0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0.0;\n    this._isTriggeredFadeOut = false;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    if (this._autoDelete && this._motion) {\n      this._motion.release();\n    }\n  }\n\n  /**\n   * フェードアウト時間と開始判定の設定\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   */\n  public setFadeOut(fadeOutSeconds: number): void {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n\n  /**\n   * フェードアウトの開始\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   */\n  public startFadeOut(fadeOutSeconds: number, userTimeSeconds: number): void {\n    const newEndTimeSeconds: number = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n\n    if (\n      this._endTimeSeconds < 0.0 ||\n      newEndTimeSeconds < this._endTimeSeconds\n    ) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n\n  /**\n   * モーションの終了の確認\n   *\n   * @return true モーションが終了した\n   * @return false 終了していない\n   */\n  public isFinished(): boolean {\n    return this._finished;\n  }\n\n  /**\n   * モーションの開始の確認\n   * @return true モーションが開始した\n   * @return false 開始していない\n   */\n  public isStarted(): boolean {\n    return this._started;\n  }\n\n  /**\n   * モーションの開始時刻の取得\n   * @return モーションの開始時刻[秒]\n   */\n  public getStartTime(): number {\n    return this._startTimeSeconds;\n  }\n\n  /**\n   * フェードインの開始時刻の取得\n   * @return フェードインの開始時刻[秒]\n   */\n  public getFadeInStartTime(): number {\n    return this._fadeInStartTimeSeconds;\n  }\n\n  /**\n   * フェードインの終了時刻の取得\n   * @return フェードインの終了時刻の取得\n   */\n  public getEndTime(): number {\n    return this._endTimeSeconds;\n  }\n\n  /**\n   * モーションの開始時刻の設定\n   * @param startTime モーションの開始時刻\n   */\n  public setStartTime(startTime: number): void {\n    this._startTimeSeconds = startTime;\n  }\n\n  /**\n   * フェードインの開始時刻の設定\n   * @param startTime フェードインの開始時刻[秒]\n   */\n  public setFadeInStartTime(startTime: number): void {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n\n  /**\n   * フェードインの終了時刻の設定\n   * @param endTime フェードインの終了時刻[秒]\n   */\n  public setEndTime(endTime: number): void {\n    this._endTimeSeconds = endTime;\n  }\n\n  /**\n   * モーションの終了の設定\n   * @param f trueならモーションの終了\n   */\n  public setIsFinished(f: boolean): void {\n    this._finished = f;\n  }\n\n  /**\n   * モーション開始の設定\n   * @param f trueならモーションの開始\n   */\n  public setIsStarted(f: boolean): void {\n    this._started = f;\n  }\n\n  /**\n   * モーションの有効性の確認\n   * @return true モーションは有効\n   * @return false モーションは無効\n   */\n  public isAvailable(): boolean {\n    return this._available;\n  }\n\n  /**\n   * モーションの有効性の設定\n   * @param v trueならモーションは有効\n   */\n  public setIsAvailable(v: boolean): void {\n    this._available = v;\n  }\n\n  /**\n   * モーションの状態の設定\n   * @param timeSeconds 現在時刻[秒]\n   * @param weight モーション尾重み\n   */\n  public setState(timeSeconds: number, weight: number): void {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n\n  /**\n   * モーションの現在時刻の取得\n   * @return モーションの現在時刻[秒]\n   */\n  public getStateTime(): number {\n    return this._stateTimeSeconds;\n  }\n\n  /**\n   * モーションの重みの取得\n   * @return モーションの重み\n   */\n  public getStateWeight(): number {\n    return this._stateWeight;\n  }\n\n  /**\n   * 最後にイベントの発火をチェックした時間を取得\n   *\n   * @return 最後にイベントの発火をチェックした時間[秒]\n   */\n  public getLastCheckEventSeconds(): number {\n    return this._lastEventCheckSeconds;\n  }\n\n  /**\n   * 最後にイベントをチェックした時間を設定\n   * @param checkSeconds 最後にイベントをチェックした時間[秒]\n   */\n  public setLastCheckEventSeconds(checkSeconds: number): void {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n\n  /**\n   * フェードアウト開始判定の取得\n   * @return フェードアウト開始するかどうか\n   */\n  public isTriggeredFadeOut(): boolean {\n    return this._isTriggeredFadeOut && this._endTimeSeconds < 0.0;\n  }\n\n  /**\n   * フェードアウト時間の取得\n   * @return フェードアウト時間[秒]\n   */\n  public getFadeOutSeconds(): number {\n    return this._fadeOutSeconds;\n  }\n\n  _autoDelete: boolean; // 自動削除\n  _motion!: ACubismMotion; // モーション\n\n  _available: boolean; // 有効化フラグ\n  _finished: boolean; // 終了フラグ\n  _started: boolean; // 開始フラグ\n  _startTimeSeconds: number; // モーション再生開始時刻[秒]\n  _fadeInStartTimeSeconds: number; // フェードイン開始時刻（ループの時は初回のみ）[秒]\n  _endTimeSeconds: number; // 終了予定時刻[秒]\n  _stateTimeSeconds: number; // 時刻の状態[秒]\n  _stateWeight: number; // 重みの状態\n  _lastEventCheckSeconds: number; // 最終のMotion側のチェックした時間\n  private _fadeOutSeconds: number; // フェードアウト時間[秒]\n  private _isTriggeredFadeOut: boolean; // フェードアウト開始フラグ\n\n  _motionQueueEntryHandle: CubismMotionQueueEntryHandle; // インスタンスごとに一意の値を持つ識別番号\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from '../model/cubismmodel';\nimport { ACubismMotion } from './acubismmotion';\nimport { CubismMotionQueueEntry } from './cubismmotionqueueentry';\n\n/**\n * モーション再生の管理\n *\n * モーション再生の管理用クラス。CubismMotionモーションなどACubismMotionのサブクラスを再生するために使用する。\n *\n * @note 再生中に別のモーションが StartMotion()された場合は、新しいモーションに滑らかに変化し旧モーションは中断する。\n *       表情用モーション、体用モーションなどを分けてモーション化した場合など、\n *       複数のモーションを同時に再生させる場合は、複数のCubismMotionQueueManagerインスタンスを使用する。\n */\nexport class CubismMotionQueueManager {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._userTimeSeconds = 0.0;\n    this._eventCustomData = null;\n    this._motions = [];\n  }\n\n  /**\n   * デストラクタ\n   */\n  public release(): void {\n    for (let i = 0; i < this._motions.length; ++i) {\n      if (this._motions[i]) {\n        this._motions[i].release();\n      }\n    }\n\n    (this as Partial<this>)._motions = undefined;\n  }\n\n  /**\n   * 指定したモーションの開始\n   *\n   * 指定したモーションを開始する。同じタイプのモーションが既にある場合は、既存のモーションに終了フラグを立て、フェードアウトを開始させる。\n   *\n   * @param   motion          開始するモーション\n   * @param   autoDelete      再生が終了したモーションのインスタンスを削除するなら true\n   * @param   userTimeSeconds デルタ時間の積算値[秒]\n   * @return                      開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するIsFinished()の引数で使用する。開始できない時は「-1」\n   */\n  public startMotion(\n    motion: ACubismMotion,\n    autoDelete: boolean,\n    userTimeSeconds: number,\n  ): CubismMotionQueueEntryHandle {\n    if (motion == null) {\n      return InvalidMotionQueueEntryHandleValue;\n    }\n\n    let motionQueueEntry: CubismMotionQueueEntry;\n\n    // 既にモーションがあれば終了フラグを立てる\n    for (let i = 0; i < this._motions.length; ++i) {\n      motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n\n      motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime()); // フェードアウト設定\n    }\n\n    motionQueueEntry = new CubismMotionQueueEntry(); // 終了時に破棄する\n    motionQueueEntry._autoDelete = autoDelete;\n    motionQueueEntry._motion = motion;\n\n    this._motions.push(motionQueueEntry);\n\n    return motionQueueEntry._motionQueueEntryHandle;\n  }\n\n  /**\n   * 全てのモーションの終了の確認\n   * @return true 全て終了している\n   * @return false 終了していない\n   */\n  public isFinished(): boolean {\n    // ------- 処理を行う -------\n    // 既にモーションがあれば終了フラグを立てる\n\n    let i = 0;\n\n    while (i < this._motions.length) {\n      const motionQueueEntry: CubismMotionQueueEntry = this._motions[i];\n\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1); // 削除\n        continue;\n      }\n\n      const motion: ACubismMotion = motionQueueEntry._motion;\n\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1); // 削除\n        continue;\n      }\n\n      // ----- 終了済みの処理があれば削除する ------\n      if (!motionQueueEntry.isFinished()) {\n        return false;\n      }\n\n      i++;\n    }\n\n    return true;\n  }\n\n  /**\n   * 指定したモーションの終了の確認\n   * @param motionQueueEntryNumber モーションの識別番号\n   * @return true 全て終了している\n   * @return false 終了していない\n   */\n  public isFinishedByHandle(\n    motionQueueEntryNumber: CubismMotionQueueEntryHandle,\n  ): boolean {\n    // 既にモーションがあれば終了フラグを立てる\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry: CubismMotionQueueEntry = this._motions[i];\n\n      if (motionQueueEntry == null) {\n        continue;\n      }\n\n      if (\n        motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber &&\n        !motionQueueEntry.isFinished()\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * 全てのモーションを停止する\n   */\n  public stopAllMotions(): void {\n    // ------- 処理を行う -------\n    // 既にモーションがあれば終了フラグを立てる\n\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry: CubismMotionQueueEntry = this._motions[i];\n\n      if (motionQueueEntry != null) {\n        // ----- 終了済みの処理があれば削除する ------\n        motionQueueEntry.release();\n      }\n    }\n\n    this._motions = [];\n  }\n\n  /**\n   * 指定したCubismMotionQueueEntryの取得\n\n   * @param   motionQueueEntryNumber  モーションの識別番号\n   * @return  指定したCubismMotionQueueEntry\n   * @return  null   見つからなかった\n   */\n  public getCubismMotionQueueEntry(\n    motionQueueEntryNumber: any,\n  ): CubismMotionQueueEntry | undefined {\n    //------- 処理を行う -------\n    // 既にモーションがあれば終了フラグを立てる\n    return this._motions.find(entry => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n  }\n\n  /**\n   * イベントを受け取るCallbackの登録\n   *\n   * @param callback コールバック関数\n   * @param customData コールバックに返されるデータ\n   */\n  public setEventCallback(\n    callback: CubismMotionEventFunction,\n    customData: any = null,\n  ): void {\n    this._eventCallBack = callback;\n    this._eventCustomData = customData;\n  }\n\n  /**\n   * モーションを更新して、モデルにパラメータ値を反映する。\n   *\n   * @param   model   対象のモデル\n   * @param   userTimeSeconds   デルタ時間の積算値[秒]\n   * @return  true    モデルへパラメータ値の反映あり\n   * @return  false   モデルへパラメータ値の反映なし(モーションの変化なし)\n   */\n  public doUpdateMotion(\n    model: CubismModel,\n    userTimeSeconds: number,\n  ): boolean {\n    let updated = false;\n\n    // ------- 処理を行う --------\n    // 既にモーションがあれば終了フラグを立てる\n\n    let i = 0;\n\n    while (i < this._motions.length) {\n      const motionQueueEntry: CubismMotionQueueEntry = this._motions[i];\n\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1); // 削除\n        continue;\n      }\n\n      const motion: ACubismMotion = motionQueueEntry._motion;\n\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1); // 削除\n        continue;\n      }\n\n      // ------ 値を反映する ------\n      motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n      updated = true;\n\n      // ------ ユーザトリガーイベントを検査する ----\n      const firedList: string[] = motion.getFiredEvent(\n        motionQueueEntry.getLastCheckEventSeconds() -\n        motionQueueEntry.getStartTime(),\n        userTimeSeconds - motionQueueEntry.getStartTime(),\n      );\n\n      for (let i = 0; i < firedList.length; ++i) {\n        this._eventCallBack(this, firedList[i], this._eventCustomData);\n      }\n\n      motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n\n      // ------ 終了済みの処理があれば削除する ------\n      if (motionQueueEntry.isFinished()) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1); // 削除\n      } else {\n        if (motionQueueEntry.isTriggeredFadeOut()) {\n          motionQueueEntry.startFadeOut(\n            motionQueueEntry.getFadeOutSeconds(),\n            userTimeSeconds\n          );\n        }\n        i++;\n      }\n    }\n\n    return updated;\n  }\n\n  _userTimeSeconds: number; // デルタ時間の積算値[秒]\n\n  _motions: CubismMotionQueueEntry[]; // モーション\n  _eventCallBack!: CubismMotionEventFunction; // コールバック関数\n  _eventCustomData: any; // コールバックに戻されるデータ\n}\n\n/**\n * イベントのコールバック関数を定義\n *\n * イベントのコールバックに登録できる関数の型情報\n * @param caller        発火したイベントを再生させたCubismMotionQueueManager\n * @param eventValue    発火したイベントの文字列データ\n * @param customData   コールバックに返される登録時に指定されたデータ\n */\nexport interface CubismMotionEventFunction {\n  (\n    caller: CubismMotionQueueManager,\n    eventValue: string,\n    customData: any,\n  ): void;\n}\n\n/**\n * モーションの識別番号\n *\n * モーションの識別番号の定義\n */\nexport declare type CubismMotionQueueEntryHandle = any;\nexport const InvalidMotionQueueEntryHandleValue: CubismMotionQueueEntryHandle = -1;\n","import { MotionManagerOptions } from '@/cubism-common';\nimport { ExpressionManager } from '@/cubism-common/ExpressionManager';\nimport { Cubism4ModelSettings } from '@/cubism4/Cubism4ModelSettings';\nimport { CubismModel } from '@cubism/model/cubismmodel';\nimport { CubismExpressionMotion } from '@cubism/motion/cubismexpressionmotion';\nimport { CubismMotionQueueManager } from '@cubism/motion/cubismmotionqueuemanager';\n\nexport class Cubism4ExpressionManager extends ExpressionManager<CubismExpressionMotion, CubismSpec.Expression> {\n    readonly queueManager = new CubismMotionQueueManager();\n\n    readonly definitions: CubismSpec.Expression[];\n\n    constructor(settings: Cubism4ModelSettings, options?: MotionManagerOptions) {\n        super(settings, options);\n\n        this.definitions = settings.expressions ?? [];\n\n        this.init();\n    }\n\n    isFinished(): boolean {\n        return this.queueManager.isFinished();\n    }\n\n    getExpressionIndex(name: string): number {\n        return this.definitions.findIndex(def => def.Name === name);\n    }\n\n    getExpressionFile(definition: CubismSpec.Expression): string {\n        return definition.File;\n    }\n\n    createExpression(data: object, definition: CubismSpec.Expression | undefined) {\n        return CubismExpressionMotion.create(data as unknown as CubismSpec.ExpressionJSON);\n    }\n\n    protected _setExpression(motion: CubismExpressionMotion): number {\n        return this.queueManager.startMotion(motion, false, performance.now());\n    }\n\n    protected stopAllExpressions(): void {\n        this.queueManager.stopAllMotions();\n    }\n\n    protected updateParameters(model: CubismModel, now: DOMHighResTimeStamp): boolean {\n        return this.queueManager.doUpdateMotion(model, now);\n    }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * Model3Jsonパーサー\n *\n * model3.jsonファイルをパースして値を取得する\n */\nexport class CubismModelSettingsJson {\n  public constructor(json: CubismSpec.ModelJSON) {\n    this.groups = json.Groups;\n    this.hitAreas = json.HitAreas;\n    this.layout = json.Layout;\n\n    this.moc = json.FileReferences.Moc;\n    this.expressions = json.FileReferences.Expressions;\n    this.motions = json.FileReferences.Motions;\n    this.textures = json.FileReferences.Textures;\n    this.physics = json.FileReferences.Physics;\n    this.pose = json.FileReferences.Pose;\n  }\n\n  public getEyeBlinkParameters(): string[] | undefined {\n    return this.groups?.find(group => group.Name === 'EyeBlink')?.Ids;\n  }\n\n  public getLipSyncParameters(): string[] | undefined {\n    return this.groups?.find(group => group.Name === 'LipSync')?.Ids;\n  }\n\n  groups?: CubismSpec.Group[];\n  moc: string;\n  expressions?: CubismSpec.Expression[];\n  motions?: Record<string, CubismSpec.Motion[]>;\n  textures: string[];\n  physics?: string;\n  pose?: string;\n  hitAreas?: CubismSpec.HitArea[];\n  layout?: CubismSpec.ModelJSON['Layout'];\n}\n","import { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { applyMixins } from '@/utils';\nimport { CubismModelSettingsJson } from '@cubism/settings/cubismmodelsettingsjson';\n\nexport interface Cubism4ModelSettings extends CubismModelSettingsJson {}\n\nexport class Cubism4ModelSettings extends ModelSettings {\n    json!: CubismSpec.ModelJSON;\n\n    moc!: string;\n    textures!: string[];\n\n    static isValidJSON(json: any): json is CubismSpec.ModelJSON {\n        return !!json?.FileReferences\n            && typeof json.FileReferences.Moc === 'string'\n            && json.FileReferences.Textures?.length > 0\n\n            // textures must be an array of strings\n            && json.FileReferences.Textures.every((item: any) => typeof item === 'string');\n    }\n\n    constructor(json: CubismSpec.ModelJSON & { url: string }) {\n        super(json);\n\n        if (!Cubism4ModelSettings.isValidJSON(json)) {\n            throw new TypeError('Invalid JSON.');\n        }\n\n        // this doesn't seem to be allowed in ES6 and above, calling it will cause an error:\n        // \"Class constructor CubismModelSettingsJson cannot be invoked without 'new'\"\n        //\n        // CubismModelSettingsJson.call(this, json);\n\n        Object.assign(this, new CubismModelSettingsJson(json));\n    }\n\n    replaceFiles(replace: (file: string, path: string) => string) {\n        super.replaceFiles(replace);\n\n        if (this.motions) {\n            for (const [group, motions] of Object.entries(this.motions)) {\n                for (let i = 0; i < motions.length; i++) {\n                    motions[i]!.File = replace(motions[i]!.File, `motions.${group}[${i}].File`);\n\n                    if (motions[i]!.Sound !== undefined) {\n                        motions[i]!.Sound = replace(motions[i]!.Sound!, `motions.${group}[${i}].Sound`);\n                    }\n                }\n            }\n        }\n\n        if (this.expressions) {\n            for (let i = 0; i < this.expressions.length; i++) {\n                this.expressions[i]!.File = replace(this.expressions[i]!.File, `expressions[${i}].File`);\n            }\n        }\n    }\n}\n\napplyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * @brief モーションカーブの種類\n *\n * モーションカーブの種類。\n */\nexport enum CubismMotionCurveTarget {\n  CubismMotionCurveTarget_Model, // モデルに対して\n  CubismMotionCurveTarget_Parameter, // パラメータに対して\n  CubismMotionCurveTarget_PartOpacity // パーツの不透明度に対して\n}\n\n/**\n * @brief モーションカーブのセグメントの種類\n *\n * モーションカーブのセグメントの種類。\n */\nexport enum CubismMotionSegmentType {\n  CubismMotionSegmentType_Linear = 0, // リニア\n  CubismMotionSegmentType_Bezier = 1, // ベジェ曲線\n  CubismMotionSegmentType_Stepped = 2, // ステップ\n  CubismMotionSegmentType_InverseStepped = 3 // インバースステップ\n}\n\n/**\n * @brief モーションカーブの制御点\n *\n * モーションカーブの制御点。\n */\nexport class CubismMotionPoint {\n  constructor(time = 0.0, value = 0.0) {\n    this.time = time;\n    this.value = value;\n  }\n\n  time: number; // 時間[秒]\n  value: number; // 値\n}\n\n/**\n * モーションカーブのセグメントの評価関数\n *\n * @param   points      モーションカーブの制御点リスト\n * @param   time        評価する時間[秒]\n */\nexport interface csmMotionSegmentEvaluationFunction {\n  (points: CubismMotionPoint[], time: number): number;\n}\n\n/**\n * @brief モーションカーブのセグメント\n *\n * モーションカーブのセグメント。\n */\nexport class CubismMotionSegment {\n  /**\n   * @brief コンストラクタ\n   *\n   * コンストラクタ。\n   */\n  public constructor() {\n    this.basePointIndex = 0;\n    this.segmentType = 0;\n  }\n\n  evaluate!: csmMotionSegmentEvaluationFunction; // 使用する評価関数\n  basePointIndex: number; // 最初のセグメントへのインデックス\n  segmentType: number; // セグメントの種類\n}\n\n/**\n * @brief モーションカーブ\n *\n * モーションカーブ。\n */\nexport class CubismMotionCurve {\n  public constructor() {\n    this.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n    this.segmentCount = 0;\n    this.baseSegmentIndex = 0;\n    this.fadeInTime = 0.0;\n    this.fadeOutTime = 0.0;\n  }\n\n  type: CubismMotionCurveTarget; // カーブの種類\n  id: string = ''; // カーブのID\n  segmentCount: number; // セグメントの個数\n  baseSegmentIndex: number; // 最初のセグメントのインデックス\n  fadeInTime: number; // フェードインにかかる時間[秒]\n  fadeOutTime: number; // フェードアウトにかかる時間[秒]\n}\n\n/**\n * イベント。\n */\nexport class CubismMotionEvent {\n  fireTime = 0.0;\n  value: string = '';\n}\n\n/**\n * @brief モーションデータ\n *\n * モーションデータ。\n */\nexport class CubismMotionData {\n  public constructor() {\n    this.duration = 0.0;\n    this.loop = false;\n    this.curveCount = 0;\n    this.eventCount = 0;\n    this.fps = 0.0;\n\n    this.curves = [];\n    this.segments = [];\n    this.points = [];\n    this.events = [];\n  }\n\n  duration: number; // モーションの長さ[秒]\n  loop: boolean; // ループするかどうか\n  curveCount: number; // カーブの個数\n  eventCount: number; // UserDataの個数\n  fps: number; // フレームレート\n  curves: CubismMotionCurve[]; // カーブのリスト\n  segments: CubismMotionSegment[]; // セグメントのリスト\n  points: CubismMotionPoint[]; // ポイントのリスト\n  events: CubismMotionEvent[]; // イベントのリスト\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * motion3.jsonのコンテナ。\n */\nexport class CubismMotionJson {\n  /**\n   * コンストラクタ\n   * @param json motion3.jsonが読み込まれているバッファ\n   */\n  public constructor(json: CubismSpec.MotionJSON) {\n    this._json = json;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    (this as any)._json = undefined;\n  }\n\n  /**\n   * モーションの長さを取得する\n   * @return モーションの長さ[秒]\n   */\n  public getMotionDuration(): number {\n    return this._json.Meta.Duration;\n  }\n\n  /**\n   * モーションのループ情報の取得\n   * @return true ループする\n   * @return false ループしない\n   */\n  public isMotionLoop(): boolean {\n    return this._json.Meta.Loop || false;\n  }\n\n  /**\n   * モーションカーブの個数の取得\n   * @return モーションカーブの個数\n   */\n  public getMotionCurveCount(): number {\n    return this._json.Meta.CurveCount;\n  }\n\n  /**\n   * モーションのフレームレートの取得\n   * @return フレームレート[FPS]\n   */\n  public getMotionFps(): number {\n    return this._json.Meta.Fps;\n  }\n\n  /**\n   * モーションのセグメントの総合計の取得\n   * @return モーションのセグメントの取得\n   */\n  public getMotionTotalSegmentCount(): number {\n    return this._json.Meta.TotalSegmentCount;\n  }\n\n  /**\n   * モーションのカーブの制御店の総合計の取得\n   * @return モーションのカーブの制御点の総合計\n   */\n  public getMotionTotalPointCount(): number {\n    return this._json.Meta.TotalPointCount;\n  }\n\n  /**\n   * モーションのフェードイン時間の取得\n   * @return フェードイン時間[秒]\n   */\n  public getMotionFadeInTime(): number | undefined {\n    return this._json.Meta.FadeInTime;\n  }\n\n  /**\n   * モーションのフェードアウト時間の取得\n   * @return フェードアウト時間[秒]\n   */\n  public getMotionFadeOutTime(): number | undefined {\n    return this._json.Meta.FadeOutTime;\n  }\n\n  /**\n   * モーションのカーブの種類の取得\n   * @param curveIndex カーブのインデックス\n   * @return カーブの種類\n   */\n  public getMotionCurveTarget(curveIndex: number): string {\n    return this._json.Curves[curveIndex].Target;\n  }\n\n  /**\n   * モーションのカーブのIDの取得\n   * @param curveIndex カーブのインデックス\n   * @return カーブのID\n   */\n  public getMotionCurveId(curveIndex: number): string {\n    return this._json.Curves[curveIndex].Id;\n  }\n\n  /**\n   * モーションのカーブのフェードイン時間の取得\n   * @param curveIndex カーブのインデックス\n   * @return フェードイン時間[秒]\n   */\n  public getMotionCurveFadeInTime(curveIndex: number): number | undefined {\n    return this._json.Curves[curveIndex].FadeInTime;\n  }\n\n  /**\n   * モーションのカーブのフェードアウト時間の取得\n   * @param curveIndex カーブのインデックス\n   * @return フェードアウト時間[秒]\n   */\n  public getMotionCurveFadeOutTime(curveIndex: number): number | undefined {\n    return this._json.Curves[curveIndex].FadeOutTime;\n  }\n\n  /**\n   * モーションのカーブのセグメントの個数を取得する\n   * @param curveIndex カーブのインデックス\n   * @return モーションのカーブのセグメントの個数\n   */\n  public getMotionCurveSegmentCount(curveIndex: number): number {\n    return this._json.Curves[curveIndex].Segments.length;\n  }\n\n  /**\n   * モーションのカーブのセグメントの値の取得\n   * @param curveIndex カーブのインデックス\n   * @param segmentIndex セグメントのインデックス\n   * @return セグメントの値\n   */\n  public getMotionCurveSegment(\n    curveIndex: number,\n    segmentIndex: number,\n  ): number {\n    return this._json.Curves[curveIndex].Segments[segmentIndex];\n  }\n\n  /**\n   * イベントの個数の取得\n   * @return イベントの個数\n   */\n  public getEventCount(): number {\n    return this._json.Meta.UserDataCount || 0;\n  }\n\n  /**\n   *  イベントの総文字数の取得\n   * @return イベントの総文字数\n   */\n  public getTotalEventValueSize(): number {\n    return this._json.Meta.TotalUserDataSize!;\n  }\n\n  /**\n   * イベントの時間の取得\n   * @param userDataIndex イベントのインデックス\n   * @return イベントの時間[秒]\n   */\n  public getEventTime(userDataIndex: number): number {\n    return this._json.UserData![userDataIndex].Time!;\n  }\n\n  /**\n   * イベントの取得\n   * @param userDataIndex イベントのインデックス\n   * @return イベントの文字列\n   */\n  public getEventValue(userDataIndex: number): string {\n    return this._json.UserData![userDataIndex].Value!;\n  }\n\n  _json: CubismSpec.MotionJSON; // motion3.jsonのデータ\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismMath } from '../math/cubismmath';\nimport { CubismModel } from '../model/cubismmodel';\nimport { CSM_ASSERT, CubismLogDebug } from '../utils/cubismdebug';\nimport { ACubismMotion } from './acubismmotion';\nimport {\n  CubismMotionCurve,\n  CubismMotionCurveTarget,\n  CubismMotionData,\n  CubismMotionEvent,\n  CubismMotionPoint,\n  CubismMotionSegment,\n  CubismMotionSegmentType,\n} from './cubismmotioninternal';\nimport { CubismMotionJson } from './cubismmotionjson';\nimport { CubismMotionQueueEntry } from './cubismmotionqueueentry';\n\nconst EffectNameEyeBlink = 'EyeBlink';\nconst EffectNameLipSync = 'LipSync';\nconst TargetNameModel = 'Model';\nconst TargetNameParameter = 'Parameter';\nconst TargetNamePartOpacity = 'PartOpacity';\n\nfunction lerpPoints(\n  a: CubismMotionPoint,\n  b: CubismMotionPoint,\n  t: number,\n): CubismMotionPoint {\n  const result: CubismMotionPoint = new CubismMotionPoint();\n\n  result.time = a.time + (b.time - a.time) * t;\n  result.value = a.value + (b.value - a.value) * t;\n\n  return result;\n}\n\nfunction linearEvaluate(points: CubismMotionPoint[], time: number): number {\n  let t: number = (time - points[0].time) / (points[1].time - points[0].time);\n\n  if (t < 0.0) {\n    t = 0.0;\n  }\n\n  return points[0].value + (points[1].value - points[0].value) * t;\n}\n\nfunction bezierEvaluate(points: CubismMotionPoint[], time: number): number {\n  let t: number = (time - points[0].time) / (points[3].time - points[0].time);\n\n  if (t < 0.0) {\n    t = 0.0;\n  }\n\n  const p01: CubismMotionPoint = lerpPoints(points[0], points[1], t);\n  const p12: CubismMotionPoint = lerpPoints(points[1], points[2], t);\n  const p23: CubismMotionPoint = lerpPoints(points[2], points[3], t);\n\n  const p012: CubismMotionPoint = lerpPoints(p01, p12, t);\n  const p123: CubismMotionPoint = lerpPoints(p12, p23, t);\n\n  return lerpPoints(p012, p123, t).value;\n}\n\nfunction steppedEvaluate(points: CubismMotionPoint[], time: number): number {\n  return points[0].value;\n}\n\nfunction inverseSteppedEvaluate(\n  points: CubismMotionPoint[],\n  time: number,\n): number {\n  return points[1].value;\n}\n\nfunction evaluateCurve(\n  motionData: CubismMotionData,\n  index: number,\n  time: number,\n): number {\n  // Find segment to evaluate.\n  const curve: CubismMotionCurve = motionData.curves[index];\n\n  let target = -1;\n  const totalSegmentCount: number =\n    curve.baseSegmentIndex + curve.segmentCount;\n  let pointPosition = 0;\n  for (let i: number = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n    // Get first point of next segment.\n    pointPosition =\n      motionData.segments[i].basePointIndex +\n      (motionData.segments[i].segmentType ==\n      CubismMotionSegmentType.CubismMotionSegmentType_Bezier\n        ? 3\n        : 1);\n\n    // Break if time lies within current segment.\n    if (motionData.points[pointPosition].time > time) {\n      target = i;\n      break;\n    }\n  }\n\n  if (target == -1) {\n    return motionData.points[pointPosition].value;\n  }\n\n  const segment: CubismMotionSegment = motionData.segments[target];\n\n  return segment.evaluate(\n    motionData.points.slice(segment.basePointIndex),\n    time,\n  );\n}\n\n/**\n * モーションクラス\n *\n * モーションのクラス。\n */\nexport class CubismMotion extends ACubismMotion {\n  /**\n   * インスタンスを作成する\n   *\n   * @param json motion3.jsonが読み込まれているバッファ\n   * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\n   * @return 作成されたインスタンス\n   */\n  public static create(json: CubismSpec.MotionJSON, onFinishedMotionHandler?: (self: ACubismMotion) => void): CubismMotion {\n    const ret = new CubismMotion();\n\n    ret.parse(json);\n    ret._sourceFrameRate = ret._motionData.fps;\n    ret._loopDurationSeconds = ret._motionData.duration;\n    ret._onFinishedMotion = onFinishedMotionHandler;\n\n    // NOTE: Editorではループありのモーション書き出しは非対応\n    // ret->_loop = (ret->_motionData->Loop > 0);\n    return ret;\n  }\n\n  /**\n   * モデルのパラメータの更新の実行\n   * @param model             対象のモデル\n   * @param userTimeSeconds   現在の時刻[秒]\n   * @param fadeWeight        モーションの重み\n   * @param motionQueueEntry  CubismMotionQueueManagerで管理されているモーション\n   */\n  public doUpdateParameters(\n    model: CubismModel,\n    userTimeSeconds: number,\n    fadeWeight: number,\n    motionQueueEntry: CubismMotionQueueEntry,\n  ): void {\n    if (this._modelCurveIdEyeBlink == null) {\n      this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n    }\n\n    if (this._modelCurveIdLipSync == null) {\n      this._modelCurveIdLipSync = EffectNameLipSync;\n    }\n\n    let timeOffsetSeconds: number =\n      userTimeSeconds - motionQueueEntry.getStartTime();\n\n    if (timeOffsetSeconds < 0.0) {\n      timeOffsetSeconds = 0.0; // エラー回避\n    }\n\n    let lipSyncValue: number = Number.MAX_VALUE;\n    let eyeBlinkValue: number = Number.MAX_VALUE;\n\n    //まばたき、リップシンクのうちモーションの適用を検出するためのビット（maxFlagCount個まで\n    const MaxTargetSize = 64;\n    let lipSyncFlags = 0;\n    let eyeBlinkFlags = 0;\n\n    //瞬き、リップシンクのターゲット数が上限を超えている場合\n    if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\n        'too many eye blink targets : {0}',\n        this._eyeBlinkParameterIds.length,\n      );\n    }\n    if (this._lipSyncParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\n        'too many lip sync targets : {0}',\n        this._lipSyncParameterIds.length,\n      );\n    }\n\n    const tmpFadeIn: number =\n      this._fadeInSeconds <= 0.0\n        ? 1.0\n        : CubismMath.getEasingSine(\n        (userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n        this._fadeInSeconds,\n        );\n\n    const tmpFadeOut: number =\n      this._fadeOutSeconds <= 0.0 || motionQueueEntry.getEndTime() < 0.0\n        ? 1.0\n        : CubismMath.getEasingSine(\n        (motionQueueEntry.getEndTime() - userTimeSeconds) /\n        this._fadeOutSeconds,\n        );\n    let value: number;\n    let c: number, parameterIndex: number;\n\n    // 'Repeat' time as necessary.\n    let time: number = timeOffsetSeconds;\n\n    if (this._isLoop) {\n      while (time > this._motionData.duration) {\n        time -= this._motionData.duration;\n      }\n    }\n\n    const curves: CubismMotionCurve[] = this._motionData.curves;\n\n    // Evaluate model curves.\n    for (\n      c = 0;\n      c < this._motionData.curveCount &&\n      curves[c].type ==\n      CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n      ++c\n    ) {\n      // Evaluate curve and call handler.\n      value = evaluateCurve(this._motionData, c, time);\n\n      if (curves[c].id == this._modelCurveIdEyeBlink) {\n        eyeBlinkValue = value;\n      } else if (curves[c].id == this._modelCurveIdLipSync) {\n        lipSyncValue = value;\n      }\n    }\n\n    let parameterMotionCurveCount = 0;\n\n    for (\n      ;\n      c < this._motionData.curveCount &&\n      curves[c].type ==\n      CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n      ++c\n    ) {\n      parameterMotionCurveCount++;\n\n      // Find parameter index.\n      parameterIndex = model.getParameterIndex(curves[c].id);\n\n      // Skip curve evaluation if no value in sink.\n      if (parameterIndex == -1) {\n        continue;\n      }\n\n      const sourceValue: number = model.getParameterValueByIndex(\n        parameterIndex,\n      );\n\n      // Evaluate curve and apply value.\n      value = evaluateCurve(this._motionData, c, time);\n\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (\n          let i = 0;\n          i < this._eyeBlinkParameterIds.length && i < MaxTargetSize;\n          ++i\n        ) {\n          if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n            value *= eyeBlinkValue;\n            eyeBlinkFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (\n          let i = 0;\n          i < this._lipSyncParameterIds.length && i < MaxTargetSize;\n          ++i\n        ) {\n          if (this._lipSyncParameterIds[i] == curves[c].id) {\n            value += lipSyncValue;\n            lipSyncFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n\n      let v: number;\n\n      // パラメータごとのフェード\n      if (curves[c].fadeInTime < 0.0 && curves[c].fadeOutTime < 0.0) {\n        // モーションのフェードを適用\n        v = sourceValue + (value - sourceValue) * fadeWeight;\n      } else {\n        // パラメータに対してフェードインかフェードアウトが設定してある場合はそちらを適用\n        let fin: number;\n        let fout: number;\n\n        if (curves[c].fadeInTime < 0.0) {\n          fin = tmpFadeIn;\n        } else {\n          fin =\n            curves[c].fadeInTime == 0.0\n              ? 1.0\n              : CubismMath.getEasingSine(\n              (userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n              curves[c].fadeInTime,\n              );\n        }\n\n        if (curves[c].fadeOutTime < 0.0) {\n          fout = tmpFadeOut;\n        } else {\n          fout =\n            curves[c].fadeOutTime == 0.0 ||\n            motionQueueEntry.getEndTime() < 0.0\n              ? 1.0\n              : CubismMath.getEasingSine(\n              (motionQueueEntry.getEndTime() - userTimeSeconds) /\n              curves[c].fadeOutTime,\n              );\n        }\n\n        const paramWeight: number = this._weight * fin * fout;\n\n        // パラメータごとのフェードを適用\n        v = sourceValue + (value - sourceValue) * paramWeight;\n      }\n\n      model.setParameterValueByIndex(parameterIndex, v, 1.0);\n    }\n\n    {\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (\n          let i = 0;\n          i < this._eyeBlinkParameterIds.length && i < MaxTargetSize;\n          ++i\n        ) {\n          const sourceValue: number = model.getParameterValueById(\n            this._eyeBlinkParameterIds[i],\n          );\n\n          // モーションでの上書きがあった時にはまばたきは適用しない\n          if ((eyeBlinkFlags >> i) & 0x01) {\n            continue;\n          }\n\n          const v: number =\n            sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n\n          model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n        }\n      }\n\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (\n          let i = 0;\n          i < this._lipSyncParameterIds.length && i < MaxTargetSize;\n          ++i\n        ) {\n          const sourceValue: number = model.getParameterValueById(\n            this._lipSyncParameterIds[i],\n          );\n\n          // モーションでの上書きがあった時にはリップシンクは適用しない\n          if ((lipSyncFlags >> i) & 0x01) {\n            continue;\n          }\n\n          const v: number =\n            sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n\n          model.setParameterValueById(this._lipSyncParameterIds[i], v);\n        }\n      }\n    }\n\n    for (\n      ;\n      c < this._motionData.curveCount &&\n      curves[c].type ==\n      CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n      ++c\n    ) {\n      // Find parameter index.\n      parameterIndex = model.getParameterIndex(curves[c].id);\n\n      // Skip curve evaluation if no value in sink.\n      if (parameterIndex == -1) {\n        continue;\n      }\n\n      // Evaluate curve and apply value.\n      value = evaluateCurve(this._motionData, c, time);\n\n      model.setParameterValueByIndex(parameterIndex, value);\n    }\n\n    if (timeOffsetSeconds >= this._motionData.duration) {\n      if (this._isLoop) {\n        motionQueueEntry.setStartTime(userTimeSeconds); // 最初の状態へ\n        if (this._isLoopFadeIn) {\n          // ループ内でループ用フェードインが有効の時は、フェードイン設定し直し\n          motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        }\n      } else {\n        if (this._onFinishedMotion) {\n          this._onFinishedMotion(this);\n        }\n\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    this._lastWeight = fadeWeight;\n  }\n\n  /**\n   * ループ情報の設定\n   * @param loop ループ情報\n   */\n  public setIsLoop(loop: boolean): void {\n    this._isLoop = loop;\n  }\n\n  /**\n   * ループ情報の取得\n   * @return true ループする\n   * @return false ループしない\n   */\n  public isLoop(): boolean {\n    return this._isLoop;\n  }\n\n  /**\n   * ループ時のフェードイン情報の設定\n   * @param loopFadeIn  ループ時のフェードイン情報\n   */\n  public setIsLoopFadeIn(loopFadeIn: boolean): void {\n    this._isLoopFadeIn = loopFadeIn;\n  }\n\n  /**\n   * ループ時のフェードイン情報の取得\n   *\n   * @return  true    する\n   * @return  false   しない\n   */\n  public isLoopFadeIn(): boolean {\n    return this._isLoopFadeIn;\n  }\n\n  /**\n   * モーションの長さを取得する。\n   *\n   * @return  モーションの長さ[秒]\n   */\n  public getDuration(): number {\n    return this._isLoop ? -1.0 : this._loopDurationSeconds;\n  }\n\n  /**\n   * モーションのループ時の長さを取得する。\n   *\n   * @return  モーションのループ時の長さ[秒]\n   */\n  public getLoopDuration(): number {\n    return this._loopDurationSeconds;\n  }\n\n  /**\n   * パラメータに対するフェードインの時間を設定する。\n   *\n   * @param parameterId     パラメータID\n   * @param value           フェードインにかかる時間[秒]\n   */\n  public setParameterFadeInTime(\n    parameterId: string,\n    value: number,\n  ): void {\n    const curves: CubismMotionCurve[] = this._motionData.curves;\n\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeInTime = value;\n        return;\n      }\n    }\n  }\n\n  /**\n   * パラメータに対するフェードアウトの時間の設定\n   * @param parameterId     パラメータID\n   * @param value           フェードアウトにかかる時間[秒]\n   */\n  public setParameterFadeOutTime(\n    parameterId: string,\n    value: number,\n  ): void {\n    const curves: CubismMotionCurve[] = this._motionData.curves;\n\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeOutTime = value;\n        return;\n      }\n    }\n  }\n\n  /**\n   * パラメータに対するフェードインの時間の取得\n   * @param    parameterId     パラメータID\n   * @return   フェードインにかかる時間[秒]\n   */\n  public getParameterFadeInTime(parameterId: string): number {\n    const curves: CubismMotionCurve[] = this._motionData.curves;\n\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeInTime;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * パラメータに対するフェードアウトの時間を取得\n   *\n   * @param   parameterId     パラメータID\n   * @return   フェードアウトにかかる時間[秒]\n   */\n  public getParameterFadeOutTime(parameterId: string): number {\n    const curves: CubismMotionCurve[] = this._motionData.curves;\n\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeOutTime;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * 自動エフェクトがかかっているパラメータIDリストの設定\n   * @param eyeBlinkParameterIds    自動まばたきがかかっているパラメータIDのリスト\n   * @param lipSyncParameterIds     リップシンクがかかっているパラメータIDのリスト\n   */\n  public setEffectIds(\n    eyeBlinkParameterIds: string[],\n    lipSyncParameterIds: string[],\n  ): void {\n    this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n    this._lipSyncParameterIds = lipSyncParameterIds;\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    super();\n    this._sourceFrameRate = 30.0;\n    this._loopDurationSeconds = -1.0;\n    this._isLoop = false; // trueから false へデフォルトを変更\n    this._isLoopFadeIn = true; // ループ時にフェードインが有効かどうかのフラグ\n    this._lastWeight = 0.0;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    (this as Partial<this>)._motionData = undefined;\n  }\n\n  /**\n   * motion3.jsonをパースする。\n   *\n   * @param motionJson  motion3.jsonが読み込まれているバッファ\n   */\n  public parse(motionJson: CubismSpec.MotionJSON): void {\n    this._motionData = new CubismMotionData();\n\n    let json: CubismMotionJson = new CubismMotionJson(motionJson);\n\n    this._motionData.duration = json.getMotionDuration();\n    this._motionData.loop = json.isMotionLoop();\n    this._motionData.curveCount = json.getMotionCurveCount();\n    this._motionData.fps = json.getMotionFps();\n    this._motionData.eventCount = json.getEventCount();\n\n    const fadeInSeconds = json.getMotionFadeInTime();\n    const fadeOutSeconds = json.getMotionFadeOutTime();\n\n    if (fadeInSeconds !== undefined) {\n      this._fadeInSeconds = fadeInSeconds < 0.0 ? 1.0 : fadeInSeconds;\n    } else {\n      this._fadeInSeconds = 1.0;\n    }\n\n    if (fadeOutSeconds !== undefined) {\n      this._fadeOutSeconds = fadeOutSeconds < 0.0 ? 1.0 : fadeOutSeconds;\n    } else {\n      this._fadeOutSeconds = 1.0;\n    }\n\n    this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n    this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n    this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n    this._motionData.points = [];\n\n    let totalPointCount = 0;\n    let totalSegmentCount = 0;\n\n    // Curves\n    for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n      const curve = this._motionData.curves[curveCount];\n\n      switch (json.getMotionCurveTarget(curveCount)) {\n        case TargetNameModel:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n          break;\n\n        case TargetNameParameter:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n          break;\n\n        case TargetNamePartOpacity:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n          break;\n      }\n\n      curve.id = json.getMotionCurveId(curveCount);\n\n      curve.baseSegmentIndex = totalSegmentCount;\n\n      const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n      const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n\n      curve.fadeInTime = fadeInTime !== undefined ? fadeInTime : -1.0;\n      curve.fadeOutTime = fadeOutTime !== undefined ? fadeOutTime : -1.0;\n\n      // Segments\n      for (\n        let segmentPosition = 0;\n        segmentPosition < json.getMotionCurveSegmentCount(curveCount);\n      ) {\n        if (segmentPosition == 0) {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n\n          this._motionData.points[totalPointCount] = new CubismMotionPoint(\n            json.getMotionCurveSegment(curveCount, segmentPosition),\n            json.getMotionCurveSegment(curveCount, segmentPosition + 1),\n          );\n\n          totalPointCount += 1;\n          segmentPosition += 2;\n        } else {\n          this._motionData.segments[totalSegmentCount].basePointIndex =\n            totalPointCount - 1;\n        }\n\n        const segment: number = json.getMotionCurveSegment(\n          curveCount,\n          segmentPosition,\n        );\n        switch (segment) {\n          case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n            this._motionData.segments[totalSegmentCount].segmentType =\n              CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n            this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(\n              json.getMotionCurveSegment(curveCount, segmentPosition + 1),\n              json.getMotionCurveSegment(curveCount, segmentPosition + 2),\n            );\n\n            totalPointCount += 1;\n            segmentPosition += 3;\n\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n            this._motionData.segments[totalSegmentCount].segmentType =\n              CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n            this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(\n              json.getMotionCurveSegment(curveCount, segmentPosition + 1),\n              json.getMotionCurveSegment(curveCount, segmentPosition + 2),\n            );\n\n            this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(\n              json.getMotionCurveSegment(curveCount, segmentPosition + 3),\n              json.getMotionCurveSegment(curveCount, segmentPosition + 4),\n            );\n\n            this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(\n              json.getMotionCurveSegment(curveCount, segmentPosition + 5),\n              json.getMotionCurveSegment(curveCount, segmentPosition + 6),\n            );\n\n            totalPointCount += 3;\n            segmentPosition += 7;\n\n            break;\n          }\n\n          case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n            this._motionData.segments[totalSegmentCount].segmentType =\n              CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n            this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(\n              json.getMotionCurveSegment(curveCount, segmentPosition + 1),\n              json.getMotionCurveSegment(curveCount, segmentPosition + 2),\n            );\n\n            totalPointCount += 1;\n            segmentPosition += 3;\n\n            break;\n          }\n\n          case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n            this._motionData.segments[totalSegmentCount].segmentType =\n              CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n            this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(\n              json.getMotionCurveSegment(curveCount, segmentPosition + 1),\n              json.getMotionCurveSegment(curveCount, segmentPosition + 2),\n            );\n\n            totalPointCount += 1;\n            segmentPosition += 3;\n\n            break;\n          }\n          default: {\n            CSM_ASSERT(0);\n            break;\n          }\n        }\n\n        ++curve.segmentCount;\n        ++totalSegmentCount;\n      }\n\n      this._motionData.curves.push(curve);\n    }\n\n    for (\n      let userdatacount = 0;\n      userdatacount < json.getEventCount();\n      ++userdatacount\n    ) {\n      this._motionData.events[userdatacount].fireTime = json.getEventTime(\n        userdatacount,\n      );\n      this._motionData.events[userdatacount].value = json.getEventValue(\n        userdatacount,\n      );\n    }\n\n    json.release();\n  }\n\n  /**\n   * モデルのパラメータ更新\n   *\n   * イベント発火のチェック。\n   * 入力する時間は呼ばれるモーションタイミングを０とした秒数で行う。\n   *\n   * @param beforeCheckTimeSeconds   前回のイベントチェック時間[秒]\n   * @param motionTimeSeconds        今回の再生時間[秒]\n   */\n  public getFiredEvent(\n    beforeCheckTimeSeconds: number,\n    motionTimeSeconds: number,\n  ): string[] {\n    this._firedEventValues.length = 0;\n\n    // イベントの発火チェック\n    for (let u = 0; u < this._motionData.eventCount; ++u) {\n      if (\n        this._motionData.events[u].fireTime > beforeCheckTimeSeconds &&\n        this._motionData.events[u].fireTime <= motionTimeSeconds\n      ) {\n        this._firedEventValues.push(this._motionData.events[u].value);\n      }\n    }\n\n    return this._firedEventValues;\n  }\n\n  public _sourceFrameRate: number; // ロードしたファイルのFPS。記述が無ければデフォルト値15fpsとなる\n  public _loopDurationSeconds: number; // mtnファイルで定義される一連のモーションの長さ\n  public _isLoop: boolean; // ループするか?\n  public _isLoopFadeIn: boolean; // ループ時にフェードインが有効かどうかのフラグ。初期値では有効。\n  public _lastWeight: number; // 最後に設定された重み\n\n  public _motionData!: CubismMotionData; // 実際のモーションデータ本体\n\n  public _eyeBlinkParameterIds: string[] = []; // 自動まばたきを適用するパラメータIDハンドルのリスト。  モデル（モデルセッティング）とパラメータを対応付ける。\n  public _lipSyncParameterIds: string[] = []; // リップシンクを適用するパラメータIDハンドルのリスト。  モデル（モデルセッティング）とパラメータを対応付ける。\n\n  public _modelCurveIdEyeBlink?: string; // モデルが持つ自動まばたき用パラメータIDのハンドル。  モデルとモーションを対応付ける。\n  public _modelCurveIdLipSync?: string; // モデルが持つリップシンク用パラメータIDのハンドル。  モデルとモーションを対応付ける。\n}\n","import { config } from '@/config';\nimport { MotionManager, MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport { Cubism4ExpressionManager } from '@/cubism4/Cubism4ExpressionManager';\nimport { Cubism4ModelSettings } from '@/cubism4/Cubism4ModelSettings';\nimport { CubismModel } from '@cubism/model/cubismmodel';\nimport { ACubismMotion } from '@cubism/motion/acubismmotion';\nimport { CubismMotion } from '@cubism/motion/cubismmotion';\nimport { CubismMotionJson } from '@cubism/motion/cubismmotionjson';\nimport { CubismMotionQueueManager } from '@cubism/motion/cubismmotionqueuemanager';\n\nexport class Cubism4MotionManager extends MotionManager<CubismMotion, CubismSpec.Motion> {\n    readonly definitions: Partial<Record<string, CubismSpec.Motion[]>>;\n\n    readonly groups = { idle: 'Idle' } as const;\n\n    readonly motionDataType = 'json';\n\n    readonly queueManager = new CubismMotionQueueManager();\n\n    readonly settings!: Cubism4ModelSettings;\n\n    expressionManager?: Cubism4ExpressionManager;\n\n    eyeBlinkIds: string[];\n    lipSyncIds: string[];\n\n    constructor(settings: Cubism4ModelSettings, options?: MotionManagerOptions) {\n        super(settings, options);\n\n        this.definitions = settings.motions ?? {};\n        this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n        this.lipSyncIds = settings.getLipSyncParameters() || [];\n\n        this.init(options);\n    }\n\n    protected init(options?: MotionManagerOptions) {\n        super.init(options);\n\n        if (this.settings.expressions) {\n            this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n        }\n\n        this.queueManager.setEventCallback((caller, eventValue, customData) => {\n            this.emit('motion:' + eventValue);\n        });\n    }\n\n    isFinished(): boolean {\n        return this.queueManager.isFinished();\n    }\n\n    protected _startMotion(motion: CubismMotion, onFinish?: (motion: CubismMotion) => void): number {\n        motion.setFinishedMotionHandler(onFinish as (motion: ACubismMotion) => void);\n\n        this.queueManager.stopAllMotions();\n\n        return this.queueManager.startMotion(motion, false, performance.now());\n    }\n\n    protected _stopAllMotions(): void {\n        this.queueManager.stopAllMotions();\n    }\n\n    createMotion(data: object, group: string, definition: CubismSpec.Motion): CubismMotion {\n        const motion = CubismMotion.create(data as unknown as CubismSpec.MotionJSON);\n        const json = new CubismMotionJson(data as unknown as CubismSpec.MotionJSON);\n\n        const defaultFadingDuration = (\n            group === this.groups.idle\n                ? config.idleMotionFadingDuration\n                : config.motionFadingDuration\n        ) / 1000;\n\n        // fading duration priorities: model.json > motion.json > config (default)\n\n        // overwrite the fading duration only when it's not defined in the motion JSON\n        if (json.getMotionFadeInTime() === undefined) {\n            motion.setFadeInTime(definition.FadeInTime! > 0 ? definition.FadeInTime! : defaultFadingDuration);\n        }\n\n        if (json.getMotionFadeOutTime() === undefined) {\n            motion.setFadeOutTime(definition.FadeOutTime! > 0 ? definition.FadeOutTime! : defaultFadingDuration);\n        }\n\n        motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n\n        return motion;\n    }\n\n    getMotionFile(definition: CubismSpec.Motion): string {\n        return definition.File;\n    }\n\n    protected getMotionName(definition: CubismSpec.Motion): string {\n        return definition.File;\n    }\n\n    protected getSoundFile(definition: CubismSpec.Motion): string | undefined {\n        return definition.Sound;\n    }\n\n    protected updateParameters(model: CubismModel, now: DOMHighResTimeStamp): boolean {\n        return this.queueManager.doUpdateMotion(model, now);\n    }\n\n    destroy() {\n        super.destroy();\n\n        this.queueManager.release();\n        (this as Partial<Mutable<this>>).queueManager = undefined;\n    }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * @brief パラメータIDのデフォルト値を保持する定数<br>\n *         デフォルト値の仕様は以下のマニュアルに基づく<br>\n *         https://docs.live2d.com/cubism-editor-manual/standard-parametor-list/\n */\n  // パーツID\nexport const HitAreaPrefix = 'HitArea';\nexport const HitAreaHead = 'Head';\nexport const HitAreaBody = 'Body';\nexport const PartsIdCore = 'Parts01Core';\nexport const PartsArmPrefix = 'Parts01Arm_';\nexport const PartsArmLPrefix = 'Parts01ArmL_';\nexport const PartsArmRPrefix = 'Parts01ArmR_';\n\n// パラメータID\nexport const ParamAngleX = 'ParamAngleX';\nexport const ParamAngleY = 'ParamAngleY';\nexport const ParamAngleZ = 'ParamAngleZ';\nexport const ParamEyeLOpen = 'ParamEyeLOpen';\nexport const ParamEyeLSmile = 'ParamEyeLSmile';\nexport const ParamEyeROpen = 'ParamEyeROpen';\nexport const ParamEyeRSmile = 'ParamEyeRSmile';\nexport const ParamEyeBallX = 'ParamEyeBallX';\nexport const ParamEyeBallY = 'ParamEyeBallY';\nexport const ParamEyeBallForm = 'ParamEyeBallForm';\nexport const ParamBrowLY = 'ParamBrowLY';\nexport const ParamBrowRY = 'ParamBrowRY';\nexport const ParamBrowLX = 'ParamBrowLX';\nexport const ParamBrowRX = 'ParamBrowRX';\nexport const ParamBrowLAngle = 'ParamBrowLAngle';\nexport const ParamBrowRAngle = 'ParamBrowRAngle';\nexport const ParamBrowLForm = 'ParamBrowLForm';\nexport const ParamBrowRForm = 'ParamBrowRForm';\nexport const ParamMouthForm = 'ParamMouthForm';\nexport const ParamMouthOpenY = 'ParamMouthOpenY';\nexport const ParamCheek = 'ParamCheek';\nexport const ParamBodyAngleX = 'ParamBodyAngleX';\nexport const ParamBodyAngleY = 'ParamBodyAngleY';\nexport const ParamBodyAngleZ = 'ParamBodyAngleZ';\nexport const ParamBreath = 'ParamBreath';\nexport const ParamArmLA = 'ParamArmLA';\nexport const ParamArmRA = 'ParamArmRA';\nexport const ParamArmLB = 'ParamArmLB';\nexport const ParamArmRB = 'ParamArmRB';\nexport const ParamHandL = 'ParamHandL';\nexport const ParamHandR = 'ParamHandR';\nexport const ParamHairFront = 'ParamHairFront';\nexport const ParamHairSide = 'ParamHairSide';\nexport const ParamHairBack = 'ParamHairBack';\nexport const ParamHairFluffy = 'ParamHairFluffy';\nexport const ParamShoulderY = 'ParamShoulderY';\nexport const ParamBustX = 'ParamBustX';\nexport const ParamBustY = 'ParamBustY';\nexport const ParamBaseX = 'ParamBaseX';\nexport const ParamBaseY = 'ParamBaseY';\nexport const ParamNONE = 'NONE:';\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from '../model/cubismmodel';\n\n/**\n * 呼吸機能\n *\n * 呼吸機能を提供する。\n */\nexport class CubismBreath {\n  /**\n   * インスタンスの作成\n   */\n  public static create(): CubismBreath {\n    return new CubismBreath();\n  }\n\n  /**\n   * 呼吸のパラメータの紐づけ\n   * @param breathParameters 呼吸を紐づけたいパラメータのリスト\n   */\n  public setParameters(\n    breathParameters: BreathParameterData[],\n  ): void {\n    this._breathParameters = breathParameters;\n  }\n\n  /**\n   * 呼吸に紐づいているパラメータの取得\n   * @return 呼吸に紐づいているパラメータのリスト\n   */\n  public getParameters(): BreathParameterData[] {\n    return this._breathParameters;\n  }\n\n  /**\n   * モデルのパラメータの更新\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */\n  public updateParameters(\n    model: CubismModel,\n    deltaTimeSeconds: number,\n  ): void {\n    this._currentTime += deltaTimeSeconds;\n\n    const t: number = this._currentTime * 2.0 * 3.14159;\n\n    for (let i = 0; i < this._breathParameters.length; ++i) {\n      const data: BreathParameterData = this._breathParameters[i];\n\n      model.addParameterValueById(\n        data.parameterId,\n        data.offset + data.peak * Math.sin(t / data.cycle),\n        data.weight,\n      );\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._currentTime = 0.0;\n  }\n\n  _breathParameters: BreathParameterData[] = []; // 呼吸にひもづいているパラメータのリスト\n  _currentTime: number; // 積算時間[秒]\n}\n\n/**\n * 呼吸のパラメータ情報\n */\nexport class BreathParameterData {\n  /**\n   * コンストラクタ\n   * @param parameterId   呼吸をひもづけるパラメータID\n   * @param offset        呼吸を正弦波としたときの、波のオフセット\n   * @param peak          呼吸を正弦波としたときの、波の高さ\n   * @param cycle         呼吸を正弦波としたときの、波の周期\n   * @param weight        パラメータへの重み\n   */\n  constructor(\n    parameterId?: string,\n    offset?: number,\n    peak?: number,\n    cycle?: number,\n    weight?: number,\n  ) {\n    this.parameterId = parameterId == undefined ? undefined : parameterId;\n    this.offset = offset == undefined ? 0.0 : offset;\n    this.peak = peak == undefined ? 0.0 : peak;\n    this.cycle = cycle == undefined ? 0.0 : cycle;\n    this.weight = weight == undefined ? 0.0 : weight;\n  }\n\n  parameterId?: string; // 呼吸をひもづけるパラメータID\\\n  offset: number; // 呼吸を正弦波としたときの、波のオフセット\n  peak: number; // 呼吸を正弦波としたときの、波の高さ\n  cycle: number; // 呼吸を正弦波としたときの、波の周期\n  weight: number; // パラメータへの重み\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from '../model/cubismmodel';\nimport { CubismModelSettingsJson } from '../settings/cubismmodelsettingsjson';\n\n/**\n * 自動まばたき機能\n *\n * 自動まばたき機能を提供する。\n */\nexport class CubismEyeBlink {\n  /**\n   * インスタンスを作成する\n   * @param modelSetting モデルの設定情報\n   * @return 作成されたインスタンス\n   * @note 引数がNULLの場合、パラメータIDが設定されていない空のインスタンスを作成する。\n   */\n  public static create(\n    modelSetting: CubismModelSettingsJson,\n  ): CubismEyeBlink {\n    return new CubismEyeBlink(modelSetting);\n  }\n\n  /**\n   * まばたきの間隔の設定\n   * @param blinkingInterval まばたきの間隔の時間[秒]\n   */\n  public setBlinkingInterval(blinkingInterval: number): void {\n    this._blinkingIntervalSeconds = blinkingInterval;\n  }\n\n  /**\n   * まばたきのモーションの詳細設定\n   * @param closing   まぶたを閉じる動作の所要時間[秒]\n   * @param closed    まぶたを閉じている動作の所要時間[秒]\n   * @param opening   まぶたを開く動作の所要時間[秒]\n   */\n  public setBlinkingSetting(\n    closing: number,\n    closed: number,\n    opening: number,\n  ): void {\n    this._closingSeconds = closing;\n    this._closedSeconds = closed;\n    this._openingSeconds = opening;\n  }\n\n  /**\n   * まばたきさせるパラメータIDのリストの設定\n   * @param parameterIds パラメータのIDのリスト\n   */\n  public setParameterIds(parameterIds: string[]): void {\n    this._parameterIds = parameterIds;\n  }\n\n  /**\n   * まばたきさせるパラメータIDのリストの取得\n   * @return パラメータIDのリスト\n   */\n  public getParameterIds(): string[] {\n    return this._parameterIds;\n  }\n\n  /**\n   * モデルのパラメータの更新\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */\n  public updateParameters(\n    model: CubismModel,\n    deltaTimeSeconds: number,\n  ): void {\n    this._userTimeSeconds += deltaTimeSeconds;\n    let parameterValue: number;\n    let t = 0.0;\n\n    switch (this._blinkingState) {\n      case EyeState.EyeState_Closing:\n        t =\n          (this._userTimeSeconds - this._stateStartTimeSeconds) /\n          this._closingSeconds;\n\n        if (t >= 1.0) {\n          t = 1.0;\n          this._blinkingState = EyeState.EyeState_Closed;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n\n        parameterValue = 1.0 - t;\n\n        break;\n      case EyeState.EyeState_Closed:\n        t =\n          (this._userTimeSeconds - this._stateStartTimeSeconds) /\n          this._closedSeconds;\n\n        if (t >= 1.0) {\n          this._blinkingState = EyeState.EyeState_Opening;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n\n        parameterValue = 0.0;\n\n        break;\n      case EyeState.EyeState_Opening:\n        t =\n          (this._userTimeSeconds - this._stateStartTimeSeconds) /\n          this._openingSeconds;\n\n        if (t >= 1.0) {\n          t = 1.0;\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        }\n\n        parameterValue = t;\n\n        break;\n      case EyeState.EyeState_Interval:\n        if (this._nextBlinkingTime < this._userTimeSeconds) {\n          this._blinkingState = EyeState.EyeState_Closing;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n\n        parameterValue = 1.0;\n\n        break;\n      case EyeState.EyeState_First:\n      default:\n        this._blinkingState = EyeState.EyeState_Interval;\n        this._nextBlinkingTime = this.determinNextBlinkingTiming();\n\n        parameterValue = 1.0;\n        break;\n    }\n\n    if (!CubismEyeBlink.CloseIfZero) {\n      parameterValue = -parameterValue;\n    }\n\n    for (let i = 0; i < this._parameterIds.length; ++i) {\n      model.setParameterValueById(this._parameterIds[i], parameterValue);\n    }\n  }\n\n  /**\n   * コンストラクタ\n   * @param modelSetting モデルの設定情報\n   */\n  public constructor(modelSetting: CubismModelSettingsJson) {\n    this._blinkingState = EyeState.EyeState_First;\n    this._nextBlinkingTime = 0.0;\n    this._stateStartTimeSeconds = 0.0;\n    this._blinkingIntervalSeconds = 4.0;\n    this._closingSeconds = 0.1;\n    this._closedSeconds = 0.05;\n    this._openingSeconds = 0.15;\n    this._userTimeSeconds = 0.0;\n    this._parameterIds = [];\n\n    if (modelSetting == null) {\n      return;\n    }\n\n    this._parameterIds = modelSetting.getEyeBlinkParameters()?.slice() ?? this._parameterIds;\n  }\n\n  /**\n   * 次の瞬きのタイミングの決定\n   *\n   * @return 次のまばたきを行う時刻[秒]\n   */\n  public determinNextBlinkingTiming(): number {\n    const r: number = Math.random();\n    return (\n      this._userTimeSeconds + r * (2.0 * this._blinkingIntervalSeconds - 1.0)\n    );\n  }\n\n  _blinkingState: number; // 現在の状態\n  _parameterIds: string[]; // 操作対象のパラメータのIDのリスト\n  _nextBlinkingTime: number; // 次のまばたきの時刻[秒]\n  _stateStartTimeSeconds: number; // 現在の状態が開始した時刻[秒]\n  _blinkingIntervalSeconds: number; // まばたきの間隔[秒]\n  _closingSeconds: number; // まぶたを閉じる動作の所要時間[秒]\n  _closedSeconds: number; // まぶたを閉じている動作の所要時間[秒]\n  _openingSeconds: number; // まぶたを開く動作の所要時間[秒]\n  _userTimeSeconds: number; // デルタ時間の積算値[秒]\n\n  /**\n   * IDで指定された目のパラメータが、0のときに閉じるなら true 、1の時に閉じるなら false 。\n   */\n  static readonly CloseIfZero: boolean = true;\n}\n\n/**\n * まばたきの状態\n *\n * まばたきの状態を表す列挙型\n */\nexport enum EyeState {\n  EyeState_First = 0, // 初期状態\n  EyeState_Interval, // まばたきしていない状態\n  EyeState_Closing, // まぶたが閉じていく途中の状態\n  EyeState_Closed, // まぶたが閉じている状態\n  EyeState_Opening // まぶたが開いていく途中の状態\n}\n","export namespace config {\n  export let supportMoreMaskDivisions = true;\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * 矩形形状（座標・長さはfloat値）を定義するクラス\n */\nexport class csmRect {\n  /**\n   * コンストラクタ\n   * @param x 左端X座標\n   * @param y 上端Y座標\n   * @param w 幅\n   * @param h 高さ\n   */\n  public constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n\n  /**\n   * 矩形中央のX座標を取得する\n   */\n  public getCenterX(): number {\n    return this.x + 0.5 * this.width;\n  }\n\n  /**\n   * 矩形中央のY座標を取得する\n   */\n  public getCenterY(): number {\n    return this.y + 0.5 * this.height;\n  }\n\n  /**\n   * 右側のX座標を取得する\n   */\n  public getRight(): number {\n    return this.x + this.width;\n  }\n\n  /**\n   * 下端のY座標を取得する\n   */\n  public getBottom(): number {\n    return this.y + this.height;\n  }\n\n  /**\n   * 矩形に値をセットする\n   * @param r 矩形のインスタンス\n   */\n  public setRect(r: csmRect): void {\n    this.x = r.x;\n    this.y = r.y;\n    this.width = r.width;\n    this.height = r.height;\n  }\n\n  /**\n   * 矩形中央を軸にして縦横を拡縮する\n   * @param w 幅方向に拡縮する量\n   * @param h 高さ方向に拡縮する量\n   */\n  public expand(w: number, h: number) {\n    this.x -= w;\n    this.y -= h;\n    this.width += w * 2.0;\n    this.height += h * 2.0;\n  }\n\n  public x: number; // 左端X座標\n  public y: number; // 上端Y座標\n  public width: number; // 幅\n  public height: number; // 高さ\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Constant } from '../live2dcubismframework';\nimport { CubismMatrix44 } from '../math/cubismmatrix44';\nimport { CubismModel } from '../model/cubismmodel';\nimport { csmRect } from '../type/csmrectf';\nimport { CubismLogError } from '../utils/cubismdebug';\nimport { CubismBlendMode, CubismRenderer, CubismTextureColor } from './cubismrenderer';\nimport { config } from '../config';\n\nconst ColorChannelCount = 4; // 実験時に1チャンネルの場合は1、RGBだけの場合は3、アルファも含める場合は4\n\nconst shaderCount = 10; // シェーダーの数 = マスク生成用 + (通常用 + 加算 + 乗算) * (マスク無の乗算済アルファ対応版 + マスク有の乗算済アルファ対応版 + マスク有反転の乗算済アルファ対応版)\nlet s_instance: CubismShader_WebGL | undefined;\nlet s_viewport: number[];\nlet s_fbo: WebGLFramebuffer;\n\n/**\n * クリッピングマスクの処理を実行するクラス\n */\nexport class CubismClippingManager_WebGL {\n  /**\n   * カラーチャンネル（RGBA）のフラグを取得する\n   * @param channelNo カラーチャンネル（RGBA）の番号（0:R, 1:G, 2:B, 3:A）\n   */\n  public getChannelFlagAsColor(channelNo: number): CubismTextureColor {\n    return this._channelColors[channelNo];\n  }\n\n  /**\n   * テンポラリのレンダーテクスチャのアドレスを取得する\n   * FrameBufferObjectが存在しない場合、新しく生成する\n   *\n   * @return レンダーテクスチャのアドレス\n   */\n  public getMaskRenderTexture(): WebGLFramebuffer | null {\n    let ret: WebGLFramebuffer | null = 0;\n\n    // テンポラリのRenderTextureを取得する\n    if (this._maskTexture && this._maskTexture.texture != 0) {\n      // 前回使ったものを返す\n      this._maskTexture.frameNo = this._currentFrameNo;\n      ret = this._maskTexture.texture;\n    }\n\n    if (ret == 0) {\n      // FrameBufferObjectが存在しない場合、新しく生成する\n\n      // クリッピングバッファサイズを取得\n      const size: number = this._clippingMaskBufferSize;\n\n      this._colorBuffer = this.gl.createTexture();\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n      this.gl.texImage2D(\n        this.gl.TEXTURE_2D,\n        0,\n        this.gl.RGBA,\n        size,\n        size,\n        0,\n        this.gl.RGBA,\n        this.gl.UNSIGNED_BYTE,\n        null,\n      );\n      this.gl.texParameteri(\n        this.gl.TEXTURE_2D,\n        this.gl.TEXTURE_WRAP_S,\n        this.gl.CLAMP_TO_EDGE,\n      );\n      this.gl.texParameteri(\n        this.gl.TEXTURE_2D,\n        this.gl.TEXTURE_WRAP_T,\n        this.gl.CLAMP_TO_EDGE,\n      );\n      this.gl.texParameteri(\n        this.gl.TEXTURE_2D,\n        this.gl.TEXTURE_MIN_FILTER,\n        this.gl.LINEAR,\n      );\n      this.gl.texParameteri(\n        this.gl.TEXTURE_2D,\n        this.gl.TEXTURE_MAG_FILTER,\n        this.gl.LINEAR,\n      );\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n\n      ret = this.gl.createFramebuffer();\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n      this.gl.framebufferTexture2D(\n        this.gl.FRAMEBUFFER,\n        this.gl.COLOR_ATTACHMENT0,\n        this.gl.TEXTURE_2D,\n        this._colorBuffer,\n        0,\n      );\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n\n      this._maskTexture = new CubismRenderTextureResource(\n        this._currentFrameNo,\n        ret,\n      );\n    }\n\n    return ret;\n  }\n\n  /**\n   * WebGLレンダリングコンテキストを設定する\n   * @param gl WebGLレンダリングコンテキスト\n   */\n  public setGL(gl: WebGLRenderingContext): void {\n    this.gl = gl;\n  }\n\n  /**\n   * マスクされる描画オブジェクト群全体を囲む矩形（モデル座標系）を計算する\n   * @param model モデルのインスタンス\n   * @param clippingContext クリッピングマスクのコンテキスト\n   */\n  public calcClippedDrawTotalBounds(\n    model: CubismModel,\n    clippingContext: CubismClippingContext,\n  ): void {\n    // 被クリッピングマスク（マスクされる描画オブジェクト）の全体の矩形\n    let clippedDrawTotalMinX: number = Number.MAX_VALUE;\n    let clippedDrawTotalMinY: number = Number.MAX_VALUE;\n    let clippedDrawTotalMaxX: number = Number.MIN_VALUE;\n    let clippedDrawTotalMaxY: number = Number.MIN_VALUE;\n\n    // このマスクが実際に必要か判定する\n    // このクリッピングを利用する「描画オブジェクト」がひとつでも使用可能であればマスクを生成する必要がある\n    const clippedDrawCount: number =\n      clippingContext._clippedDrawableIndexList.length;\n\n    for (\n      let clippedDrawableIndex = 0;\n      clippedDrawableIndex < clippedDrawCount;\n      clippedDrawableIndex++\n    ) {\n      // マスクを使用する描画オブジェクトの描画される矩形を求める\n      const drawableIndex: number =\n        clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n\n      const drawableVertexCount: number = model.getDrawableVertexCount(\n        drawableIndex,\n      );\n      const drawableVertexes: Float32Array = model.getDrawableVertices(\n        drawableIndex,\n      );\n\n      let minX: number = Number.MAX_VALUE;\n      let minY: number = Number.MAX_VALUE;\n      let maxX: number = Number.MIN_VALUE;\n      let maxY: number = Number.MIN_VALUE;\n\n      const loop: number = drawableVertexCount * Constant.vertexStep;\n      for (\n        let pi: number = Constant.vertexOffset;\n        pi < loop;\n        pi += Constant.vertexStep\n      ) {\n        const x: number = drawableVertexes[pi];\n        const y: number = drawableVertexes[pi + 1];\n\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n      }\n\n      // 有効な点が一つも取れなかったのでスキップ\n      if (minX == Number.MAX_VALUE) {\n        continue;\n      }\n\n      // 全体の矩形に反映\n      if (minX < clippedDrawTotalMinX) {\n        clippedDrawTotalMinX = minX;\n      }\n      if (minY < clippedDrawTotalMinY) {\n        clippedDrawTotalMinY = minY;\n      }\n      if (maxX > clippedDrawTotalMaxX) {\n        clippedDrawTotalMaxX = maxX;\n      }\n      if (maxY > clippedDrawTotalMaxY) {\n        clippedDrawTotalMaxY = maxY;\n      }\n\n      if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n        clippingContext._allClippedDrawRect.x = 0.0;\n        clippingContext._allClippedDrawRect.y = 0.0;\n        clippingContext._allClippedDrawRect.width = 0.0;\n        clippingContext._allClippedDrawRect.height = 0.0;\n        clippingContext._isUsing = false;\n      } else {\n        clippingContext._isUsing = true;\n        const w: number = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n        const h: number = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n        clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.width = w;\n        clippingContext._allClippedDrawRect.height = h;\n      }\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._maskRenderTexture = null;\n    this._colorBuffer = null;\n    this._currentFrameNo = 0;\n    this._clippingMaskBufferSize = 256;\n    this._clippingContextListForMask = [];\n    this._clippingContextListForDraw = [];\n    this._channelColors = [];\n    this._tmpBoundsOnModel = new csmRect();\n    this._tmpMatrix = new CubismMatrix44();\n    this._tmpMatrixForMask = new CubismMatrix44();\n    this._tmpMatrixForDraw = new CubismMatrix44();\n\n    let tmp: CubismTextureColor = new CubismTextureColor();\n    tmp.R = 1.0;\n    tmp.G = 0.0;\n    tmp.B = 0.0;\n    tmp.A = 0.0;\n    this._channelColors.push(tmp);\n\n    tmp = new CubismTextureColor();\n    tmp.R = 0.0;\n    tmp.G = 1.0;\n    tmp.B = 0.0;\n    tmp.A = 0.0;\n    this._channelColors.push(tmp);\n\n    tmp = new CubismTextureColor();\n    tmp.R = 0.0;\n    tmp.G = 0.0;\n    tmp.B = 1.0;\n    tmp.A = 0.0;\n    this._channelColors.push(tmp);\n\n    tmp = new CubismTextureColor();\n    tmp.R = 0.0;\n    tmp.G = 0.0;\n    tmp.B = 0.0;\n    tmp.A = 1.0;\n    this._channelColors.push(tmp);\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    const self = this as Partial<this>;\n\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      if (this._clippingContextListForMask[i]) {\n        this._clippingContextListForMask[i]?.release();\n      }\n    }\n    self._clippingContextListForMask = undefined;\n\n    // _clippingContextListForDrawは_clippingContextListForMaskにあるインスタンスを指している。上記の処理により要素ごとのDELETEは不要。\n    self._clippingContextListForDraw = undefined;\n\n    if (this._maskTexture) {\n      this.gl?.deleteFramebuffer(this._maskTexture.texture);\n      self._maskTexture = undefined;\n    }\n\n    self._channelColors = undefined;\n\n    // テクスチャ解放\n    this.gl?.deleteTexture(this._colorBuffer);\n    this._colorBuffer = null;\n  }\n\n  /**\n   * マネージャの初期化処理\n   * クリッピングマスクを使う描画オブジェクトの登録を行う\n   * @param model モデルのインスタンス\n   * @param drawableCount 描画オブジェクトの数\n   * @param drawableMasks 描画オブジェクトをマスクする描画オブジェクトのインデックスのリスト\n   * @param drawableCounts 描画オブジェクトをマスクする描画オブジェクトの数\n   */\n  public initialize(\n    model: CubismModel,\n    drawableCount: number,\n    drawableMasks: Int32Array[],\n    drawableMaskCounts: Int32Array,\n  ): void {\n    // クリッピングマスクを使う描画オブジェクトをすべて登録する\n    // クリッピングマスクは、通常数個程度に限定して使うものとする\n    for (let i = 0; i < drawableCount; i++) {\n      if (drawableMaskCounts[i] <= 0) {\n        // クリッピングマスクが使用されていないアートメッシュ（多くの場合使用しない）\n        this._clippingContextListForDraw.push(null);\n        continue;\n      }\n\n      // 既にあるClipContextと同じかチェックする\n      let clippingContext = this.findSameClip(\n        drawableMasks[i],\n        drawableMaskCounts[i],\n      );\n      if (clippingContext == null) {\n        // 同一のマスクが存在していない場合は生成する\n        clippingContext = new CubismClippingContext(\n          this,\n          drawableMasks[i],\n          drawableMaskCounts[i],\n        );\n        this._clippingContextListForMask.push(clippingContext);\n      }\n\n      clippingContext.addClippedDrawable(i);\n\n      this._clippingContextListForDraw.push(clippingContext);\n    }\n  }\n\n  /**\n   * クリッピングコンテキストを作成する。モデル描画時に実行する。\n   * @param model モデルのインスタンス\n   * @param renderer レンダラのインスタンス\n   */\n  public setupClippingContext(\n    model: CubismModel,\n    renderer: CubismRenderer_WebGL,\n  ): void {\n    this._currentFrameNo++;\n\n    // 全てのクリッピングを用意する\n    // 同じクリップ（複数の場合はまとめて一つのクリップ）を使う場合は1度だけ設定する\n    let usingClipCount = 0;\n    for (\n      let clipIndex = 0;\n      clipIndex < this._clippingContextListForMask.length;\n      clipIndex++\n    ) {\n      // 1つのクリッピングマスクに関して\n      const cc = this._clippingContextListForMask[clipIndex];\n\n      // このクリップを利用する描画オブジェクト群全体を囲む矩形を計算\n      this.calcClippedDrawTotalBounds(model, cc);\n\n      if (cc._isUsing) {\n        usingClipCount++; // 使用中としてカウント\n      }\n    }\n\n    // マスク作成処理\n    if (usingClipCount > 0) {\n      // 生成したFrameBufferと同じサイズでビューポートを設定\n      this.gl.viewport(\n        0,\n        0,\n        this._clippingMaskBufferSize,\n        this._clippingMaskBufferSize,\n      );\n\n      // マスクをactiveにする\n      this._maskRenderTexture = this.getMaskRenderTexture();\n\n      // モデル描画時にDrawMeshNowに渡される変換(モデルtoワールド座標変換)\n      const modelToWorldF: CubismMatrix44 = renderer.getMvpMatrix();\n\n      renderer.preDraw(); // バッファをクリアする\n\n      // 各マスクのレイアウトを決定していく\n      this.setupLayoutBounds(usingClipCount);\n\n      // ---------- マスク描画処理 ----------\n      // マスク用RenderTextureをactiveにセット\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n\n      // マスクをクリアする\n      // (仮仕様) 1が無効（描かれない）領域、0が有効（描かれる）領域。（シェーダーCd*Csで0に近い値をかけてマスクを作る。1をかけると何も起こらない）\n      this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n      // 実際にマスクを生成する\n      // 全てのマスクをどのようにレイアウトして描くかを決定し、ClipContext, ClippedDrawContextに記憶する\n      for (\n        let clipIndex = 0;\n        clipIndex < this._clippingContextListForMask.length;\n        clipIndex++\n      ) {\n        // --- 実際に1つのマスクを描く ---\n        const clipContext: CubismClippingContext = this._clippingContextListForMask[clipIndex];\n        const allClipedDrawRect: csmRect = clipContext._allClippedDrawRect; // このマスクを使う、すべての描画オブジェクトの論理座標上の囲み矩形\n        const layoutBoundsOnTex01: csmRect = clipContext._layoutBounds; // この中にマスクを収める\n\n        // モデル座標上の矩形を、適宜マージンを付けて使う\n        const MARGIN = 0.05;\n        this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n        this._tmpBoundsOnModel.expand(\n          allClipedDrawRect.width * MARGIN,\n          allClipedDrawRect.height * MARGIN,\n        );\n        //########## 本来は割り当てられた領域の全体を使わず必要最低限のサイズがよい\n\n        // シェーダ用の計算式を求める。回転を考慮しない場合は以下のとおり\n        // movePeriod' = movePeriod * scaleX + offX\t\t  [[ movePeriod' = (movePeriod - tmpBoundsOnModel.movePeriod)*scale + layoutBoundsOnTex01.movePeriod ]]\n        const scaleX: number = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n        const scaleY: number = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n\n        // マスク生成時に使う行列を求める\n        {\n          // シェーダに渡す行列を求める <<<<<<<<<<<<<<<<<<<<<<<< 要最適化（逆順に計算すればシンプルにできる）\n          this._tmpMatrix.loadIdentity();\n          {\n            // layout0..1 を -1..1に変換\n            this._tmpMatrix.translateRelative(-1.0, -1.0);\n            this._tmpMatrix.scaleRelative(2.0, 2.0);\n          }\n          {\n            // view to layout0..1\n            this._tmpMatrix.translateRelative(\n              layoutBoundsOnTex01.x,\n              layoutBoundsOnTex01.y,\n            );\n            this._tmpMatrix.scaleRelative(scaleX, scaleY); // new = [translate][scale]\n            this._tmpMatrix.translateRelative(\n              -this._tmpBoundsOnModel.x,\n              -this._tmpBoundsOnModel.y,\n            );\n            // new = [translate][scale][translate]\n          }\n          // tmpMatrixForMaskが計算結果\n          this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        }\n\n        //--------- draw時の mask 参照用行列を計算\n        {\n          // シェーダに渡す行列を求める <<<<<<<<<<<<<<<<<<<<<<<< 要最適化（逆順に計算すればシンプルにできる）\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(\n              layoutBoundsOnTex01.x,\n              layoutBoundsOnTex01.y,\n            );\n            this._tmpMatrix.scaleRelative(scaleX, scaleY); // new = [translate][scale]\n            this._tmpMatrix.translateRelative(\n              -this._tmpBoundsOnModel.x,\n              -this._tmpBoundsOnModel.y,\n            );\n            // new = [translate][scale][translate]\n          }\n          this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n        }\n        clipContext._matrixForMask.setMatrix(\n          this._tmpMatrixForMask.getArray(),\n        );\n        clipContext._matrixForDraw.setMatrix(\n          this._tmpMatrixForDraw.getArray(),\n        );\n\n        const clipDrawCount: number = clipContext._clippingIdCount;\n        for (let i = 0; i < clipDrawCount; i++) {\n          const clipDrawIndex: number = clipContext._clippingIdList[i];\n\n          // 頂点情報が更新されておらず、信頼性がない場合は描画をパスする\n          if (\n            !model.getDrawableDynamicFlagVertexPositionsDidChange(\n              clipDrawIndex,\n            )\n          ) {\n            continue;\n          }\n\n          renderer.setIsCulling(\n            model.getDrawableCulling(clipDrawIndex) != false,\n          );\n\n          // 今回専用の変換を適用して描く\n          // チャンネルも切り替える必要がある(A,R,G,B)\n          renderer.setClippingContextBufferForMask(clipContext);\n          renderer.drawMesh(\n            model.getDrawableTextureIndices(clipDrawIndex),\n            model.getDrawableVertexIndexCount(clipDrawIndex),\n            model.getDrawableVertexCount(clipDrawIndex),\n            model.getDrawableVertexIndices(clipDrawIndex),\n            model.getDrawableVertices(clipDrawIndex),\n            model.getDrawableVertexUvs(clipDrawIndex),\n            model.getDrawableOpacity(clipDrawIndex),\n            CubismBlendMode.CubismBlendMode_Normal, // クリッピングは通常描画を強制\n            false, // マスク生成時はクリッピングの反転使用は全く関係がない\n          );\n        }\n      }\n\n      // --- 後処理 ---\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo); // 描画対象を戻す\n      renderer.setClippingContextBufferForMask(null);\n\n      this.gl.viewport(\n        s_viewport[0],\n        s_viewport[1],\n        s_viewport[2],\n        s_viewport[3],\n      );\n    }\n  }\n\n  /**\n   * 既にマスクを作っているかを確認\n   * 作っている様であれば該当するクリッピングマスクのインスタンスを返す\n   * 作っていなければNULLを返す\n   * @param drawableMasks 描画オブジェクトをマスクする描画オブジェクトのリスト\n   * @param drawableMaskCounts 描画オブジェクトをマスクする描画オブジェクトの数\n   * @return 該当するクリッピングマスクが存在すればインスタンスを返し、なければNULLを返す\n   */\n  public findSameClip(\n    drawableMasks: Int32Array,\n    drawableMaskCounts: number,\n  ): CubismClippingContext | null {\n    // 作成済みClippingContextと一致するか確認\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      const clippingContext: CubismClippingContext = this._clippingContextListForMask[i];\n      const count: number = clippingContext._clippingIdCount;\n\n      // 個数が違う場合は別物\n      if (count != drawableMaskCounts) {\n        continue;\n      }\n\n      let sameCount = 0;\n\n      // 同じIDを持つか確認。配列の数が同じなので、一致した個数が同じなら同じ物を持つとする\n      for (let j = 0; j < count; j++) {\n        const clipId: number = clippingContext._clippingIdList[j];\n\n        for (let k = 0; k < count; k++) {\n          if (drawableMasks[k] == clipId) {\n            sameCount++;\n            break;\n          }\n        }\n      }\n\n      if (sameCount == count) {\n        return clippingContext;\n      }\n    }\n\n    return null; // 見つからなかった\n  }\n\n  /**\n   * クリッピングコンテキストを配置するレイアウト\n   * 一つのレンダーテクスチャを極力いっぱいに使ってマスクをレイアウトする\n   * マスクグループの数が4以下ならRGBA各チャンネルに一つずつマスクを配置し、5以上6以下ならRGBAを2,2,1,1と配置する。\n   *\n   * @param usingClipCount 配置するクリッピングコンテキストの数\n   */\n  public setupLayoutBounds(usingClipCount: number): void {\n    // ひとつのRenderTextureを極力いっぱいに使ってマスクをレイアウトする\n    // マスクグループの数が4以下ならRGBA各チャンネルに1つずつマスクを配置し、5以上6以下ならRGBAを2,2,1,1と配置する\n\n    // RGBAを順番に使っていく\n    let div: number = usingClipCount / ColorChannelCount; // 1チャンネルに配置する基本のマスク\n    let mod: number = usingClipCount % ColorChannelCount; // 余り、この番号のチャンネルまでに一つずつ配分する\n\n    // 小数点は切り捨てる\n    div = ~~div;\n    mod = ~~mod;\n\n    // RGBAそれぞれのチャンネルを用意していく（0:R, 1:G, 2:B, 3:A）\n    let curClipIndex = 0; // 順番に設定していく\n\n    for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n      // このチャンネルにレイアウトする数\n      const layoutCount: number = div + (channelNo < mod ? 1 : 0);\n\n      // 分割方法を決定する\n      if (layoutCount == 0) {\n        // 何もしない\n      } else if (layoutCount == 1) {\n        // 全てをそのまま使う\n        const clipContext: CubismClippingContext = this._clippingContextListForMask[curClipIndex++];\n        clipContext._layoutChannelNo = channelNo;\n        clipContext._layoutBounds.x = 0.0;\n        clipContext._layoutBounds.y = 0.0;\n        clipContext._layoutBounds.width = 1.0;\n        clipContext._layoutBounds.height = 1.0;\n      } else if (layoutCount == 2) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos: number = i % 2;\n\n          // 小数点は切り捨てる\n          xpos = ~~xpos;\n\n          const cc: CubismClippingContext = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = 0.0;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 1.0;\n          // UVを2つに分解して使う\n        }\n      } else if (layoutCount <= 4) {\n        // 4分割して使う\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos: number = i % 2;\n          let ypos: number = i / 2;\n\n          // 小数点は切り捨てる\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = ypos * 0.5;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 0.5;\n        }\n      } else if (layoutCount <= 9) {\n        // 9分割して使う\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 3;\n          let ypos = i / 3;\n\n          // 小数点は切り捨てる\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n\n          const cc: CubismClippingContext = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n\n          cc._layoutBounds.x = xpos / 3.0;\n          cc._layoutBounds.y = ypos / 3.0;\n          cc._layoutBounds.width = 1.0 / 3.0;\n          cc._layoutBounds.height = 1.0 / 3.0;\n        }\n      } else if (config.supportMoreMaskDivisions && layoutCount <= 16) {\n        // support 4x4 division\n        // https://docs.live2d.com/cubism-sdk-manual/ow-sdk-mask-premake-web/?locale=en_us\n\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 4;\n          let ypos = i / 4;\n\n          // 小数点は切り捨てる\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n\n          const cc: CubismClippingContext = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n\n          cc._layoutBounds.x = xpos / 4.0;\n          cc._layoutBounds.y = ypos / 4.0;\n          cc._layoutBounds.width = 1.0 / 4.0;\n          cc._layoutBounds.height = 1.0 / 4.0;\n        }\n      } else {\n        CubismLogError('not supported mask count : {0}', layoutCount);\n      }\n    }\n  }\n\n  /**\n   * カラーバッファを取得する\n   * @return カラーバッファ\n   */\n  public getColorBuffer(): WebGLTexture | null {\n    return this._colorBuffer;\n  }\n\n  /**\n   * 画面描画に使用するクリッピングマスクのリストを取得する\n   * @return 画面描画に使用するクリッピングマスクのリスト\n   */\n  public getClippingContextListForDraw(): (CubismClippingContext | null)[] {\n    return this._clippingContextListForDraw;\n  }\n\n  /**\n   * クリッピングマスクバッファのサイズを設定する\n   * @param size クリッピングマスクバッファのサイズ\n   */\n  public setClippingMaskBufferSize(size: number): void {\n    this._clippingMaskBufferSize = size;\n  }\n\n  /**\n   * クリッピングマスクバッファのサイズを取得する\n   * @return クリッピングマスクバッファのサイズ\n   */\n  public getClippingMaskBufferSize(): number {\n    return this._clippingMaskBufferSize;\n  }\n\n  public _maskRenderTexture: WebGLFramebuffer | null; // マスク用レンダーテクスチャのアドレス\n  public _colorBuffer: WebGLTexture | null; // マスク用カラーバッファーのアドレス\n  public _currentFrameNo: number; // マスクテクスチャに与えるフレーム番号\n\n  public _channelColors: CubismTextureColor[];\n  public _maskTexture?: CubismRenderTextureResource; // マスク用のテクスチャリソースのリスト\n  public _clippingContextListForMask: CubismClippingContext[]; // マスク用クリッピングコンテキストのリスト\n  public _clippingContextListForDraw: (CubismClippingContext | null)[]; // 描画用クリッピングコンテキストのリスト\n  public _clippingMaskBufferSize: number; // クリッピングマスクのバッファサイズ（初期値:256）\n\n  private _tmpMatrix: CubismMatrix44; // マスク計算用の行列\n  private _tmpMatrixForMask: CubismMatrix44; // マスク計算用の行列\n  private _tmpMatrixForDraw: CubismMatrix44; // マスク計算用の行列\n  private _tmpBoundsOnModel: csmRect; // マスク配置計算用の矩形\n\n  gl!: WebGLRenderingContext; // WebGLレンダリングコンテキスト\n}\n\n/**\n * レンダーテクスチャのリソースを定義する構造体\n * クリッピングマスクで使用する\n */\nexport class CubismRenderTextureResource {\n  /**\n   * 引数付きコンストラクタ\n   * @param frameNo レンダラーのフレーム番号\n   * @param texture テクスチャのアドレス\n   */\n  public constructor(frameNo: number, texture: WebGLFramebuffer | null) {\n    this.frameNo = frameNo;\n    this.texture = texture;\n  }\n\n  public frameNo: number; // レンダラのフレーム番号\n  public texture: WebGLFramebuffer | null; // テクスチャのアドレス\n}\n\n/**\n * クリッピングマスクのコンテキスト\n */\nexport class CubismClippingContext {\n  /**\n   * 引数付きコンストラクタ\n   */\n  public constructor(\n    manager: CubismClippingManager_WebGL,\n    clippingDrawableIndices: Int32Array,\n    clipCount: number,\n  ) {\n    this._owner = manager;\n\n    // クリップしている（＝マスク用の）Drawableのインデックスリスト\n    this._clippingIdList = clippingDrawableIndices;\n\n    // マスクの数\n    this._clippingIdCount = clipCount;\n\n    this._allClippedDrawRect = new csmRect();\n    this._layoutBounds = new csmRect();\n\n    this._clippedDrawableIndexList = [];\n\n    this._matrixForMask = new CubismMatrix44();\n    this._matrixForDraw = new CubismMatrix44();\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    const self = this as Partial<this>;\n    self._layoutBounds = undefined;\n    self._allClippedDrawRect = undefined;\n    self._clippedDrawableIndexList = undefined;\n  }\n\n  /**\n   * このマスクにクリップされる描画オブジェクトを追加する\n   *\n   * @param drawableIndex クリッピング対象に追加する描画オブジェクトのインデックス\n   */\n  public addClippedDrawable(drawableIndex: number) {\n    this._clippedDrawableIndexList.push(drawableIndex);\n  }\n\n  /**\n   * このマスクを管理するマネージャのインスタンスを取得する\n   * @return クリッピングマネージャのインスタンス\n   */\n  public getClippingManager(): CubismClippingManager_WebGL {\n    return this._owner;\n  }\n\n  public setGl(gl: WebGLRenderingContext): void {\n    this._owner.setGL(gl);\n  }\n\n  public _isUsing: boolean = false; // 現在の描画状態でマスクの準備が必要ならtrue\n  public readonly _clippingIdList: Int32Array; // クリッピングマスクのIDリスト\n  public _clippingIdCount: number; // クリッピングマスクの数\n  public _layoutChannelNo!: number; // RGBAのいずれのチャンネルにこのクリップを配置するか（0:R, 1:G, 2:B, 3:A）\n  public _layoutBounds: csmRect; // マスク用チャンネルのどの領域にマスクを入れるか（View座標-1~1, UVは0~1に直す）\n  public _allClippedDrawRect: csmRect; // このクリッピングで、クリッピングされるすべての描画オブジェクトの囲み矩形（毎回更新）\n  public _matrixForMask: CubismMatrix44; // マスクの位置計算結果を保持する行列\n  public _matrixForDraw: CubismMatrix44; // 描画オブジェクトの位置計算結果を保持する行列\n  public _clippedDrawableIndexList: number[]; // このマスクにクリップされる描画オブジェクトのリスト\n\n  private _owner: CubismClippingManager_WebGL; // このマスクを管理しているマネージャのインスタンス\n}\n\n/**\n * WebGL用のシェーダープログラムを生成・破棄するクラス\n * シングルトンなクラスであり、CubismShader_WebGL.getInstanceからアクセスする。\n */\nexport class CubismShader_WebGL {\n  /**\n   * インスタンスを取得する（シングルトン）\n   * @return インスタンス\n   */\n  public static getInstance(): CubismShader_WebGL {\n    if (s_instance == null) {\n      s_instance = new CubismShader_WebGL();\n\n      return s_instance;\n    }\n    return s_instance;\n  }\n\n  /**\n   * インスタンスを開放する（シングルトン）\n   */\n  public static deleteInstance(): void {\n    if (s_instance) {\n      s_instance.release();\n      s_instance = undefined;\n    }\n  }\n\n  /**\n   * privateなコンストラクタ\n   */\n  private constructor() {\n    this._shaderSets = [];\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    this.releaseShaderProgram();\n  }\n\n  /**\n   * シェーダープログラムの一連のセットアップを実行する\n   * @param renderer レンダラのインスタンス\n   * @param textureId GPUのテクスチャID\n   * @param vertexCount ポリゴンメッシュの頂点数\n   * @param vertexArray ポリゴンメッシュの頂点配列\n   * @param indexArray インデックスバッファの頂点配列\n   * @param uvArray uv配列\n   * @param opacity 不透明度\n   * @param colorBlendMode カラーブレンディングのタイプ\n   * @param baseColor ベースカラー\n   * @param isPremultipliedAlpha 乗算済みアルファかどうか\n   * @param matrix4x4 Model-View-Projection行列\n   * @param invertedMask マスクを反転して使用するフラグ\n   */\n  public setupShaderProgram(\n    renderer: CubismRenderer_WebGL,\n    textureId: WebGLTexture | null,\n    vertexCount: number,\n    vertexArray: Float32Array,\n    indexArray: Uint16Array,\n    uvArray: Float32Array,\n    bufferData: {\n      vertex: WebGLBuffer | null;\n      uv: WebGLBuffer | null;\n      index: WebGLBuffer | null;\n    },\n    opacity: number,\n    colorBlendMode: CubismBlendMode,\n    baseColor: CubismTextureColor,\n    isPremultipliedAlpha: boolean,\n    matrix4x4: CubismMatrix44,\n    invertedMask: boolean,\n  ): void {\n    if (!isPremultipliedAlpha) {\n      CubismLogError('NoPremultipliedAlpha is not allowed');\n    }\n\n    if (this._shaderSets.length == 0) {\n      this.generateShaders();\n    }\n\n    // Blending\n    let SRC_COLOR: number;\n    let DST_COLOR: number;\n    let SRC_ALPHA: number;\n    let DST_ALPHA: number;\n\n    const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n\n    if (clippingContextBufferForMask != null) {\n      // マスク生成時\n      const shaderSet: CubismShaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n      this.gl.useProgram(shaderSet.shaderProgram);\n\n      // テクスチャ設定\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n\n      // 頂点配列の設定(VBO)\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(\n        this.gl.ARRAY_BUFFER,\n        vertexArray,\n        this.gl.DYNAMIC_DRAW,\n      );\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(\n        shaderSet.attributePositionLocation,\n        2,\n        this.gl.FLOAT,\n        false,\n        0,\n        0,\n      );\n\n      // テクスチャ頂点の設定\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(\n        shaderSet.attributeTexCoordLocation,\n        2,\n        this.gl.FLOAT,\n        false,\n        0,\n        0,\n      );\n\n      // チャンネル\n      const channelNo: number = clippingContextBufferForMask._layoutChannelNo;\n      const colorChannel: CubismTextureColor = clippingContextBufferForMask\n        .getClippingManager()\n        .getChannelFlagAsColor(channelNo);\n      this.gl.uniform4f(\n        shaderSet.uniformChannelFlagLocation,\n        colorChannel.R,\n        colorChannel.G,\n        colorChannel.B,\n        colorChannel.A,\n      );\n\n      this.gl.uniformMatrix4fv(\n        shaderSet.uniformClipMatrixLocation,\n        false,\n        clippingContextBufferForMask._matrixForMask.getArray(),\n      );\n\n      const rect: csmRect = clippingContextBufferForMask._layoutBounds;\n\n      this.gl.uniform4f(\n        shaderSet.uniformBaseColorLocation,\n        rect.x * 2.0 - 1.0,\n        rect.y * 2.0 - 1.0,\n        rect.getRight() * 2.0 - 1.0,\n        rect.getBottom() * 2.0 - 1.0,\n      );\n\n      SRC_COLOR = this.gl.ZERO;\n      DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n      SRC_ALPHA = this.gl.ZERO;\n      DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n    } // マスク生成以外の場合\n    else {\n      const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n      const masked = clippingContextBufferForDraw != null; // この描画オブジェクトはマスク対象か\n      const offset: number = masked ? (invertedMask ? 2 : 1) : 0;\n\n      let shaderSet;\n\n      switch (colorBlendMode) {\n        case CubismBlendMode.CubismBlendMode_Normal:\n        default:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ONE;\n          DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n          break;\n\n        case CubismBlendMode.CubismBlendMode_Additive:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n\n        case CubismBlendMode.CubismBlendMode_Multiplicative:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.DST_COLOR;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n      }\n\n      this.gl.useProgram(shaderSet.shaderProgram);\n\n      // 頂点配列の設定\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(\n        this.gl.ARRAY_BUFFER,\n        vertexArray,\n        this.gl.DYNAMIC_DRAW,\n      );\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(\n        shaderSet.attributePositionLocation,\n        2,\n        this.gl.FLOAT,\n        false,\n        0,\n        0,\n      );\n\n      // テクスチャ頂点の設定\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(\n        shaderSet.attributeTexCoordLocation,\n        2,\n        this.gl.FLOAT,\n        false,\n        0,\n        0,\n      );\n\n      // この描画オブジェクトはマスク対象か\n      if (clippingContextBufferForDraw != null) {\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        const tex = clippingContextBufferForDraw\n          .getClippingManager()\n          .getColorBuffer();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n        this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n\n        // view座標をClippingContextの座標に変換するための行列を設定\n        this.gl.uniformMatrix4fv(\n          shaderSet.uniformClipMatrixLocation,\n          false,\n          clippingContextBufferForDraw._matrixForDraw.getArray(),\n        );\n\n        // 使用するカラーチャンネルを設定\n        const channelNo: number = clippingContextBufferForDraw._layoutChannelNo;\n        const colorChannel: CubismTextureColor = clippingContextBufferForDraw\n          .getClippingManager()\n          .getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(\n          shaderSet.uniformChannelFlagLocation,\n          colorChannel.R,\n          colorChannel.G,\n          colorChannel.B,\n          colorChannel.A,\n        );\n      }\n\n      // テクスチャ設定\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n\n      // 座標変換\n      this.gl.uniformMatrix4fv(\n        shaderSet.uniformMatrixLocation,\n        false,\n        matrix4x4.getArray(),\n      );\n\n      this.gl.uniform4f(\n        shaderSet.uniformBaseColorLocation,\n        baseColor.R,\n        baseColor.G,\n        baseColor.B,\n        baseColor.A,\n      );\n    }\n\n    // IBOを作成し、データを転送\n    if (bufferData.index == null) {\n      bufferData.index = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n    this.gl.bufferData(\n      this.gl.ELEMENT_ARRAY_BUFFER,\n      indexArray,\n      this.gl.DYNAMIC_DRAW,\n    );\n    this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n  }\n\n  /**\n   * シェーダープログラムを解放する\n   */\n  public releaseShaderProgram(): void {\n    for (let i = 0; i < this._shaderSets.length; i++) {\n      this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n      this._shaderSets[i].shaderProgram = 0;\n    }\n\n    this._shaderSets = [];\n  }\n\n  /**\n   * シェーダープログラムを初期化する\n   * @param vertShaderSrc 頂点シェーダのソース\n   * @param fragShaderSrc フラグメントシェーダのソース\n   */\n  public generateShaders(): void {\n    for (let i = 0; i < shaderCount; i++) {\n      this._shaderSets.push({} as any);\n    }\n\n    this._shaderSets[0].shaderProgram = this.loadShaderProgram(\n      vertexShaderSrcSetupMask,\n      fragmentShaderSrcsetupMask,\n    );\n\n    this._shaderSets[1].shaderProgram = this.loadShaderProgram(\n      vertexShaderSrc,\n      fragmentShaderSrcPremultipliedAlpha,\n    );\n    this._shaderSets[2].shaderProgram = this.loadShaderProgram(\n      vertexShaderSrcMasked,\n      fragmentShaderSrcMaskPremultipliedAlpha,\n    );\n    this._shaderSets[3].shaderProgram = this.loadShaderProgram(\n      vertexShaderSrcMasked,\n      fragmentShaderSrcMaskInvertedPremultipliedAlpha,\n    );\n\n    // 加算も通常と同じシェーダーを利用する\n    this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n\n    // 乗算も通常と同じシェーダーを利用する\n    this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n\n    // SetupMask\n    this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[0].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[0].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[0].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[0].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[0].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[0].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 通常（PremultipliedAlpha）\n    this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[1].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[1].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[1].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[1].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[1].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 通常（クリッピング、PremultipliedAlpha）\n    this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[2].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[2].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[2].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(\n      this._shaderSets[2].shaderProgram,\n      's_texture1',\n    );\n    this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[2].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[2].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[2].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[2].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 通常（クリッピング・反転, PremultipliedAlpha）\n    this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[3].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[3].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[3].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(\n      this._shaderSets[3].shaderProgram,\n      's_texture1',\n    );\n    this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[3].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[3].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[3].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[3].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 加算（PremultipliedAlpha）\n    this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[4].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[4].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[4].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[4].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[4].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 加算（クリッピング、PremultipliedAlpha）\n    this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[5].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[5].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[5].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(\n      this._shaderSets[5].shaderProgram,\n      's_texture1',\n    );\n    this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[5].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[5].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[5].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[5].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 加算（クリッピング・反転、PremultipliedAlpha）\n    this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[6].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[6].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[6].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(\n      this._shaderSets[6].shaderProgram,\n      's_texture1',\n    );\n    this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[6].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[6].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[6].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[6].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 乗算（PremultipliedAlpha）\n    this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[7].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[7].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[7].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[7].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[7].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 乗算（クリッピング、PremultipliedAlpha）\n    this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[8].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[8].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[8].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(\n      this._shaderSets[8].shaderProgram,\n      's_texture1',\n    );\n    this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[8].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[8].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[8].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[8].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 乗算（クリッピング・反転、PremultipliedAlpha）\n    this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[9].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[9].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[9].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(\n      this._shaderSets[9].shaderProgram,\n      's_texture1',\n    );\n    this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[9].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[9].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[9].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[9].shaderProgram,\n      'u_baseColor',\n    );\n  }\n\n  /**\n   * シェーダプログラムをロードしてアドレスを返す\n   * @param vertexShaderSource    頂点シェーダのソース\n   * @param fragmentShaderSource  フラグメントシェーダのソース\n   * @return シェーダプログラムのアドレス\n   */\n  public loadShaderProgram(\n    vertexShaderSource: string,\n    fragmentShaderSource: string,\n  ): WebGLProgram {\n    // Create Shader Program\n    let shaderProgram = this.gl.createProgram()!;\n\n    let vertShader = this.compileShaderSource(\n      this.gl.VERTEX_SHADER,\n      vertexShaderSource,\n    );\n\n    if (!vertShader) {\n      CubismLogError('Vertex shader compile error!');\n      return 0;\n    }\n\n    let fragShader = this.compileShaderSource(\n      this.gl.FRAGMENT_SHADER,\n      fragmentShaderSource,\n    );\n    if (!fragShader) {\n      CubismLogError('Vertex shader compile error!');\n      return 0;\n    }\n\n    // Attach vertex shader to program\n    this.gl.attachShader(shaderProgram, vertShader);\n\n    // Attach fragment shader to program\n    this.gl.attachShader(shaderProgram, fragShader);\n\n    // link program\n    this.gl.linkProgram(shaderProgram);\n    const linkStatus = this.gl.getProgramParameter(\n      shaderProgram,\n      this.gl.LINK_STATUS,\n    );\n\n    // リンクに失敗したらシェーダーを削除\n    if (!linkStatus) {\n      CubismLogError('Failed to link program: {0}', shaderProgram);\n\n      this.gl.deleteShader(vertShader);\n\n      this.gl.deleteShader(fragShader);\n\n      if (shaderProgram) {\n        this.gl.deleteProgram(shaderProgram);\n      }\n\n      return 0;\n    }\n\n    // Release vertex and fragment shaders.\n    this.gl.deleteShader(vertShader);\n    this.gl.deleteShader(fragShader);\n\n    return shaderProgram;\n  }\n\n  /**\n   * シェーダープログラムをコンパイルする\n   * @param shaderType シェーダタイプ(Vertex/Fragment)\n   * @param shaderSource シェーダソースコード\n   *\n   * @return コンパイルされたシェーダープログラム\n   */\n  public compileShaderSource(\n    shaderType: GLenum,\n    shaderSource: string,\n  ): WebGLProgram | null {\n    const source: string = shaderSource;\n\n    const shader = this.gl.createShader(shaderType)!;\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!shader) {\n      const log = this.gl.getShaderInfoLog(shader);\n      CubismLogError('Shader compile log: {0} ', log);\n    }\n\n    const status: any = this.gl.getShaderParameter(\n      shader,\n      this.gl.COMPILE_STATUS,\n    );\n    if (!status) {\n      this.gl.deleteShader(shader);\n      return null;\n    }\n\n    return shader;\n  }\n\n  public setGl(gl: WebGLRenderingContext): void {\n    this.gl = gl;\n  }\n\n  _shaderSets: CubismShaderSet[]; // ロードしたシェーダープログラムを保持する変数\n  gl!: WebGLRenderingContext; // webglコンテキスト\n}\n\n/**\n * CubismShader_WebGLのインナークラス\n */\nexport interface CubismShaderSet {\n  shaderProgram: WebGLProgram; // シェーダープログラムのアドレス\n  attributePositionLocation: GLuint; // シェーダープログラムに渡す変数のアドレス（Position）\n  attributeTexCoordLocation: GLuint; // シェーダープログラムに渡す変数のアドレス（TexCoord）\n  uniformMatrixLocation: WebGLUniformLocation | null; // シェーダープログラムに渡す変数のアドレス（Matrix）\n  uniformClipMatrixLocation: WebGLUniformLocation | null; // シェーダープログラムに渡す変数のアドレス（ClipMatrix）\n  samplerTexture0Location: WebGLUniformLocation | null; // シェーダープログラムに渡す変数のアドレス（Texture0）\n  samplerTexture1Location: WebGLUniformLocation | null; // シェーダープログラムに渡す変数のアドレス（Texture1）\n  uniformBaseColorLocation: WebGLUniformLocation | null; // シェーダープログラムに渡す変数のアドレス（BaseColor）\n  uniformChannelFlagLocation: WebGLUniformLocation | null; // シェーダープログラムに渡す変数のアドレス（ChannelFlag）\n}\n\nexport enum ShaderNames {\n  // SetupMask\n  ShaderNames_SetupMask,\n\n  // Normal\n  ShaderNames_NormalPremultipliedAlpha,\n  ShaderNames_NormalMaskedPremultipliedAlpha,\n  ShaderNames_NomralMaskedInvertedPremultipliedAlpha,\n\n  // Add\n  ShaderNames_AddPremultipliedAlpha,\n  ShaderNames_AddMaskedPremultipliedAlpha,\n  ShaderNames_AddMaskedPremultipliedAlphaInverted,\n\n  // Mult\n  ShaderNames_MultPremultipliedAlpha,\n  ShaderNames_MultMaskedPremultipliedAlpha,\n  ShaderNames_MultMaskedPremultipliedAlphaInverted\n}\n\nexport const vertexShaderSrcSetupMask =\n  'attribute vec4     a_position;' +\n  'attribute vec2     a_texCoord;' +\n  'varying vec2       v_texCoord;' +\n  'varying vec4       v_myPos;' +\n  'uniform mat4       u_clipMatrix;' +\n  'void main()' +\n  '{' +\n  '   gl_Position = u_clipMatrix * a_position;' +\n  '   v_myPos = u_clipMatrix * a_position;' +\n  '   v_texCoord = a_texCoord;' +\n  '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n  '}';\nexport const fragmentShaderSrcsetupMask =\n  'precision mediump float;' +\n  'varying vec2       v_texCoord;' +\n  'varying vec4       v_myPos;' +\n  'uniform vec4       u_baseColor;' +\n  'uniform vec4       u_channelFlag;' +\n  'uniform sampler2D  s_texture0;' +\n  'void main()' +\n  '{' +\n  '   float isInside = ' +\n  '       step(u_baseColor.x, v_myPos.x/v_myPos.w)' +\n  '       * step(u_baseColor.y, v_myPos.y/v_myPos.w)' +\n  '       * step(v_myPos.x/v_myPos.w, u_baseColor.z)' +\n  '       * step(v_myPos.y/v_myPos.w, u_baseColor.w);' +\n  '   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;' +\n  '}';\n\n//----- バーテックスシェーダプログラム -----\n// Normal & Add & Mult 共通\nexport const vertexShaderSrc =\n  'attribute vec4     a_position;' + //v.vertex\n  'attribute vec2     a_texCoord;' + //v.texcoord\n  'varying vec2       v_texCoord;' + //v2f.texcoord\n  'uniform mat4       u_matrix;' +\n  'void main()' +\n  '{' +\n  '   gl_Position = u_matrix * a_position;' +\n  '   v_texCoord = a_texCoord;' +\n  '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n  '}';\n\n// Normal & Add & Mult 共通（クリッピングされたものの描画用）\nexport const vertexShaderSrcMasked =\n  'attribute vec4     a_position;' +\n  'attribute vec2     a_texCoord;' +\n  'varying vec2       v_texCoord;' +\n  'varying vec4       v_clipPos;' +\n  'uniform mat4       u_matrix;' +\n  'uniform mat4       u_clipMatrix;' +\n  'void main()' +\n  '{' +\n  '   gl_Position = u_matrix * a_position;' +\n  '   v_clipPos = u_clipMatrix * a_position;' +\n  '   v_texCoord = a_texCoord;' +\n  '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n  '}';\n\n//----- フラグメントシェーダプログラム -----\n// Normal & Add & Mult 共通 （PremultipliedAlpha）\nexport const fragmentShaderSrcPremultipliedAlpha =\n  'precision mediump float;' +\n  'varying vec2       v_texCoord;' + //v2f.texcoord\n  'uniform vec4       u_baseColor;' +\n  'uniform sampler2D  s_texture0;' + //_MainTex\n  'void main()' +\n  '{' +\n  '   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;' +\n  '}';\n\n// Normal （クリッピングされたものの描画用、PremultipliedAlpha兼用）\nexport const fragmentShaderSrcMaskPremultipliedAlpha =\n  'precision mediump float;' +\n  'varying vec2       v_texCoord;' +\n  'varying vec4       v_clipPos;' +\n  'uniform vec4       u_baseColor;' +\n  'uniform vec4       u_channelFlag;' +\n  'uniform sampler2D  s_texture0;' +\n  'uniform sampler2D  s_texture1;' +\n  'void main()' +\n  '{' +\n  '   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;' +\n  '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\n  '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\n  '   col_formask = col_formask * maskVal;' +\n  '   gl_FragColor = col_formask;' +\n  '}';\n\n// Normal & Add & Mult 共通（クリッピングされて反転使用の描画用、PremultipliedAlphaの場合）\nexport const fragmentShaderSrcMaskInvertedPremultipliedAlpha =\n  'precision mediump float;' +\n  'varying vec2 v_texCoord;' +\n  'varying vec4 v_clipPos;' +\n  'uniform sampler2D s_texture0;' +\n  'uniform sampler2D s_texture1;' +\n  'uniform vec4 u_channelFlag;' +\n  'uniform vec4 u_baseColor;' +\n  'void main()' +\n  '{' +\n  'vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;' +\n  'vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\n  'float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\n  'col_formask = col_formask * (1.0 - maskVal);' +\n  'gl_FragColor = col_formask;' +\n  '}';\n\n/**\n * WebGL用の描画命令を実装したクラス\n */\nexport class CubismRenderer_WebGL extends CubismRenderer {\n  /**\n   * レンダラの初期化処理を実行する\n   * 引数に渡したモデルからレンダラの初期化処理に必要な情報を取り出すことができる\n   *\n   * @param model モデルのインスタンス\n   */\n  public initialize(model: CubismModel): void {\n    if (model.isUsingMasking()) {\n      this._clippingManager = new CubismClippingManager_WebGL(); // クリッピングマスク・バッファ前処理方式を初期化\n      this._clippingManager.initialize(\n        model,\n        model.getDrawableCount(),\n        model.getDrawableMasks(),\n        model.getDrawableMaskCounts(),\n      );\n    }\n\n    for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n      this._sortedDrawableIndexList[i] = 0;\n    }\n\n    super.initialize(model); // 親クラスの処理を呼ぶ\n  }\n\n  /**\n   * WebGLテクスチャのバインド処理\n   * CubismRendererにテクスチャを設定し、CubismRenderer内でその画像を参照するためのIndex値を戻り値とする\n   * @param modelTextureNo セットするモデルテクスチャの番号\n   * @param glTextureNo WebGLテクスチャの番号\n   */\n  public bindTexture(modelTextureNo: number, glTexture: WebGLTexture): void {\n    this._textures[modelTextureNo] = glTexture;\n  }\n\n  /**\n   * WebGLにバインドされたテクスチャのリストを取得する\n   * @return テクスチャのリスト\n   */\n  public getBindedTextures(): Record<number, WebGLTexture> {\n    return this._textures;\n  }\n\n  /**\n   * クリッピングマスクバッファのサイズを設定する\n   * マスク用のFrameBufferを破棄、再作成する為処理コストは高い\n   * @param size クリッピングマスクバッファのサイズ\n   */\n  public setClippingMaskBufferSize(size: number) {\n    // FrameBufferのサイズを変更するためにインスタンスを破棄・再作成する\n    this._clippingManager.release();\n\n    this._clippingManager = new CubismClippingManager_WebGL();\n\n    this._clippingManager.setClippingMaskBufferSize(size);\n\n    this._clippingManager.initialize(\n      this.getModel(),\n      this.getModel().getDrawableCount(),\n      this.getModel().getDrawableMasks(),\n      this.getModel().getDrawableMaskCounts(),\n    );\n  }\n\n  /**\n   * クリッピングマスクバッファのサイズを取得する\n   * @return クリッピングマスクバッファのサイズ\n   */\n  public getClippingMaskBufferSize(): number {\n    return this._clippingManager.getClippingMaskBufferSize();\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    super();\n    this._clippingContextBufferForMask = null;\n    this._clippingContextBufferForDraw = null;\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this.firstDraw = true;\n    this._textures = {};\n    this._sortedDrawableIndexList = [];\n    this._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null,\n    };\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    const self = this as Partial<this>;\n\n    this._clippingManager.release();\n    self._clippingManager = undefined;\n\n    this.gl?.deleteBuffer(this._bufferData.vertex);\n    this._bufferData.vertex = null;\n    this.gl?.deleteBuffer(this._bufferData.uv);\n    this._bufferData.uv = null;\n    this.gl?.deleteBuffer(this._bufferData.index);\n    this._bufferData.index = null;\n    self._bufferData = undefined;\n\n    self._textures = undefined;\n  }\n\n  /**\n   * モデルを描画する実際の処理\n   */\n  public doDrawModel(): void {\n    // 上記クリッピング処理内でも一度PreDrawを呼ぶので注意!!\n    this.preDraw();\n\n    //------------ クリッピングマスク・バッファ前処理方式の場合 ------------\n    if (this._clippingManager != null) {\n      this._clippingManager.setupClippingContext(this.getModel(), this);\n    }\n\n    const drawableCount: number = this.getModel().getDrawableCount();\n    const renderOrder: Int32Array = this.getModel().getDrawableRenderOrders();\n\n    // インデックスを描画順でソート\n    for (let i = 0; i < drawableCount; ++i) {\n      const order: number = renderOrder[i];\n      this._sortedDrawableIndexList[order] = i;\n    }\n\n    // 描画\n    for (let i = 0; i < drawableCount; ++i) {\n      const drawableIndex: number = this._sortedDrawableIndexList[i];\n\n      // Drawableが表示状態でなければ処理をパスする\n      if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n        continue;\n      }\n\n      // クリッピングマスクをセットする\n      this.setClippingContextBufferForDraw(\n        this._clippingManager != null\n          ? this._clippingManager.getClippingContextListForDraw()[drawableIndex]\n          : null,\n      );\n\n      this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n\n      this.drawMesh(\n        this.getModel().getDrawableTextureIndices(drawableIndex),\n        this.getModel().getDrawableVertexIndexCount(drawableIndex),\n        this.getModel().getDrawableVertexCount(drawableIndex),\n        this.getModel().getDrawableVertexIndices(drawableIndex),\n        this.getModel().getDrawableVertices(drawableIndex),\n        this.getModel().getDrawableVertexUvs(drawableIndex),\n        this.getModel().getDrawableOpacity(drawableIndex),\n        this.getModel().getDrawableBlendMode(drawableIndex),\n        this.getModel().getDrawableInvertedMaskBit(drawableIndex),\n      );\n    }\n  }\n\n  /**\n   * [オーバーライド]\n   * 描画オブジェクト（アートメッシュ）を描画する。\n   * ポリゴンメッシュとテクスチャ番号をセットで渡す。\n   * @param textureNo 描画するテクスチャ番号\n   * @param indexCount 描画オブジェクトのインデックス値\n   * @param vertexCount ポリゴンメッシュの頂点数\n   * @param indexArray ポリゴンメッシュのインデックス配列\n   * @param vertexArray ポリゴンメッシュの頂点配列\n   * @param uvArray uv配列\n   * @param opacity 不透明度\n   * @param colorBlendMode カラー合成タイプ\n   * @param invertedMask マスク使用時のマスクの反転使用\n   */\n  public drawMesh(\n    textureNo: number,\n    indexCount: number,\n    vertexCount: number,\n    indexArray: Uint16Array,\n    vertexArray: Float32Array,\n    uvArray: Float32Array,\n    opacity: number,\n    colorBlendMode: CubismBlendMode,\n    invertedMask: boolean,\n  ): void {\n    // 裏面描画の有効・無効\n    if (this.isCulling()) {\n      this.gl.enable(this.gl.CULL_FACE);\n    } else {\n      this.gl.disable(this.gl.CULL_FACE);\n    }\n\n    this.gl.frontFace(this.gl.CCW); // Cubism SDK OpenGLはマスク・アートメッシュ共にCCWが表面\n\n    const modelColorRGBA: CubismTextureColor = this.getModelColor();\n\n    if (this.getClippingContextBufferForMask() == null) {\n      // マスク生成時以外\n      modelColorRGBA.A *= opacity;\n      if (this.isPremultipliedAlpha()) {\n        modelColorRGBA.R *= modelColorRGBA.A;\n        modelColorRGBA.G *= modelColorRGBA.A;\n        modelColorRGBA.B *= modelColorRGBA.A;\n      }\n    }\n\n    let drawtexture: WebGLTexture | null = null; // シェーダに渡すテクスチャ\n\n    // テクスチャマップからバインド済みテクスチャＩＤを取得\n    // バインドされていなければダミーのテクスチャIDをセットする\n    if (this._textures[textureNo] != null) {\n      drawtexture = this._textures[textureNo];\n    }\n\n    CubismShader_WebGL.getInstance().setupShaderProgram(\n      this,\n      drawtexture,\n      vertexCount,\n      vertexArray,\n      indexArray,\n      uvArray,\n      this._bufferData,\n      opacity,\n      colorBlendMode,\n      modelColorRGBA,\n      this.isPremultipliedAlpha(),\n      this.getMvpMatrix(),\n      invertedMask,\n    );\n\n    // ポリゴンメッシュを描画する\n    this.gl.drawElements(\n      this.gl.TRIANGLES,\n      indexCount,\n      this.gl.UNSIGNED_SHORT,\n      0,\n    );\n\n    // 後処理\n    this.gl.useProgram(null);\n    this.setClippingContextBufferForDraw(null);\n    this.setClippingContextBufferForMask(null);\n  }\n\n  /**\n   * レンダラが保持する静的なリソースを解放する\n   * WebGLの静的なシェーダープログラムを解放する\n   */\n  public static doStaticRelease(): void {\n    CubismShader_WebGL.deleteInstance();\n  }\n\n  /**\n   * レンダーステートを設定する\n   * @param fbo アプリケーション側で指定しているフレームバッファ\n   * @param viewport ビューポート\n   */\n  public setRenderState(fbo: WebGLFramebuffer, viewport: number[]): void {\n    s_fbo = fbo;\n    s_viewport = viewport;\n  }\n\n  /**\n   * 描画開始時の追加処理\n   * モデルを描画する前にクリッピングマスクに必要な処理を実装している\n   */\n  public preDraw(): void {\n    if (this.firstDraw) {\n      this.firstDraw = false;\n\n      // 拡張機能を有効にする\n      this._anisortopy =\n        this.gl.getExtension('EXT_texture_filter_anisotropic') ||\n        this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic') ||\n        this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic');\n    }\n\n    this.gl.disable(this.gl.SCISSOR_TEST);\n    this.gl.disable(this.gl.STENCIL_TEST);\n    this.gl.disable(this.gl.DEPTH_TEST);\n\n    // カリング（1.0beta3）\n    this.gl.frontFace(this.gl.CW);\n\n    this.gl.enable(this.gl.BLEND);\n    this.gl.colorMask(true, true, true, true);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null); // 前にバッファがバインドされていたら破棄する必要がある\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n\n  /**\n   * マスクテクスチャに描画するクリッピングコンテキストをセットする\n   */\n  public setClippingContextBufferForMask(clip: CubismClippingContext | null) {\n    this._clippingContextBufferForMask = clip;\n  }\n\n  /**\n   * マスクテクスチャに描画するクリッピングコンテキストを取得する\n   * @return マスクテクスチャに描画するクリッピングコンテキスト\n   */\n  public getClippingContextBufferForMask(): CubismClippingContext | null {\n    return this._clippingContextBufferForMask;\n  }\n\n  /**\n   * 画面上に描画するクリッピングコンテキストをセットする\n   */\n  public setClippingContextBufferForDraw(clip: CubismClippingContext | null): void {\n    this._clippingContextBufferForDraw = clip;\n  }\n\n  /**\n   * 画面上に描画するクリッピングコンテキストを取得する\n   * @return 画面上に描画するクリッピングコンテキスト\n   */\n  public getClippingContextBufferForDraw(): CubismClippingContext | null {\n    return this._clippingContextBufferForDraw;\n  }\n\n  /**\n   * glの設定\n   */\n  public startUp(gl: WebGLRenderingContext): void {\n    this.gl = gl;\n    this._clippingManager.setGL(gl);\n    CubismShader_WebGL.getInstance().setGl(gl);\n  }\n\n  _textures: Record<number, WebGLTexture>; // モデルが参照するテクスチャとレンダラでバインドしているテクスチャとのマップ\n  _sortedDrawableIndexList: number[]; // 描画オブジェクトのインデックスを描画順に並べたリスト\n  _clippingManager: CubismClippingManager_WebGL; // クリッピングマスク管理オブジェクト\n  _clippingContextBufferForMask: CubismClippingContext | null; // マスクテクスチャに描画するためのクリッピングコンテキスト\n  _clippingContextBufferForDraw: CubismClippingContext | null; // 画面上描画するためのクリッピングコンテキスト\n  firstDraw: boolean;\n  _bufferData: {\n    vertex: WebGLBuffer | null;\n    uv: WebGLBuffer | null;\n    index: WebGLBuffer | null;\n  }; // 頂点バッファデータ\n  gl!: WebGLRenderingContext; // webglコンテキスト\n}\n\n/**\n * レンダラが保持する静的なリソースを開放する\n */\nCubismRenderer.staticRelease = (): void => {\n  CubismRenderer_WebGL.doStaticRelease();\n};\n","import { InternalModelOptions } from '@/cubism-common';\nimport { CommonHitArea, CommonLayout, InternalModel } from '@/cubism-common/InternalModel';\nimport { Cubism4ModelSettings } from '@/cubism4/Cubism4ModelSettings';\nimport { Cubism4MotionManager } from '@/cubism4/Cubism4MotionManager';\nimport {\n    ParamAngleX,\n    ParamAngleY,\n    ParamAngleZ,\n    ParamBodyAngleX,\n    ParamBreath,\n    ParamEyeBallX,\n    ParamEyeBallY,\n} from '@cubism/cubismdefaultparameterid';\nimport { BreathParameterData, CubismBreath } from '@cubism/effect/cubismbreath';\nimport { CubismEyeBlink } from '@cubism/effect/cubismeyeblink';\nimport { CubismPose } from '@cubism/effect/cubismpose';\nimport { CubismMatrix44 } from '@cubism/math/cubismmatrix44';\nimport { CubismModel } from '@cubism/model/cubismmodel';\nimport { CubismModelUserData } from '@cubism/model/cubismmodeluserdata';\nimport { CubismPhysics } from '@cubism/physics/cubismphysics';\nimport { CubismRenderer_WebGL, CubismShader_WebGL } from '@cubism/rendering/cubismrenderer_webgl';\nimport { Matrix } from '@pixi/math';\nimport mapKeys from 'lodash/mapKeys';\n\nconst tempMatrix = new CubismMatrix44();\n\nexport class Cubism4InternalModel extends InternalModel {\n    settings: Cubism4ModelSettings;\n    coreModel: CubismModel;\n    motionManager: Cubism4MotionManager;\n\n    lipSync = true;\n\n    breath = CubismBreath.create();\n    eyeBlink?: CubismEyeBlink;\n    pose?: CubismPose;\n    physics?: CubismPhysics;\n\n    // what's this for?\n    userData?: CubismModelUserData;\n\n    renderer = new CubismRenderer_WebGL();\n\n    idParamAngleX = ParamAngleX;\n    idParamAngleY = ParamAngleY;\n    idParamAngleZ = ParamAngleZ;\n    idParamEyeBallX = ParamEyeBallX;\n    idParamEyeBallY = ParamEyeBallY;\n    idParamBodyAngleX = ParamBodyAngleX;\n    idParamBreath = ParamBreath;\n\n    /**\n     * The model's internal scale, defined in the moc3 file.\n     */\n    readonly pixelsPerUnit: number = 1;\n\n    /**\n     * Matrix that scales by {@link pixelsPerUnit}, and moves the origin from top-left to center.\n     *\n     * FIXME: This shouldn't be named as \"centering\"...\n     */\n    protected centeringTransform = new Matrix();\n\n    constructor(coreModel: CubismModel, settings: Cubism4ModelSettings, options?: InternalModelOptions) {\n        super();\n\n        this.coreModel = coreModel;\n        this.settings = settings;\n        this.motionManager = new Cubism4MotionManager(settings, options);\n\n        this.init();\n    }\n\n    protected init() {\n        super.init();\n\n        if (this.settings.getEyeBlinkParameters()?.length! > 0) {\n            this.eyeBlink = CubismEyeBlink.create(this.settings);\n        }\n\n        this.breath.setParameters([\n            new BreathParameterData(this.idParamAngleX, 0.0, 15.0, 6.5345, 0.5),\n            new BreathParameterData(this.idParamAngleY, 0.0, 8.0, 3.5345, 0.5),\n            new BreathParameterData(this.idParamAngleZ, 0.0, 10.0, 5.5345, 0.5),\n            new BreathParameterData(this.idParamBodyAngleX, 0.0, 4.0, 15.5345, 0.5),\n            new BreathParameterData(this.idParamBreath, 0.0, 0.5, 3.2345, 0.5),\n        ]);\n\n        this.renderer.initialize(this.coreModel);\n        this.renderer.setIsPremultipliedAlpha(true);\n    }\n\n    protected getSize(): [number, number] {\n        return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n    }\n\n    protected getLayout(): CommonLayout {\n        // un-capitalize each key to satisfy the common layout format\n        // e.g. CenterX -> centerX\n        return mapKeys({ ...this.settings.layout }, (_, key) => key.charAt(0).toLowerCase() + key.slice(1));\n    }\n\n    protected setupLayout() {\n        super.setupLayout();\n\n        (this as Mutable<this>).pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n\n        // move the origin from top left to center\n        this.centeringTransform\n            .scale(this.pixelsPerUnit, this.pixelsPerUnit)\n            .translate(this.originalWidth / 2, this.originalHeight / 2);\n    }\n\n    updateWebGLContext(gl: WebGLRenderingContext, glContextID: number): void {\n        // reset resources that were bound to previous WebGL context\n        this.renderer.firstDraw = true;\n        this.renderer._bufferData = {\n            vertex: null,\n            uv: null,\n            index: null,\n        };\n        this.renderer.startUp(gl);\n        this.renderer._clippingManager._currentFrameNo = glContextID;\n        this.renderer._clippingManager._maskTexture = undefined;\n        CubismShader_WebGL.getInstance()._shaderSets = [];\n    }\n\n    bindTexture(index: number, texture: WebGLTexture): void {\n        this.renderer.bindTexture(index, texture);\n    }\n\n    protected getHitAreaDefs(): CommonHitArea[] {\n        return this.settings.hitAreas?.map(hitArea => ({\n            id: hitArea.Id,\n            name: hitArea.Name,\n            index: this.coreModel.getDrawableIndex(hitArea.Id),\n        })) ?? [];\n    }\n\n    getDrawableIDs(): string[] {\n        return this.coreModel.getDrawableIds();\n    }\n\n    getDrawableIndex(id: string): number {\n        return this.coreModel.getDrawableIndex(id);\n    }\n\n    getDrawableVertices(drawIndex: number | string): Float32Array {\n        if (typeof drawIndex === 'string') {\n            drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n\n            if (drawIndex === -1) throw new TypeError('Unable to find drawable ID: ' + drawIndex);\n        }\n\n        const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n\n        for (let i = 0; i < arr.length; i += 2) {\n            arr[i] = arr[i]! * this.pixelsPerUnit + this.originalWidth / 2;\n            arr[i + 1] = -arr[i + 1]! * this.pixelsPerUnit + this.originalHeight / 2;\n        }\n\n        return arr;\n    }\n\n    updateTransform(transform: Matrix) {\n        this.drawingMatrix\n            .copyFrom(this.centeringTransform)\n            .prepend(this.localTransform)\n            .prepend(transform);\n    }\n\n    public update(dt: DOMHighResTimeStamp, now: DOMHighResTimeStamp): void {\n        super.update(dt, now);\n\n        // cubism4 uses seconds\n        dt /= 1000;\n        now /= 1000;\n\n        const model = this.coreModel;\n\n        this.emit('beforeMotionUpdate');\n\n        const motionUpdated = this.motionManager.update(this.coreModel, now);\n\n        this.emit('afterMotionUpdate');\n\n        model.saveParameters();\n\n        this.motionManager.expressionManager?.update(model, now);\n\n        if (!motionUpdated) {\n            this.eyeBlink?.updateParameters(model, dt);\n        }\n\n        this.updateFocus();\n\n        // revert the timestamps to be milliseconds\n        this.updateNaturalMovements(dt * 1000, now * 1000);\n\n        // TODO: Add lip sync API\n        // if (this.lipSync) {\n        //     const value = 0; // 0 ~ 1\n        //\n        //     for (let i = 0; i < this.lipSyncIds.length; ++i) {\n        //         model.addParameterValueById(this.lipSyncIds[i], value, 0.8);\n        //     }\n        // }\n\n        this.physics?.evaluate(model, dt);\n        this.pose?.updateParameters(model, dt);\n\n        this.emit('beforeModelUpdate');\n\n        model.update();\n        model.loadParameters();\n    }\n\n    updateFocus() {\n        this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x); // -1 ~ 1\n        this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n        this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30); // -30 ~ 30\n        this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n        this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n        this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10); // -10 ~ 10\n    }\n\n    updateNaturalMovements(dt: DOMHighResTimeStamp, now: DOMHighResTimeStamp) {\n        this.breath?.updateParameters(this.coreModel, dt / 1000);\n    }\n\n    draw(gl: WebGLRenderingContext): void {\n        const matrix = this.drawingMatrix;\n        const array = tempMatrix.getArray();\n\n        // set given 3x3 matrix into a 4x4 matrix, with Y inverted\n        array[0] = matrix.a;\n        array[1] = matrix.b;\n        array[4] = -matrix.c;\n        array[5] = -matrix.d;\n        array[12] = matrix.tx;\n        array[13] = matrix.ty;\n\n        this.renderer.setMvpMatrix(tempMatrix);\n        this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n        this.renderer.drawModel();\n    }\n\n    destroy() {\n        super.destroy();\n\n        this.renderer.release();\n        this.coreModel.release();\n\n        (this as Partial<this>).renderer = undefined;\n        (this as Partial<this>).coreModel = undefined;\n    }\n}\n","import { logger } from '@/utils';\nimport { CubismFramework, CubismStartupOption, LogLevel } from '@cubism/live2dcubismframework';\n\nlet startupPromise: Promise<void>;\nlet startupRetries = 20;\n\n/**\n * Promises the Cubism 4 runtime has been started up.\n * @return Promise that resolves if the startup has succeeded, rejects if failed.\n */\nexport function cubism4Ready(): Promise<void> {\n    if (CubismFramework.isStarted()) {\n        return Promise.resolve();\n    }\n\n    startupPromise ??= new Promise<void>(((resolve, reject) => {\n        function startUpWithRetry() {\n            try {\n                startUpCubism4();\n                resolve();\n            } catch (e) {\n                startupRetries--;\n\n                if (startupRetries < 0) {\n                    const err = new Error('Failed to start up Cubism 4 framework.');\n\n                    (err as any).cause = e;\n\n                    reject(err);\n                    return;\n                }\n\n                logger.log('Cubism4', 'Startup failed, retrying 10ms later...');\n\n                setTimeout(startUpWithRetry, 10);\n            }\n        }\n\n        startUpWithRetry();\n    }));\n\n    return startupPromise;\n}\n\n/**\n * Starts up the Cubism 4 runtime.\n */\nexport function startUpCubism4(options?: CubismStartupOption) {\n    options = Object.assign({\n        logFunction: console.log,\n        loggingLevel: LogLevel.LogLevel_Verbose,\n    }, options);\n\n    CubismFramework.startUp(options);\n    CubismFramework.initialize();\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from '../model/cubismmodel';\n\nconst Epsilon = 0.001;\nconst DefaultFadeInSeconds = 0.5;\n\n/**\n * パーツの不透明度の設定\n *\n * パーツの不透明度の管理と設定を行う。\n */\nexport class CubismPose {\n  /**\n   * インスタンスの作成\n   * @param pose3json pose3.jsonのデータ\n   * @return 作成されたインスタンス\n   */\n  public static create(pose3json: CubismSpec.PoseJSON): CubismPose {\n    const ret: CubismPose = new CubismPose();\n\n    // フェード時間の指定\n    if (typeof pose3json.FadeInTime === 'number') {\n      ret._fadeTimeSeconds = pose3json.FadeInTime;\n\n      if (ret._fadeTimeSeconds <= 0.0) {\n        ret._fadeTimeSeconds = DefaultFadeInSeconds;\n      }\n    }\n\n    // パーツグループ\n    const poseListInfo = pose3json.Groups;\n    const poseCount: number = poseListInfo.length;\n\n    for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n      const idListInfo = poseListInfo[poseIndex];\n      const idCount: number = idListInfo.length;\n      let groupCount = 0;\n\n      for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n        const partInfo = idListInfo[groupIndex];\n        const partData: PartData = new PartData();\n\n        partData.partId = partInfo.Id;\n\n        const linkListInfo = partInfo.Link;\n\n        // リンクするパーツの設定\n        if (linkListInfo) {\n          const linkCount: number = linkListInfo.length;\n\n          for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n            const linkPart: PartData = new PartData();\n\n            linkPart.partId = linkListInfo[linkIndex];\n\n            partData.link.push(linkPart);\n          }\n        }\n\n        ret._partGroups.push(partData);\n\n        ++groupCount;\n      }\n\n      ret._partGroupCounts.push(groupCount);\n    }\n\n    return ret;\n  }\n\n  /**\n   * モデルのパラメータの更新\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */\n  public updateParameters(\n    model: CubismModel,\n    deltaTimeSeconds: number,\n  ): void {\n    // 前回のモデルと同じでない場合は初期化が必要\n    if (model != this._lastModel) {\n      // パラメータインデックスの初期化\n      this.reset(model);\n    }\n\n    this._lastModel = model;\n\n    // 設定から時間を変更すると、経過時間がマイナスになる事があるので、経過時間0として対応\n    if (deltaTimeSeconds < 0.0) {\n      deltaTimeSeconds = 0.0;\n    }\n\n    let beginIndex = 0;\n\n    for (let i = 0; i < this._partGroupCounts.length; i++) {\n      const partGroupCount: number = this._partGroupCounts[i];\n\n      this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n\n      beginIndex += partGroupCount;\n    }\n\n    this.copyPartOpacities(model);\n  }\n\n  /**\n   * 表示を初期化\n   * @param model 対象のモデル\n   * @note 不透明度の初期値が0でないパラメータは、不透明度を１に設定する\n   */\n  public reset(model: CubismModel): void {\n    let beginIndex = 0;\n\n    for (let i = 0; i < this._partGroupCounts.length; ++i) {\n      const groupCount: number = this._partGroupCounts[i];\n\n      for (let j: number = beginIndex; j < beginIndex + groupCount; ++j) {\n        this._partGroups[j].initialize(model);\n\n        const partsIndex: number = this._partGroups[j].partIndex;\n        const paramIndex: number = this._partGroups[j].parameterIndex;\n\n        if (partsIndex < 0) {\n          continue;\n        }\n\n        model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1.0 : 0.0);\n        model.setParameterValueByIndex(\n          paramIndex,\n          j == beginIndex ? 1.0 : 0.0,\n        );\n\n        for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n          this._partGroups\n            [j]\n            .link[k]\n            .initialize(model);\n        }\n      }\n\n      beginIndex += groupCount;\n    }\n  }\n\n  /**\n   * パーツの不透明度をコピー\n   *\n   * @param model 対象のモデル\n   */\n  public copyPartOpacities(model: CubismModel): void {\n    for (\n      let groupIndex = 0;\n      groupIndex < this._partGroups.length;\n      ++groupIndex\n    ) {\n      const partData: PartData = this._partGroups[groupIndex];\n\n      if (partData.link.length == 0) {\n        continue; // 連動するパラメータはない\n      }\n\n      const partIndex: number = this._partGroups[groupIndex].partIndex;\n      const opacity: number = model.getPartOpacityByIndex(partIndex);\n\n      for (\n        let linkIndex = 0;\n        linkIndex < partData.link.length;\n        ++linkIndex\n      ) {\n        const linkPart: PartData = partData.link[linkIndex];\n        const linkPartIndex: number = linkPart.partIndex;\n\n        if (linkPartIndex < 0) {\n          continue;\n        }\n\n        model.setPartOpacityByIndex(linkPartIndex, opacity);\n      }\n    }\n  }\n\n  /**\n   * パーツのフェード操作を行う。\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   * @param beginIndex フェード操作を行うパーツグループの先頭インデックス\n   * @param partGroupCount フェード操作を行うパーツグループの個数\n   */\n  public doFade(\n    model: CubismModel,\n    deltaTimeSeconds: number,\n    beginIndex: number,\n    partGroupCount: number,\n  ): void {\n    let visiblePartIndex = -1;\n    let newOpacity = 1.0;\n\n    const phi = 0.5;\n    const backOpacityThreshold = 0.15;\n\n    // 現在、表示状態になっているパーツを取得\n    for (let i: number = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partIndex: number = this._partGroups[i].partIndex;\n      const paramIndex: number = this._partGroups[i].parameterIndex;\n\n      if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n        if (visiblePartIndex >= 0) {\n          break;\n        }\n\n        visiblePartIndex = i;\n        newOpacity = model.getPartOpacityByIndex(partIndex);\n\n        // 新しい不透明度を計算\n        newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n\n        if (newOpacity > 1.0) {\n          newOpacity = 1.0;\n        }\n      }\n    }\n\n    if (visiblePartIndex < 0) {\n      visiblePartIndex = 0;\n      newOpacity = 1.0;\n    }\n\n    // 表示パーツ、非表示パーツの不透明度を設定する\n    for (let i: number = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partsIndex: number = this._partGroups[i].partIndex;\n\n      // 表示パーツの設定\n      if (visiblePartIndex == i) {\n        model.setPartOpacityByIndex(partsIndex, newOpacity); // 先に設定\n      }\n      // 非表示パーツの設定\n      else {\n        let opacity: number = model.getPartOpacityByIndex(partsIndex);\n        let a1: number; // 計算によって求められる不透明度\n\n        if (newOpacity < phi) {\n          a1 = (newOpacity * (phi - 1)) / phi + 1.0; // (0,1),(phi,phi)を通る直線式\n        } else {\n          a1 = ((1 - newOpacity) * phi) / (1.0 - phi); // (1,0),(phi,phi)を通る直線式\n        }\n\n        // 背景の見える割合を制限する場合\n        const backOpacity: number = (1.0 - a1) * (1.0 - newOpacity);\n\n        if (backOpacity > backOpacityThreshold) {\n          a1 = 1.0 - backOpacityThreshold / (1.0 - newOpacity);\n        }\n\n        if (opacity > a1) {\n          opacity = a1; // 計算の不透明度よりも大きければ（濃ければ）不透明度を上げる\n        }\n\n        model.setPartOpacityByIndex(partsIndex, opacity);\n      }\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._fadeTimeSeconds = DefaultFadeInSeconds;\n    this._lastModel = undefined;\n    this._partGroups = [];\n    this._partGroupCounts = [];\n  }\n\n  _partGroups: PartData[]; // パーツグループ\n  _partGroupCounts: number[]; // それぞれのパーツグループの個数\n  _fadeTimeSeconds: number; // フェード時間[秒]\n  _lastModel?: CubismModel; // 前回操作したモデル\n}\n\n/**\n * パーツにまつわるデータを管理\n */\nexport class PartData {\n  /**\n   * コンストラクタ\n   */\n  constructor(v?: PartData) {\n    this.parameterIndex = 0;\n    this.partIndex = 0;\n    this.partId = '';\n    this.link = [];\n\n    if (v != undefined) {\n      this.assignment(v);\n    }\n  }\n\n  /**\n   * =演算子のオーバーロード\n   */\n  public assignment(v: PartData): PartData {\n    this.partId = v.partId;\n    this.link = v.link.map(link => link.clone());\n\n    return this;\n  }\n\n  /**\n   * 初期化\n   * @param model 初期化に使用するモデル\n   */\n  public initialize(model: CubismModel): void {\n    this.parameterIndex = model.getParameterIndex(this.partId);\n    this.partIndex = model.getPartIndex(this.partId);\n\n    model.setParameterValueByIndex(this.parameterIndex, 1);\n  }\n\n  /**\n   * オブジェクトのコピーを生成する\n   */\n  public clone(): PartData {\n    const clonePartData: PartData = new PartData();\n\n    clonePartData.partId = this.partId;\n    clonePartData.parameterIndex = this.parameterIndex;\n    clonePartData.partIndex = this.partIndex;\n    clonePartData.link = this.link.map(link => link.clone());\n\n    return clonePartData;\n  }\n\n  partId: string; // パーツID\n  parameterIndex: number; // パラメータのインデックス\n  partIndex: number; // パーツのインデックス\n  link: PartData[]; // 連動するパラメータ\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismBlendMode } from '../rendering/cubismrenderer';\nimport { CSM_ASSERT } from '../utils/cubismdebug';\n\n/**\n * モデル\n *\n * Mocデータから生成されるモデルのクラス。\n */\nexport class CubismModel {\n  /**\n   * モデルのパラメータの更新\n   */\n  public update(): void {\n    // Update model\n    this._model.update();\n\n    this._model.drawables.resetDynamicFlags();\n  }\n\n  /**\n   * キャンバスの幅を取得する\n   */\n  public getCanvasWidth(): number {\n    if (this._model == null) {\n      return 0.0;\n    }\n\n    return (\n      this._model.canvasinfo.CanvasWidth /\n      this._model.canvasinfo.PixelsPerUnit\n    );\n  }\n\n  /**\n   * キャンバスの高さを取得する\n   */\n  public getCanvasHeight(): number {\n    if (this._model == null) {\n      return 0.0;\n    }\n\n    return (\n      this._model.canvasinfo.CanvasHeight /\n      this._model.canvasinfo.PixelsPerUnit\n    );\n  }\n\n  /**\n   * パラメータを保存する\n   */\n  public saveParameters(): void {\n    const parameterCount: number = this._model.parameters.count;\n    const savedParameterCount: number = this._savedParameters.length;\n\n    for (let i = 0; i < parameterCount; ++i) {\n      if (i < savedParameterCount) {\n        this._savedParameters[i] = this._parameterValues[i];\n      } else {\n        this._savedParameters.push(this._parameterValues[i]);\n      }\n    }\n  }\n\n  /**\n   * モデルを取得\n   */\n  public getModel(): Live2DCubismCore.Model {\n    return this._model;\n  }\n\n  /**\n   * パーツのインデックスを取得\n   * @param partId パーツのID\n   * @return パーツのインデックス\n   */\n  public getPartIndex(partId: string): number {\n    let partIndex: number;\n    const partCount: number = this._model.parts.count;\n\n    for (partIndex = 0; partIndex < partCount; ++partIndex) {\n      if (partId == this._partIds[partIndex]) {\n        return partIndex;\n      }\n    }\n\n    // モデルに存在していない場合、非存在パーツIDリスト内にあるかを検索し、そのインデックスを返す\n    if (partId in this._notExistPartId) {\n      return this._notExistPartId[partId];\n    }\n\n    // 非存在パーツIDリストにない場合、新しく要素を追加する\n    partIndex = partCount + this._notExistPartId.length;\n    this._notExistPartId[partId] = partIndex;\n    this._notExistPartOpacities[partIndex] = 0;\n\n    return partIndex;\n  }\n\n  /**\n   * パーツの個数の取得\n   * @return パーツの個数\n   */\n  public getPartCount(): number {\n    return this._model.parts.count;\n  }\n\n  /**\n   * パーツの不透明度の設定(Index)\n   * @param partIndex パーツのインデックス\n   * @param opacity 不透明度\n   */\n  public setPartOpacityByIndex(partIndex: number, opacity: number): void {\n    if (partIndex in this._notExistPartOpacities) {\n      this._notExistPartOpacities[partIndex] = opacity;\n      return;\n    }\n\n    // インデックスの範囲内検知\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n\n    this._partOpacities[partIndex] = opacity;\n  }\n\n  /**\n   * パーツの不透明度の設定(Id)\n   * @param partId パーツのID\n   * @param opacity パーツの不透明度\n   */\n  public setPartOpacityById(partId: string, opacity: number): void {\n    // 高速化のためにPartIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\n    const index: number = this.getPartIndex(partId);\n\n    if (index < 0) {\n      return; // パーツがないのでスキップ\n    }\n\n    this.setPartOpacityByIndex(index, opacity);\n  }\n\n  /**\n   * パーツの不透明度の取得(index)\n   * @param partIndex パーツのインデックス\n   * @return パーツの不透明度\n   */\n  public getPartOpacityByIndex(partIndex: number): number {\n    if (partIndex in this._notExistPartOpacities) {\n      // モデルに存在しないパーツIDの場合、非存在パーツリストから不透明度を返す。\n      return this._notExistPartOpacities[partIndex];\n    }\n\n    // インデックスの範囲内検知\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n\n    return this._partOpacities[partIndex];\n  }\n\n  /**\n   * パーツの不透明度の取得(id)\n   * @param partId パーツのＩｄ\n   * @return パーツの不透明度\n   */\n  public getPartOpacityById(partId: string): number {\n    // 高速化のためにPartIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\n    const index: number = this.getPartIndex(partId);\n\n    if (index < 0) {\n      return 0; // パーツが無いのでスキップ\n    }\n\n    return this.getPartOpacityByIndex(index);\n  }\n\n  /**\n   * パラメータのインデックスの取得\n   * @param パラメータID\n   * @return パラメータのインデックス\n   */\n  public getParameterIndex(parameterId: string): number {\n    let parameterIndex: number;\n    const idCount: number = this._model.parameters.count;\n\n    for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n      if (parameterId != this._parameterIds[parameterIndex]) {\n        continue;\n      }\n\n      return parameterIndex;\n    }\n\n    // モデルに存在していない場合、非存在パラメータIDリスト内を検索し、そのインデックスを返す\n    if (parameterId in this._notExistParameterId) {\n      return this._notExistParameterId[parameterId];\n    }\n\n    // 非存在パラメータIDリストにない場合新しく要素を追加する\n    parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n\n    this._notExistParameterId[parameterId] = parameterIndex;\n    this._notExistParameterValues[parameterIndex] = 0;\n\n    return parameterIndex;\n  }\n\n  /**\n   * パラメータの個数の取得\n   * @return パラメータの個数\n   */\n  public getParameterCount(): number {\n    return this._model.parameters.count;\n  }\n\n  /**\n   * パラメータの最大値の取得\n   * @param parameterIndex パラメータのインデックス\n   * @return パラメータの最大値\n   */\n  public getParameterMaximumValue(parameterIndex: number): number {\n    return this._model.parameters.maximumValues[parameterIndex];\n  }\n\n  /**\n   * パラメータの最小値の取得\n   * @param parameterIndex パラメータのインデックス\n   * @return パラメータの最小値\n   */\n  public getParameterMinimumValue(parameterIndex: number): number {\n    return this._model.parameters.minimumValues[parameterIndex];\n  }\n\n  /**\n   * パラメータのデフォルト値の取得\n   * @param parameterIndex パラメータのインデックス\n   * @return パラメータのデフォルト値\n   */\n  public getParameterDefaultValue(parameterIndex: number): number {\n    return this._model.parameters.defaultValues[parameterIndex];\n  }\n\n  /**\n   * パラメータの値の取得\n   * @param parameterIndex    パラメータのインデックス\n   * @return パラメータの値\n   */\n  public getParameterValueByIndex(parameterIndex: number): number {\n    if (parameterIndex in this._notExistParameterValues) {\n      return this._notExistParameterValues[parameterIndex];\n    }\n\n    // インデックスの範囲内検知\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n\n    return this._parameterValues[parameterIndex];\n  }\n\n  /**\n   * パラメータの値の取得\n   * @param parameterId    パラメータのID\n   * @return パラメータの値\n   */\n  public getParameterValueById(parameterId: string): number {\n    // 高速化のためにparameterIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\n    const parameterIndex: number = this.getParameterIndex(parameterId);\n    return this.getParameterValueByIndex(parameterIndex);\n  }\n\n  /**\n   * パラメータの値の設定\n   * @param parameterIndex パラメータのインデックス\n   * @param value パラメータの値\n   * @param weight 重み\n   */\n  public setParameterValueByIndex(\n    parameterIndex: number,\n    value: number,\n    weight = 1.0,\n  ): void {\n    if (parameterIndex in this._notExistParameterValues) {\n      this._notExistParameterValues[parameterIndex] =\n        weight == 1\n          ? value\n          : this._notExistParameterValues[parameterIndex] *\n          (1 - weight) +\n          value * weight;\n\n      return;\n    }\n\n    // インデックスの範囲内検知\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n\n    if (this._model.parameters.maximumValues[parameterIndex] < value) {\n      value = this._model.parameters.maximumValues[parameterIndex];\n    }\n    if (this._model.parameters.minimumValues[parameterIndex] > value) {\n      value = this._model.parameters.minimumValues[parameterIndex];\n    }\n\n    this._parameterValues[parameterIndex] =\n      weight == 1\n        ? value\n        : (this._parameterValues[parameterIndex] =\n        this._parameterValues[parameterIndex] * (1 - weight) +\n        value * weight);\n  }\n\n  /**\n   * パラメータの値の設定\n   * @param parameterId パラメータのID\n   * @param value パラメータの値\n   * @param weight 重み\n   */\n  public setParameterValueById(\n    parameterId: string,\n    value: number,\n    weight = 1.0,\n  ): void {\n    const index: number = this.getParameterIndex(parameterId);\n    this.setParameterValueByIndex(index, value, weight);\n  }\n\n  /**\n   * パラメータの値の加算(index)\n   * @param parameterIndex パラメータインデックス\n   * @param value 加算する値\n   * @param weight 重み\n   */\n  public addParameterValueByIndex(\n    parameterIndex: number,\n    value: number,\n    weight = 1.0,\n  ): void {\n    this.setParameterValueByIndex(\n      parameterIndex,\n      this.getParameterValueByIndex(parameterIndex) + value * weight,\n    );\n  }\n\n  /**\n   * パラメータの値の加算(id)\n   * @param parameterId パラメータＩＤ\n   * @param value 加算する値\n   * @param weight 重み\n   */\n  public addParameterValueById(\n    parameterId: any,\n    value: number,\n    weight = 1.0,\n  ): void {\n    const index: number = this.getParameterIndex(parameterId);\n    this.addParameterValueByIndex(index, value, weight);\n  }\n\n  /**\n   * パラメータの値の乗算\n   * @param parameterId パラメータのID\n   * @param value 乗算する値\n   * @param weight 重み\n   */\n  public multiplyParameterValueById(\n    parameterId: string,\n    value: number,\n    weight = 1.0,\n  ): void {\n    const index: number = this.getParameterIndex(parameterId);\n    this.multiplyParameterValueByIndex(index, value, weight);\n  }\n\n  /**\n   * パラメータの値の乗算\n   * @param parameterIndex パラメータのインデックス\n   * @param value 乗算する値\n   * @param weight 重み\n   */\n  public multiplyParameterValueByIndex(\n    parameterIndex: number,\n    value: number,\n    weight = 1.0,\n  ): void {\n    this.setParameterValueByIndex(\n      parameterIndex,\n      this.getParameterValueByIndex(parameterIndex) *\n      (1.0 + (value - 1.0) * weight),\n    );\n  }\n\n  public getDrawableIds() {\n    return this._drawableIds.slice();\n  }\n\n  /**\n   * Drawableのインデックスの取得\n   * @param drawableId DrawableのID\n   * @return Drawableのインデックス\n   */\n  public getDrawableIndex(drawableId: string): number {\n    const drawableCount = this._model.drawables.count;\n\n    for (\n      let drawableIndex = 0;\n      drawableIndex < drawableCount;\n      ++drawableIndex\n    ) {\n      if (this._drawableIds[drawableIndex] == drawableId) {\n        return drawableIndex;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * Drawableの個数の取得\n   * @return drawableの個数\n   */\n  public getDrawableCount(): number {\n    return this._model.drawables.count;\n  }\n\n  /**\n   * DrawableのIDを取得する\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのID\n   */\n  public getDrawableId(drawableIndex: number): string {\n    return this._model.drawables.ids[drawableIndex];\n  }\n\n  /**\n   * Drawableの描画順リストの取得\n   * @return Drawableの描画順リスト\n   */\n  public getDrawableRenderOrders(): Int32Array {\n    return this._model.drawables.renderOrders;\n  }\n\n  /**\n   * Drawableのテクスチャインデックスリストの取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのテクスチャインデックスリスト\n   */\n  public getDrawableTextureIndices(drawableIndex: number): number {\n    return this._model.drawables.textureIndices[drawableIndex];\n  }\n\n  /**\n   * DrawableのVertexPositionsの変化情報の取得\n   *\n   * 直近のCubismModel.update関数でDrawableの頂点情報が変化したかを取得する。\n   *\n   * @param   drawableIndex   Drawableのインデックス\n   * @retval  true    Drawableの頂点情報が直近のCubismModel.update関数で変化した\n   * @retval  false   Drawableの頂点情報が直近のCubismModel.update関数で変化していない\n   */\n  public getDrawableDynamicFlagVertexPositionsDidChange(\n    drawableIndex: number,\n  ): boolean {\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(\n      dynamicFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * Drawableの頂点インデックスの個数の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点インデックスの個数\n   */\n  public getDrawableVertexIndexCount(drawableIndex: number): number {\n    return this._model.drawables.indexCounts[drawableIndex];\n  }\n\n  /**\n   * Drawableの頂点の個数の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点の個数\n   */\n  public getDrawableVertexCount(drawableIndex: number): number {\n    return this._model.drawables.vertexCounts[drawableIndex];\n  }\n\n  /**\n   * Drawableの頂点リストの取得\n   * @param drawableIndex drawableのインデックス\n   * @return drawableの頂点リスト\n   */\n  public getDrawableVertices(drawableIndex: number): Float32Array {\n    return this.getDrawableVertexPositions(drawableIndex);\n  }\n\n  /**\n   * Drawableの頂点インデックスリストの取得\n   * @param drarableIndex Drawableのインデックス\n   * @return drawableの頂点インデックスリスト\n   */\n  public getDrawableVertexIndices(drawableIndex: number): Uint16Array {\n    return this._model.drawables.indices[drawableIndex];\n  }\n\n  /**\n   * Drawableの頂点リストの取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点リスト\n   */\n  public getDrawableVertexPositions(drawableIndex: number): Float32Array {\n    return this._model.drawables.vertexPositions[drawableIndex];\n  }\n\n  /**\n   * Drawableの頂点のUVリストの取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点UVリスト\n   */\n  public getDrawableVertexUvs(drawableIndex: number): Float32Array {\n    return this._model.drawables.vertexUvs[drawableIndex];\n  }\n\n  /**\n   * Drawableの不透明度の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの不透明度\n   */\n  public getDrawableOpacity(drawableIndex: number): number {\n    return this._model.drawables.opacities[drawableIndex];\n  }\n\n  /**\n   * Drawableのカリング情報の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのカリング情報\n   */\n  public getDrawableCulling(drawableIndex: number): boolean {\n    const constantFlags = this._model.drawables.constantFlags;\n\n    return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(\n      constantFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * Drawableのブレンドモードを取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのブレンドモード\n   */\n  public getDrawableBlendMode(drawableIndex: number): CubismBlendMode {\n    const constantFlags = this._model.drawables.constantFlags;\n\n    return Live2DCubismCore.Utils.hasBlendAdditiveBit(\n      constantFlags[drawableIndex],\n    )\n      ? CubismBlendMode.CubismBlendMode_Additive\n      : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(\n        constantFlags[drawableIndex],\n      )\n        ? CubismBlendMode.CubismBlendMode_Multiplicative\n        : CubismBlendMode.CubismBlendMode_Normal;\n  }\n\n  /**\n   * Drawableのマスクの反転使用の取得\n   *\n   * Drawableのマスク使用時の反転設定を取得する。\n   * マスクを使用しない場合は無視される。\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @return Drawableの反転設定\n   */\n  public getDrawableInvertedMaskBit(drawableIndex: number): boolean {\n    const constantFlags: Uint8Array = this._model.drawables.constantFlags;\n\n    return Live2DCubismCore.Utils.hasIsInvertedMaskBit(\n      constantFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * Drawableのクリッピングマスクリストの取得\n   * @return Drawableのクリッピングマスクリスト\n   */\n  public getDrawableMasks(): Int32Array[] {\n    return this._model.drawables.masks;\n  }\n\n  /**\n   * Drawableのクリッピングマスクの個数リストの取得\n   * @return Drawableのクリッピングマスクの個数リスト\n   */\n  public getDrawableMaskCounts(): Int32Array {\n    return this._model.drawables.maskCounts;\n  }\n\n  /**\n   * クリッピングマスクの使用状態\n   *\n   * @return true クリッピングマスクを使用している\n   * @return false クリッピングマスクを使用していない\n   */\n  public isUsingMasking(): boolean {\n    for (let d = 0; d < this._model.drawables.count; ++d) {\n      if (this._model.drawables.maskCounts[d] <= 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Drawableの表示情報を取得する\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @return true Drawableが表示\n   * @return false Drawableが非表示\n   */\n  public getDrawableDynamicFlagIsVisible(drawableIndex: number): boolean {\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasIsVisibleBit(\n      dynamicFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * DrawableのDrawOrderの変化情報の取得\n   *\n   * 直近のCubismModel.update関数でdrawableのdrawOrderが変化したかを取得する。\n   * drawOrderはartMesh上で指定する0から1000の情報\n   * @param drawableIndex drawableのインデックス\n   * @return true drawableの不透明度が直近のCubismModel.update関数で変化した\n   * @return false drawableの不透明度が直近のCubismModel.update関数で変化している\n   */\n  public getDrawableDynamicFlagVisibilityDidChange(\n    drawableIndex: number,\n  ): boolean {\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(\n      dynamicFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * Drawableの不透明度の変化情報の取得\n   *\n   * 直近のCubismModel.update関数でdrawableの不透明度が変化したかを取得する。\n   *\n   * @param drawableIndex drawableのインデックス\n   * @return true Drawableの不透明度が直近のCubismModel.update関数で変化した\n   * @return false Drawableの不透明度が直近のCubismModel.update関数で変化してない\n   */\n  public getDrawableDynamicFlagOpacityDidChange(\n    drawableIndex: number,\n  ): boolean {\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasOpacityDidChangeBit(\n      dynamicFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * Drawableの描画順序の変化情報の取得\n   *\n   * 直近のCubismModel.update関数でDrawableの描画の順序が変化したかを取得する。\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @return true Drawableの描画の順序が直近のCubismModel.update関数で変化した\n   * @return false Drawableの描画の順序が直近のCubismModel.update関数で変化してない\n   */\n  public getDrawableDynamicFlagRenderOrderDidChange(\n    drawableIndex: number,\n  ): boolean {\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(\n      dynamicFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * 保存されたパラメータの読み込み\n   */\n  public loadParameters(): void {\n    let parameterCount: number = this._model.parameters.count;\n    const savedParameterCount: number = this._savedParameters.length;\n\n    if (parameterCount > savedParameterCount) {\n      parameterCount = savedParameterCount;\n    }\n\n    for (let i = 0; i < parameterCount; ++i) {\n      this._parameterValues[i] = this._savedParameters[i];\n    }\n  }\n\n  /**\n   * 初期化する\n   */\n  public initialize(): void {\n    this._parameterValues = this._model.parameters.values;\n    this._partOpacities = this._model.parts.opacities;\n    this._parameterMaximumValues = this._model.parameters.maximumValues;\n    this._parameterMinimumValues = this._model.parameters.minimumValues;\n\n    {\n      const parameterIds: string[] = this._model.parameters.ids;\n      const parameterCount: number = this._model.parameters.count;\n\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterIds.push(parameterIds[i]);\n      }\n    }\n\n    {\n      const partIds: string[] = this._model.parts.ids;\n      const partCount: number = this._model.parts.count;\n\n      for (let i = 0; i < partCount; ++i) {\n        this._partIds.push(partIds[i]);\n      }\n    }\n\n    {\n      const drawableIds: string[] = this._model.drawables.ids;\n      const drawableCount: number = this._model.drawables.count;\n\n      for (let i = 0; i < drawableCount; ++i) {\n        this._drawableIds.push(drawableIds[i]);\n      }\n    }\n  }\n\n  /**\n   * コンストラクタ\n   * @param model モデル\n   */\n  public constructor(model: Live2DCubismCore.Model) {\n    this._model = model;\n    this._savedParameters = [];\n    this._parameterIds = [];\n    this._drawableIds = [];\n    this._partIds = [];\n\n    this._notExistPartId = {};\n    this._notExistParameterId = {};\n    this._notExistParameterValues = {};\n    this._notExistPartOpacities = {};\n\n    this.initialize();\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    this._model.release();\n    (this as any)._model = undefined;\n  }\n\n  private _notExistPartOpacities: Record<number, number>; // 存在していないパーツの不透明度のリスト\n  private _notExistPartId: Record<string, number>; // 存在していないパーツIDのリスト\n\n  private _notExistParameterValues: Record<number, number>; // 存在していないパラメータの値のリスト\n  private _notExistParameterId: Record<string, number>; // 存在していないパラメータIDのリスト\n\n  private _savedParameters: number[]; // 保存されたパラメータ\n\n  private _model: Live2DCubismCore.Model; // モデル\n\n  private _parameterValues!: Float32Array; // パラメータの値のリスト\n  private _parameterMaximumValues!: Float32Array; // パラメータの最大値のリスト\n  private _parameterMinimumValues!: Float32Array; // パラメータの最小値のリスト\n\n  private _partOpacities!: Float32Array; // パーツの不透明度のリスト\n\n  private _parameterIds: string[];\n  private _partIds: string[];\n  private _drawableIds: string[];\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from './cubismmodel';\n\n/**\n * Mocデータの管理\n *\n * Mocデータの管理を行うクラス。\n */\nexport class CubismMoc {\n  /**\n   * Mocデータの作成\n   */\n  public static create(mocBytes: ArrayBuffer): CubismMoc {\n    const moc: Live2DCubismCore.Moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n\n    if (moc) {\n      return new CubismMoc(moc);\n    }\n\n    throw new Error('Unknown error');\n  }\n\n  /**\n   * モデルを作成する\n   *\n   * @return Mocデータから作成されたモデル\n   */\n  createModel(): CubismModel {\n    let cubismModel: CubismModel;\n\n    const model: Live2DCubismCore.Model = Live2DCubismCore.Model.fromMoc(this._moc);\n\n    if (model) {\n      cubismModel = new CubismModel(model);\n\n      ++this._modelCount;\n\n      return cubismModel;\n    }\n\n    throw new Error('Unknown error');\n  }\n\n  /**\n   * モデルを削除する\n   */\n  deleteModel(model: CubismModel): void {\n    if (model != null) {\n      --this._modelCount;\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  private constructor(moc: Live2DCubismCore.Moc) {\n    this._moc = moc;\n    this._modelCount = 0;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    this._moc._release();\n    (this as Partial<this>)._moc = undefined;\n  }\n\n  _moc: Live2DCubismCore.Moc; // Mocデータ\n  _modelCount: number; // Mocデータから作られたモデルの個数\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismVector2 } from '../math/cubismvector2';\n\n/**\n * 物理演算の適用先の種類\n */\nexport enum CubismPhysicsTargetType {\n  CubismPhysicsTargetType_Parameter // パラメータに対して適用\n}\n\n/**\n * 物理演算の入力の種類\n */\nexport enum CubismPhysicsSource {\n  CubismPhysicsSource_X, // X軸の位置から\n  CubismPhysicsSource_Y, // Y軸の位置から\n  CubismPhysicsSource_Angle // 角度から\n}\n\n/**\n * @brief 物理演算で使用する外部の力\n *\n * 物理演算で使用する外部の力。\n */\nexport class PhysicsJsonEffectiveForces {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n\n  gravity: CubismVector2; // 重力\n  wind: CubismVector2; // 風\n}\n\n/**\n * 物理演算のパラメータ情報\n */\nexport interface CubismPhysicsParameter {\n  id: string; // パラメータ\n  targetType: CubismPhysicsTargetType; // 適用先の種類\n}\n\n/**\n * 物理演算の正規化情報\n */\nexport interface CubismPhysicsNormalization {\n  minimum: number; // 最大値\n  maximum: number; // 最小値\n  defalut: number; // デフォルト値\n}\n\n/**\n * 物理演算の演算委使用する物理点の情報\n */\nexport class CubismPhysicsParticle {\n  constructor() {\n    this.initialPosition = new CubismVector2(0, 0);\n    this.position = new CubismVector2(0, 0);\n    this.lastPosition = new CubismVector2(0, 0);\n    this.lastGravity = new CubismVector2(0, 0);\n    this.force = new CubismVector2(0, 0);\n    this.velocity = new CubismVector2(0, 0);\n  }\n\n  initialPosition: CubismVector2; // 初期位置\n  mobility!: number; // 動きやすさ\n  delay!: number; // 遅れ\n  acceleration!: number; // 加速度\n  radius!: number; // 距離\n  position: CubismVector2; // 現在の位置\n  lastPosition: CubismVector2; // 最後の位置\n  lastGravity: CubismVector2; // 最後の重力\n  force: CubismVector2; // 現在かかっている力\n  velocity: CubismVector2; // 現在の速度\n}\n\n/**\n * 物理演算の物理点の管理\n */\nexport class CubismPhysicsSubRig {\n  inputCount!: number; // 入力の個数\n  outputCount!: number; // 出力の個数\n  particleCount!: number; // 物理点の個数\n  baseInputIndex!: number; // 入力の最初のインデックス\n  baseOutputIndex!: number; // 出力の最初のインデックス\n  baseParticleIndex!: number; // 物理点の最初のインデックス\n  normalizationPosition: CubismPhysicsNormalization = {} as any; // 正規化された位置\n  normalizationAngle: CubismPhysicsNormalization = {} as any; // 正規化された角度\n}\n\n/**\n * 正規化されたパラメータの取得関数の宣言\n * @param targetTranslation     // 演算結果の移動値\n * @param targetAngle           // 演算結果の角度\n * @param value                 // パラメータの値\n * @param parameterMinimunValue // パラメータの最小値\n * @param parameterMaximumValue // パラメータの最大値\n * @param parameterDefaultValue // パラメータのデフォルト値\n * @param normalizationPosition // 正規化された位置\n * @param normalizationAngle    // 正規化された角度\n * @param isInverted            // 値が反転されているか？\n * @param weight                // 重み\n */\nexport interface normalizedPhysicsParameterValueGetter {\n  (\n    targetTranslation: CubismVector2,\n    targetAngle: { angle: number },\n    value: number,\n    parameterMinimunValue: number,\n    parameterMaximumValue: number,\n    parameterDefaultValue: number,\n    normalizationPosition: CubismPhysicsNormalization,\n    normalizationAngle: CubismPhysicsNormalization,\n    isInverted: boolean,\n    weight: number,\n  ): void;\n}\n\n/**\n * 物理演算の値の取得関数の宣言\n * @param translation 移動値\n * @param particles 物理点のリスト\n * @param isInverted 値が反映されているか\n * @param parentGravity 重力\n * @return 値\n */\nexport interface physicsValueGetter {\n  (\n    translation: CubismVector2,\n    particles: CubismPhysicsParticle[],\n    particleIndex: number,\n    isInverted: boolean,\n    parentGravity: CubismVector2,\n  ): number;\n}\n\n/**\n * 物理演算のスケールの取得関数の宣言\n * @param translationScale 移動値のスケール\n * @param angleScale    角度のスケール\n * @return スケール値\n */\nexport interface physicsScaleGetter {\n  (translationScale: CubismVector2, angleScale: number): number;\n}\n\n/**\n * 物理演算の入力情報\n */\nexport class CubismPhysicsInput {\n  source: CubismPhysicsParameter = {} as any; // 入力元のパラメータ\n  sourceParameterIndex!: number; // 入力元のパラメータのインデックス\n  weight!: number; // 重み\n  type!: number; // 入力の種類\n  reflect!: boolean; // 値が反転されているかどうか\n  getNormalizedParameterValue!: normalizedPhysicsParameterValueGetter; // 正規化されたパラメータ値の取得関数\n}\n\n/**\n * @brief 物理演算の出力情報\n *\n * 物理演算の出力情報。\n */\nexport class CubismPhysicsOutput {\n  destination: CubismPhysicsParameter = {} as any; // 出力先のパラメータ\n  destinationParameterIndex!: number; // 出力先のパラメータのインデックス\n  vertexIndex!: number; // 振り子のインデックス\n  translationScale = new CubismVector2(0, 0); // 移動値のスケール\n  angleScale!: number; // 角度のスケール\n  weight!: number; // 重み\n  type!: CubismPhysicsSource; // 出力の種類\n  reflect!: boolean; // 値が反転されているかどうか\n  valueBelowMinimum!: number; // 最小値を下回った時の値\n  valueExceededMaximum!: number; // 最大値をこえた時の値\n  getValue!: physicsValueGetter; // 物理演算の値の取得関数\n  getScale!: physicsScaleGetter; // 物理演算のスケール値の取得関数\n}\n\n/**\n * @brief 物理演算のデータ\n *\n * 物理演算のデータ。\n */\nexport class CubismPhysicsRig {\n  constructor() {\n    this.settings = [];\n    this.inputs = [];\n    this.outputs = [];\n    this.particles = [];\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n\n  subRigCount!: number; // 物理演算の物理点の個数\n  settings: CubismPhysicsSubRig[]; // 物理演算の物理点の管理のリスト\n  inputs: CubismPhysicsInput[]; // 物理演算の入力のリスト\n  outputs: CubismPhysicsOutput[]; // 物理演算の出力のリスト\n  particles: CubismPhysicsParticle[]; // 物理演算の物理点のリスト\n  gravity: CubismVector2; // 重力\n  wind: CubismVector2; // 風\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismVector2 } from '../math/cubismvector2';\n\n/**\n * physics3.jsonのコンテナ。\n */\nexport class CubismPhysicsJson {\n  /**\n   * コンストラクタ\n   * @param json physics3.jsonが読み込まれているバッファ\n   */\n  public constructor(json: CubismSpec.PhysicsJSON) {\n    this._json = json;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    (this as Partial<this>)._json = undefined;\n  }\n\n  /**\n   * 重力の取得\n   * @return 重力\n   */\n  public getGravity(): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n    ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n    return ret;\n  }\n\n  /**\n   * 風の取得\n   * @return 風\n   */\n  public getWind(): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Wind.X;\n    ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n    return ret;\n  }\n\n  /**\n   * 物理店の管理の個数の取得\n   * @return 物理店の管理の個数\n   */\n  public getSubRigCount(): number {\n    return this._json.Meta.PhysicsSettingCount;\n  }\n\n  /**\n   * 入力の総合計の取得\n   * @return 入力の総合計\n   */\n  public getTotalInputCount(): number {\n    return this._json.Meta.TotalInputCount;\n  }\n\n  /**\n   * 出力の総合計の取得\n   * @return 出力の総合計\n   */\n  public getTotalOutputCount(): number {\n    return this._json.Meta.TotalOutputCount;\n  }\n\n  /**\n   * 物理点の個数の取得\n   * @return 物理点の個数\n   */\n  public getVertexCount(): number {\n    return this._json.Meta.VertexCount;\n  }\n\n  /**\n   * 正規化された位置の最小値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された位置の最小値\n   */\n  public getNormalizationPositionMinimumValue(\n    physicsSettingIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n  }\n\n  /**\n   * 正規化された位置の最大値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された位置の最大値\n   */\n  public getNormalizationPositionMaximumValue(\n    physicsSettingIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n  }\n\n  /**\n   * 正規化された位置のデフォルト値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された位置のデフォルト値\n   */\n  public getNormalizationPositionDefaultValue(\n    physicsSettingIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n  }\n\n  /**\n   * 正規化された角度の最小値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された角度の最小値\n   */\n  public getNormalizationAngleMinimumValue(\n    physicsSettingIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n  }\n\n  /**\n   * 正規化された角度の最大値の取得\n   * @param physicsSettingIndex\n   * @return 正規化された角度の最大値\n   */\n  public getNormalizationAngleMaximumValue(\n    physicsSettingIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n  }\n\n  /**\n   * 正規化された角度のデフォルト値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された角度のデフォルト値\n   */\n  public getNormalizationAngleDefaultValue(\n    physicsSettingIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n  }\n\n  /**\n   * 入力の個数の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 入力の個数\n   */\n  public getInputCount(physicsSettingIndex: number): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n  }\n\n  /**\n   * 入力の重みの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param inputIndex 入力のインデックス\n   * @return 入力の重み\n   */\n  public getInputWeight(\n    physicsSettingIndex: number,\n    inputIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n  }\n\n  /**\n   * 入力の反転の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param inputIndex 入力のインデックス\n   * @return 入力の反転\n   */\n  public getInputReflect(\n    physicsSettingIndex: number,\n    inputIndex: number,\n  ): boolean {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n  }\n\n  /**\n   * 入力の種類の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param inputIndex 入力のインデックス\n   * @return 入力の種類\n   */\n  public getInputType(\n    physicsSettingIndex: number,\n    inputIndex: number,\n  ): string {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n  }\n\n  /**\n   * 入力元のIDの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param inputIndex 入力のインデックス\n   * @return 入力元のID\n   */\n  public getInputSourceId(\n    physicsSettingIndex: number,\n    inputIndex: number,\n  ): string {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n  }\n\n  /**\n   * 出力の個数の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 出力の個数\n   */\n  public getOutputCount(physicsSettingIndex: number): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n  }\n\n  /**\n   * 出力の物理点のインデックスの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の物理点のインデックス\n   */\n  public getOutputVertexIndex(\n    physicsSettingIndex: number,\n    outputIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n  }\n\n  /**\n   * 出力の角度のスケールを取得する\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の角度のスケール\n   */\n  public getOutputAngleScale(\n    physicsSettingIndex: number,\n    outputIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n  }\n\n  /**\n   * 出力の重みの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の重み\n   */\n  public getOutputWeight(\n    physicsSettingIndex: number,\n    outputIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n  }\n\n  /**\n   * 出力先のIDの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力先のID\n   */\n  public getOutputDestinationId(\n    physicsSettingIndex: number,\n    outputIndex: number,\n  ): string {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n  }\n\n  /**\n   * 出力の種類の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の種類\n   */\n  public getOutputType(\n    physicsSettingIndex: number,\n    outputIndex: number,\n  ): string {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n  }\n\n  /**\n   * 出力の反転の取得\n   * @param physicsSettingIndex 物理演算のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の反転\n   */\n  public getOutputReflect(\n    physicsSettingIndex: number,\n    outputIndex: number,\n  ): boolean {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n  }\n\n  /**\n   * 物理点の個数の取得\n   * @param physicsSettingIndex 物理演算男設定のインデックス\n   * @return 物理点の個数\n   */\n  public getParticleCount(physicsSettingIndex: number): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n  }\n\n  /**\n   * 物理点の動きやすさの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の動きやすさ\n   */\n  public getParticleMobility(\n    physicsSettingIndex: number,\n    vertexIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n  }\n\n  /**\n   * 物理点の遅れの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の遅れ\n   */\n  public getParticleDelay(\n    physicsSettingIndex: number,\n    vertexIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n  }\n\n  /**\n   * 物理点の加速度の取得\n   * @param physicsSettingIndex 物理演算の設定\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の加速度\n   */\n  public getParticleAcceleration(\n    physicsSettingIndex: number,\n    vertexIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n  }\n\n  /**\n   * 物理点の距離の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の距離\n   */\n  public getParticleRadius(\n    physicsSettingIndex: number,\n    vertexIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n  }\n\n  /**\n   * 物理点の位置の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の位置\n   */\n  public getParticlePosition(\n    physicsSettingIndex: number,\n    vertexIndex: number,\n  ): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0, 0);\n    ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n    ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n    return ret;\n  }\n\n  _json: CubismSpec.PhysicsJSON; // physics3.jsonデータ\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismMath } from '../math/cubismmath';\nimport { CubismVector2 } from '../math/cubismvector2';\nimport { CubismModel } from '../model/cubismmodel';\nimport {\n  CubismPhysicsInput,\n  CubismPhysicsNormalization,\n  CubismPhysicsOutput,\n  CubismPhysicsParticle,\n  CubismPhysicsRig,\n  CubismPhysicsSource,\n  CubismPhysicsSubRig,\n  CubismPhysicsTargetType,\n} from './cubismphysicsinternal';\nimport { CubismPhysicsJson } from './cubismphysicsjson';\n\n// physics types tags.\nconst PhysicsTypeTagX = 'X';\nconst PhysicsTypeTagY = 'Y';\nconst PhysicsTypeTagAngle = 'Angle';\n\n// Constant of air resistance.\nconst AirResistance = 5.0;\n\n// Constant of maximum weight of input and output ratio.\nconst MaximumWeight = 100.0;\n\n// Constant of threshold of movement.\nconst MovementThreshold = 0.001;\n\n/**\n * 物理演算クラス\n */\nexport class CubismPhysics {\n  /**\n   * インスタンスの作成\n   * @param json    physics3.jsonが読み込まれているバッファ\n   * @return 作成されたインスタンス\n   */\n  public static create(json: CubismSpec.PhysicsJSON): CubismPhysics {\n    const ret: CubismPhysics = new CubismPhysics();\n\n    ret.parse(json);\n    ret._physicsRig.gravity.y = 0;\n\n    return ret;\n  }\n\n  /**\n   * 物理演算の評価\n   * @param model 物理演算の結果を適用するモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */\n  public evaluate(model: CubismModel, deltaTimeSeconds: number): void {\n    let totalAngle: { angle: number };\n    let weight: number;\n    let radAngle: number;\n    let outputValue: number;\n    const totalTranslation: CubismVector2 = new CubismVector2();\n    let currentSetting: CubismPhysicsSubRig;\n    let currentInput: CubismPhysicsInput[];\n    let currentOutput: CubismPhysicsOutput[];\n    let currentParticles: CubismPhysicsParticle[];\n\n    let parameterValue: Float32Array;\n    let parameterMaximumValue: Float32Array;\n    let parameterMinimumValue: Float32Array;\n    let parameterDefaultValue: Float32Array;\n\n    parameterValue = model.getModel().parameters.values;\n    parameterMaximumValue = model.getModel().parameters.maximumValues;\n    parameterMinimumValue = model.getModel().parameters.minimumValues;\n    parameterDefaultValue = model.getModel().parameters.defaultValues;\n\n    for (\n      let settingIndex = 0;\n      settingIndex < this._physicsRig.subRigCount;\n      ++settingIndex\n    ) {\n      totalAngle = { angle: 0.0 };\n      totalTranslation.x = 0.0;\n      totalTranslation.y = 0.0;\n      currentSetting = this._physicsRig.settings[settingIndex];\n      currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n      currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n      currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n\n      // Load input parameters\n      for (let i = 0; i < currentSetting.inputCount; ++i) {\n        weight = currentInput[i].weight / MaximumWeight;\n\n        if (currentInput[i].sourceParameterIndex == -1) {\n          currentInput[i].sourceParameterIndex = model.getParameterIndex(\n            currentInput[i].source.id,\n          );\n        }\n\n        currentInput[i].getNormalizedParameterValue(\n          totalTranslation,\n          totalAngle,\n          parameterValue[currentInput[i].sourceParameterIndex],\n          parameterMinimumValue[currentInput[i].sourceParameterIndex],\n          parameterMaximumValue[currentInput[i].sourceParameterIndex],\n          parameterDefaultValue[currentInput[i].sourceParameterIndex],\n          currentSetting.normalizationPosition,\n          currentSetting.normalizationAngle,\n          currentInput[i].reflect,\n          weight,\n        );\n      }\n\n      radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n\n      totalTranslation.x =\n        totalTranslation.x * CubismMath.cos(radAngle) -\n        totalTranslation.y * CubismMath.sin(radAngle);\n      totalTranslation.y =\n        totalTranslation.x * CubismMath.sin(radAngle) +\n        totalTranslation.y * CubismMath.cos(radAngle);\n\n      // Calculate particles position.\n      updateParticles(\n        currentParticles,\n        currentSetting.particleCount,\n        totalTranslation,\n        totalAngle.angle,\n        this._options.wind,\n        MovementThreshold * currentSetting.normalizationPosition.maximum,\n        deltaTimeSeconds,\n        AirResistance,\n      );\n\n      // Update output parameters.\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\n        const particleIndex = currentOutput[i].vertexIndex;\n\n        if (\n          particleIndex < 1 ||\n          particleIndex >= currentSetting.particleCount\n        ) {\n          break;\n        }\n\n        if (currentOutput[i].destinationParameterIndex == -1) {\n          currentOutput[\n            i\n            ].destinationParameterIndex = model.getParameterIndex(\n            currentOutput[i].destination.id,\n          );\n        }\n\n        const translation: CubismVector2 = new CubismVector2();\n        translation.x =\n          currentParticles[particleIndex].position.x -\n          currentParticles[particleIndex - 1].position.x;\n        translation.y =\n          currentParticles[particleIndex].position.y -\n          currentParticles[particleIndex - 1].position.y;\n\n        outputValue = currentOutput[i].getValue(\n          translation,\n          currentParticles,\n          particleIndex,\n          currentOutput[i].reflect,\n          this._options.gravity,\n        );\n\n        const destinationParameterIndex: number =\n          currentOutput[i].destinationParameterIndex;\n        const outParameterValue: Float32Array =\n          !Float32Array.prototype.slice &&\n          'subarray' in Float32Array.prototype\n            ? JSON.parse(\n            JSON.stringify(\n              parameterValue.subarray(destinationParameterIndex),\n            ),\n            ) // 値渡しするため、JSON.parse, JSON.stringify\n            : parameterValue.slice(destinationParameterIndex);\n\n        updateOutputParameterValue(\n          outParameterValue,\n          parameterMinimumValue[destinationParameterIndex],\n          parameterMaximumValue[destinationParameterIndex],\n          outputValue,\n          currentOutput[i],\n        );\n\n        // 値を反映\n        for (\n          let offset: number = destinationParameterIndex, outParamIndex = 0;\n          offset < parameterValue.length;\n          offset++, outParamIndex++\n        ) {\n          parameterValue[offset] = outParameterValue[outParamIndex];\n        }\n      }\n    }\n  }\n\n  /**\n   * オプションの設定\n   * @param options オプション\n   */\n  public setOptions(options: Options): void {\n    this._options = options;\n  }\n\n  /**\n   * オプションの取得\n   * @return オプション\n   */\n  public getOption(): Options {\n    return this._options;\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    // set default options\n    this._options = new Options();\n    this._options.gravity.y = -1.0;\n    this._options.gravity.x = 0;\n    this._options.wind.x = 0;\n    this._options.wind.y = 0;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    (this as Partial<this>)._physicsRig = undefined;\n  }\n\n  /**\n   * physics3.jsonをパースする。\n   * @param physicsJson physics3.jsonが読み込まれているバッファ\n   */\n  public parse(physicsJson: CubismSpec.PhysicsJSON): void {\n    this._physicsRig = new CubismPhysicsRig();\n\n    let json: CubismPhysicsJson = new CubismPhysicsJson(physicsJson);\n\n    this._physicsRig.gravity = json.getGravity();\n    this._physicsRig.wind = json.getWind();\n    this._physicsRig.subRigCount = json.getSubRigCount();\n\n    let inputIndex = 0,\n      outputIndex = 0,\n      particleIndex = 0;\n\n    for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n      const setting = new CubismPhysicsSubRig();\n\n      setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n      setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n      setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n      setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n      setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n      setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n\n      // Input\n      setting.inputCount = json.getInputCount(i);\n      setting.baseInputIndex = inputIndex;\n      inputIndex += setting.inputCount;\n\n      for (let j = 0; j < setting.inputCount; ++j) {\n        const input = new CubismPhysicsInput();\n\n        input.sourceParameterIndex = -1;\n        input.weight = json.getInputWeight(i, j);\n        input.reflect = json.getInputReflect(i, j);\n\n        switch (json.getInputType(i, j)) {\n          case PhysicsTypeTagX:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n            break;\n\n          case PhysicsTypeTagY:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n            break;\n\n          case PhysicsTypeTagAngle:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n            break;\n        }\n\n        input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        input.source.id = json.getInputSourceId(i, j);\n\n        this._physicsRig.inputs.push(input);\n      }\n\n      // Output\n      setting.outputCount = json.getOutputCount(i);\n      setting.baseOutputIndex = outputIndex;\n      outputIndex += setting.outputCount;\n\n      for (let j = 0; j < setting.outputCount; ++j) {\n        const output = new CubismPhysicsOutput();\n\n        output.destinationParameterIndex = -1;\n        output.vertexIndex = json.getOutputVertexIndex(i, j);\n        output.angleScale = json.getOutputAngleScale(i, j);\n        output.weight = json.getOutputWeight(i, j);\n        output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n\n        output.destination.id = json.getOutputDestinationId(i, j);\n\n        switch (json.getOutputType(i, j)) {\n          case PhysicsTypeTagX:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            output.getValue = getOutputTranslationX;\n            output.getScale = getOutputScaleTranslationX;\n            break;\n\n          case PhysicsTypeTagY:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            output.getValue = getOutputTranslationY;\n            output.getScale = getOutputScaleTranslationY;\n            break;\n\n          case PhysicsTypeTagAngle:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            output.getValue = getOutputAngle;\n            output.getScale = getOutputScaleAngle;\n            break;\n        }\n\n        output.reflect = json.getOutputReflect(i, j);\n\n        this._physicsRig.outputs.push(output);\n      }\n\n      // Particle\n      setting.particleCount = json.getParticleCount(i);\n      setting.baseParticleIndex = particleIndex;\n      particleIndex += setting.particleCount;\n\n      for (let j = 0; j < setting.particleCount; ++j) {\n        const particle = new CubismPhysicsParticle();\n\n        particle.mobility = json.getParticleMobility(i, j);\n        particle.delay = json.getParticleDelay(i, j);\n        particle.acceleration = json.getParticleAcceleration(i, j);\n        particle.radius = json.getParticleRadius(i, j);\n        particle.position = json.getParticlePosition(i, j);\n\n        this._physicsRig.particles.push(particle);\n      }\n\n      this._physicsRig.settings.push(setting);\n    }\n\n    this.initialize();\n\n    json.release();\n  }\n\n  /**\n   * 初期化する\n   */\n  public initialize(): void {\n    let strand: CubismPhysicsParticle[];\n    let currentSetting: CubismPhysicsSubRig;\n    let radius: CubismVector2;\n\n    for (\n      let settingIndex = 0;\n      settingIndex < this._physicsRig.subRigCount;\n      ++settingIndex\n    ) {\n      currentSetting = this._physicsRig.settings[settingIndex];\n      strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n\n      // Initialize the top of particle.\n      strand[0].initialPosition = new CubismVector2(0.0, 0.0);\n      strand[0].lastPosition = new CubismVector2(\n        strand[0].initialPosition.x,\n        strand[0].initialPosition.y,\n      );\n      strand[0].lastGravity = new CubismVector2(0.0, -1.0);\n      strand[0].lastGravity.y *= -1.0;\n      strand[0].velocity = new CubismVector2(0.0, 0.0);\n      strand[0].force = new CubismVector2(0.0, 0.0);\n\n      // Initialize paritcles.\n      for (let i = 1; i < currentSetting.particleCount; ++i) {\n        radius = new CubismVector2(0.0, 0.0);\n        radius.y = strand[i].radius;\n        strand[i].initialPosition = new CubismVector2(\n          strand[i - 1].initialPosition.x + radius.x,\n          strand[i - 1].initialPosition.y + radius.y,\n        );\n        strand[i].position = new CubismVector2(\n          strand[i].initialPosition.x,\n          strand[i].initialPosition.y,\n        );\n        strand[i].lastPosition = new CubismVector2(\n          strand[i].initialPosition.x,\n          strand[i].initialPosition.y,\n        );\n        strand[i].lastGravity = new CubismVector2(0.0, -1.0);\n        strand[i].lastGravity.y *= -1.0;\n        strand[i].velocity = new CubismVector2(0.0, 0.0);\n        strand[i].force = new CubismVector2(0.0, 0.0);\n      }\n    }\n  }\n\n  _physicsRig!: CubismPhysicsRig; // 物理演算のデータ\n  _options: Options; // オプション\n}\n\n/**\n * 物理演算のオプション\n */\nexport class Options {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n\n  gravity: CubismVector2; // 重力方向\n  wind: CubismVector2; // 風の方向\n}\n\nfunction getInputTranslationXFromNormalizedParameterValue(\n  targetTranslation: CubismVector2,\n  targetAngle: { angle: number },\n  value: number,\n  parameterMinimumValue: number,\n  parameterMaximumValue: number,\n  parameterDefaultValue: number,\n  normalizationPosition: CubismPhysicsNormalization,\n  normalizationAngle: CubismPhysicsNormalization,\n  isInverted: boolean,\n  weight: number,\n): void {\n  targetTranslation.x +=\n    normalizeParameterValue(\n      value,\n      parameterMinimumValue,\n      parameterMaximumValue,\n      parameterDefaultValue,\n      normalizationPosition.minimum,\n      normalizationPosition.maximum,\n      normalizationPosition.defalut,\n      isInverted,\n    ) * weight;\n}\n\nfunction getInputTranslationYFromNormalizedParamterValue(\n  targetTranslation: CubismVector2,\n  targetAngle: { angle: number },\n  value: number,\n  parameterMinimumValue: number,\n  parameterMaximumValue: number,\n  parameterDefaultValue: number,\n  normalizationPosition: CubismPhysicsNormalization,\n  normalizationAngle: CubismPhysicsNormalization,\n  isInverted: boolean,\n  weight: number,\n): void {\n  targetTranslation.y +=\n    normalizeParameterValue(\n      value,\n      parameterMinimumValue,\n      parameterMaximumValue,\n      parameterDefaultValue,\n      normalizationPosition.minimum,\n      normalizationPosition.maximum,\n      normalizationPosition.defalut,\n      isInverted,\n    ) * weight;\n}\n\nfunction getInputAngleFromNormalizedParameterValue(\n  targetTranslation: CubismVector2,\n  targetAngle: { angle: number },\n  value: number,\n  parameterMinimumValue: number,\n  parameterMaximumValue: number,\n  parameterDefaultValue: number,\n  normalizaitionPosition: CubismPhysicsNormalization,\n  normalizationAngle: CubismPhysicsNormalization,\n  isInverted: boolean,\n  weight: number,\n): void {\n  targetAngle.angle +=\n    normalizeParameterValue(\n      value,\n      parameterMinimumValue,\n      parameterMaximumValue,\n      parameterDefaultValue,\n      normalizationAngle.minimum,\n      normalizationAngle.maximum,\n      normalizationAngle.defalut,\n      isInverted,\n    ) * weight;\n}\n\nfunction getOutputTranslationX(\n  translation: CubismVector2,\n  particles: CubismPhysicsParticle[],\n  particleIndex: number,\n  isInverted: boolean,\n  parentGravity: CubismVector2,\n): number {\n  let outputValue: number = translation.x;\n\n  if (isInverted) {\n    outputValue *= -1.0;\n  }\n\n  return outputValue;\n}\n\nfunction getOutputTranslationY(\n  translation: CubismVector2,\n  particles: CubismPhysicsParticle[],\n  particleIndex: number,\n  isInverted: boolean,\n  parentGravity: CubismVector2,\n): number {\n  let outputValue: number = translation.y;\n\n  if (isInverted) {\n    outputValue *= -1.0;\n  }\n  return outputValue;\n}\n\nfunction getOutputAngle(\n  translation: CubismVector2,\n  particles: CubismPhysicsParticle[],\n  particleIndex: number,\n  isInverted: boolean,\n  parentGravity: CubismVector2,\n): number {\n  let outputValue: number;\n\n  if (particleIndex >= 2) {\n    parentGravity = particles[particleIndex - 1].position.substract(\n      particles[particleIndex - 2].position,\n    );\n  } else {\n    parentGravity = parentGravity.multiplyByScaler(-1.0);\n  }\n\n  outputValue = CubismMath.directionToRadian(parentGravity, translation);\n\n  if (isInverted) {\n    outputValue *= -1.0;\n  }\n\n  return outputValue;\n}\n\nfunction getRangeValue(min: number, max: number): number {\n  return Math.abs(Math.max(min, max) - Math.min(min, max));\n}\n\nfunction getDefaultValue(min: number, max: number): number {\n  const minValue: number = Math.min(min, max);\n  return minValue + getRangeValue(min, max) / 2.0;\n}\n\nfunction getOutputScaleTranslationX(\n  translationScale: CubismVector2,\n  angleScale: number,\n): number {\n  return translationScale.x;\n}\n\nfunction getOutputScaleTranslationY(\n  translationScale: CubismVector2,\n  angleScale: number,\n): number {\n  return translationScale.y;\n}\n\nfunction getOutputScaleAngle(\n  translationScale: CubismVector2,\n  angleScale: number,\n): number {\n  return angleScale;\n}\n\n/**\n * Updates particles.\n *\n * @param strand                Target array of particle.\n * @param strandCount           Count of particle.\n * @param totalTranslation      Total translation value.\n * @param totalAngle            Total angle.\n * @param windDirection         Direction of Wind.\n * @param thresholdValue        Threshold of movement.\n * @param deltaTimeSeconds      Delta time.\n * @param airResistance         Air resistance.\n */\nfunction updateParticles(\n  strand: CubismPhysicsParticle[],\n  strandCount: number,\n  totalTranslation: CubismVector2,\n  totalAngle: number,\n  windDirection: CubismVector2,\n  thresholdValue: number,\n  deltaTimeSeconds: number,\n  airResistance: number,\n) {\n  let totalRadian: number;\n  let delay: number;\n  let radian: number;\n  let currentGravity: CubismVector2;\n  let direction: CubismVector2 = new CubismVector2(0.0, 0.0);\n  let velocity: CubismVector2 = new CubismVector2(0.0, 0.0);\n  let force: CubismVector2 = new CubismVector2(0.0, 0.0);\n  let newDirection: CubismVector2 = new CubismVector2(0.0, 0.0);\n\n  strand[0].position = new CubismVector2(\n    totalTranslation.x,\n    totalTranslation.y,\n  );\n\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\n  currentGravity = CubismMath.radianToDirection(totalRadian);\n  currentGravity.normalize();\n\n  for (let i = 1; i < strandCount; ++i) {\n    strand[i].force = currentGravity\n      .multiplyByScaler(strand[i].acceleration)\n      .add(windDirection);\n\n    strand[i].lastPosition = new CubismVector2(\n      strand[i].position.x,\n      strand[i].position.y,\n    );\n\n    delay = strand[i].delay * deltaTimeSeconds * 30.0;\n\n    direction = strand[i].position.substract(strand[i - 1].position);\n\n    radian =\n      CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) /\n      airResistance;\n\n    direction.x =\n      CubismMath.cos(radian) * direction.x -\n      direction.y * CubismMath.sin(radian);\n    direction.y =\n      CubismMath.sin(radian) * direction.x +\n      direction.y * CubismMath.cos(radian);\n\n    strand[i].position = strand[i - 1].position.add(direction);\n\n    velocity = strand[i].velocity.multiplyByScaler(delay);\n    force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n\n    strand[i].position = strand[i].position.add(velocity).add(force);\n\n    newDirection = strand[i].position.substract(strand[i - 1].position);\n    newDirection.normalize();\n\n    strand[i].position = strand[i - 1].position.add(\n      newDirection.multiplyByScaler(strand[i].radius),\n    );\n\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n      strand[i].position.x = 0.0;\n    }\n\n    if (delay != 0.0) {\n      strand[i].velocity = strand[i].position.substract(\n        strand[i].lastPosition,\n      );\n      strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n      strand[i].velocity = strand[i].velocity.multiplyByScaler(\n        strand[i].mobility,\n      );\n    }\n\n    strand[i].force = new CubismVector2(0.0, 0.0);\n    strand[i].lastGravity = new CubismVector2(\n      currentGravity.x,\n      currentGravity.y,\n    );\n  }\n}\n\n/**\n * Updates output parameter value.\n * @param parameterValue            Target parameter value.\n * @param parameterValueMinimum     Minimum of parameter value.\n * @param parameterValueMaximum     Maximum of parameter value.\n * @param translation               Translation value.\n */\nfunction updateOutputParameterValue(\n  parameterValue: Float32Array,\n  parameterValueMinimum: number,\n  parameterValueMaximum: number,\n  translation: number,\n  output: CubismPhysicsOutput,\n): void {\n  let outputScale: number;\n  let value: number;\n  let weight: number;\n\n  outputScale = output.getScale(output.translationScale, output.angleScale);\n\n  value = translation * outputScale;\n\n  if (value < parameterValueMinimum) {\n    if (value < output.valueBelowMinimum) {\n      output.valueBelowMinimum = value;\n    }\n\n    value = parameterValueMinimum;\n  } else if (value > parameterValueMaximum) {\n    if (value > output.valueExceededMaximum) {\n      output.valueExceededMaximum = value;\n    }\n\n    value = parameterValueMaximum;\n  }\n\n  weight = output.weight / MaximumWeight;\n\n  if (weight >= 1.0) {\n    parameterValue[0] = value;\n  } else {\n    value = parameterValue[0] * (1.0 - weight) + value * weight;\n    parameterValue[0] = value;\n  }\n}\n\nfunction normalizeParameterValue(\n  value: number,\n  parameterMinimum: number,\n  parameterMaximum: number,\n  parameterDefault: number,\n  normalizedMinimum: number,\n  normalizedMaximum: number,\n  normalizedDefault: number,\n  isInverted: boolean,\n) {\n  let result = 0.0;\n\n  const maxValue: number = CubismMath.max(parameterMaximum, parameterMinimum);\n\n  if (maxValue < value) {\n    value = maxValue;\n  }\n\n  const minValue: number = CubismMath.min(parameterMaximum, parameterMinimum);\n\n  if (minValue > value) {\n    value = minValue;\n  }\n\n  const minNormValue: number = CubismMath.min(\n    normalizedMinimum,\n    normalizedMaximum,\n  );\n  const maxNormValue: number = CubismMath.max(\n    normalizedMinimum,\n    normalizedMaximum,\n  );\n  const middleNormValue: number = normalizedDefault;\n\n  const middleValue: number = getDefaultValue(minValue, maxValue);\n  const paramValue: number = value - middleValue;\n\n  switch (Math.sign(paramValue)) {\n    case 1: {\n      const nLength: number = maxNormValue - middleNormValue;\n      const pLength: number = maxValue - middleValue;\n\n      if (pLength != 0.0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n\n      break;\n    }\n    case -1: {\n      const nLength: number = minNormValue - middleNormValue;\n      const pLength: number = minValue - middleValue;\n\n      if (pLength != 0.0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n\n      break;\n    }\n    case 0: {\n      result = middleNormValue;\n\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  return isInverted ? result : result * -1.0;\n}\n","import { Cubism4InternalModel } from '@/cubism4/Cubism4InternalModel';\nimport { Cubism4ModelSettings } from '@/cubism4/Cubism4ModelSettings';\nimport { cubism4Ready } from '@/cubism4/setup';\nimport { Live2DFactory, Live2DFactoryOptions } from '@/factory/Live2DFactory';\nimport { CubismPose } from '@cubism/effect/cubismpose';\nimport { CubismMoc } from '@cubism/model/cubismmoc';\nimport { CubismModel } from '@cubism/model/cubismmodel';\nimport { CubismPhysics } from '@cubism/physics/cubismphysics';\nimport { config } from '@/config';\nimport { config as cubism4Config } from '@cubism/config';\n\nconfig.cubism4 = cubism4Config;\n\nLive2DFactory.registerRuntime({\n    version: 4,\n\n    ready: cubism4Ready,\n\n    test(source: any): boolean {\n        return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n    },\n\n    isValidMoc(modelData: ArrayBuffer): boolean {\n        if (modelData.byteLength < 4) {\n            return false;\n        }\n\n        const view = new Int8Array(modelData, 0, 4);\n\n        return String.fromCharCode(...view) === 'MOC3';\n    },\n\n    createModelSettings(json: object): Cubism4ModelSettings {\n        return new Cubism4ModelSettings(json as CubismSpec.ModelJSON & { url: string });\n    },\n\n    createCoreModel(data: ArrayBuffer): CubismModel {\n        const moc = CubismMoc.create(data);\n\n        try {\n            const model = moc.createModel();\n\n            // store the moc instance so we can reference it later\n            (model as any).__moc = moc;\n\n            return model;\n        } catch (e) {\n            try {\n                moc.release();\n            } catch (ignored) {\n            }\n\n            throw e;\n        }\n    },\n\n    createInternalModel(coreModel: CubismModel, settings: Cubism4ModelSettings, options?: Live2DFactoryOptions): Cubism4InternalModel {\n        const model = new Cubism4InternalModel(coreModel, settings, options);\n\n        const coreModelWithMoc = coreModel as { __moc?: CubismMoc };\n\n        if (coreModelWithMoc.__moc) {\n            // transfer the moc to InternalModel, because the coreModel will\n            // probably have been set to undefined when we receive the \"destroy\" event\n            (model as any).__moc = coreModelWithMoc.__moc;\n\n            delete coreModelWithMoc.__moc;\n\n            // release the moc when destroying\n            model.once('destroy', releaseMoc);\n        }\n\n        return model;\n    },\n\n    createPhysics(coreModel: CubismModel, data: any): CubismPhysics {\n        return CubismPhysics.create(data);\n    },\n\n    createPose(coreModel: CubismModel, data: any): CubismPose {\n        return CubismPose.create(data);\n    },\n});\n\nfunction releaseMoc(this: Cubism4InternalModel) {\n    ((this as any).__moc as CubismMoc | undefined)?.release();\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nexport class CubismModelUserDataJson {\n  /**\n   * コンストラクタ\n   * @param json    userdata3.jsonが読み込まれているバッファ\n   * @param size      バッファのサイズ\n   */\n  public constructor(json: CubismSpec.UserDataJSON, size: number) {\n    this._json = json;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    (this as any)._json = undefined;\n  }\n\n  /**\n   * ユーザーデータ個数の取得\n   * @return ユーザーデータの個数\n   */\n  public getUserDataCount(): number {\n    return this._json.Meta.UserDataCount;\n  }\n\n  /**\n   * ユーザーデータ総文字列数の取得\n   *\n   * @return ユーザーデータ総文字列数\n   */\n  public getTotalUserDataSize(): number {\n    return this._json.Meta.TotalUserDataSize;\n  }\n\n  /**\n   * ユーザーデータのタイプの取得\n   *\n   * @return ユーザーデータのタイプ\n   */\n  public getUserDataTargetType(i: number): string {\n    return this._json.UserData[i].Target;\n  }\n\n  /**\n   * ユーザーデータのターゲットIDの取得\n   *\n   * @param i インデックス\n   * @return ユーザーデータターゲットID\n   */\n  public getUserDataId(i: number): string {\n    return this._json.UserData[i].Id;\n  }\n\n  /**\n   * ユーザーデータの文字列の取得\n   *\n   * @param i インデックス\n   * @return ユーザーデータ\n   */\n  public getUserDataValue(i: number): string {\n    return this._json.UserData[i].Value;\n  }\n\n  private _json: CubismSpec.UserDataJSON;\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModelUserDataJson } from './cubismmodeluserdatajson';\n\nconst ArtMesh = 'ArtMesh';\n\n/**\n * ユーザーデータインターフェース\n *\n * Jsonから読み込んだユーザーデータを記録しておくための構造体\n */\nexport interface CubismModelUserDataNode {\n  targetType: string; // ユーザーデータターゲットタイプ\n  targetId: string; // ユーザーデータターゲットのID\n  value: string; // ユーザーデータ\n}\n\n/**\n * ユーザデータの管理クラス\n *\n * ユーザデータをロード、管理、検索インターフェイス、解放までを行う。\n */\nexport class CubismModelUserData {\n  /**\n   * インスタンスの作成\n   *\n   * @param json    userdata3.jsonが読み込まれているバッファ\n   * @param size      バッファのサイズ\n   * @return 作成されたインスタンス\n   */\n  public static create(\n    json: CubismSpec.UserDataJSON,\n    size: number,\n  ): CubismModelUserData {\n    const ret: CubismModelUserData = new CubismModelUserData();\n\n    ret.parseUserData(json, size);\n\n    return ret;\n  }\n\n  /**\n   * ArtMeshのユーザーデータのリストの取得\n   *\n   * @return ユーザーデータリスト\n   */\n  public getArtMeshUserDatas(): CubismModelUserDataNode[] {\n    return this._artMeshUserDataNode;\n  }\n\n  /**\n   * userdata3.jsonのパース\n   *\n   * @param data    userdata3.jsonが読み込まれているバッファ\n   * @param size      バッファのサイズ\n   */\n  public parseUserData(data: CubismSpec.UserDataJSON, size: number): void {\n    let json: CubismModelUserDataJson = new CubismModelUserDataJson(data, size);\n\n    const typeOfArtMesh = ArtMesh;\n    const nodeCount: number = json.getUserDataCount();\n\n    for (let i = 0; i < nodeCount; i++) {\n      const addNode: CubismModelUserDataNode = {\n        targetId: json.getUserDataId(i),\n        targetType: json.getUserDataTargetType(i),\n        value: json.getUserDataValue(i),\n      };\n\n      this._userDataNodes.push(addNode);\n\n      if (addNode.targetType == typeOfArtMesh) {\n        this._artMeshUserDataNode.push(addNode);\n      }\n    }\n\n    json.release();\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._userDataNodes = [];\n    this._artMeshUserDataNode = [];\n  }\n\n  /**\n   * デストラクタ相当の処理\n   *\n   * ユーザーデータ構造体配列を解放する\n   */\n  public release(): void {\n    (this as any)._userDataNodes = null;\n  }\n\n  private _userDataNodes: CubismModelUserDataNode[]; // ユーザーデータ構造体配列\n  private _artMeshUserDataNode: CubismModelUserDataNode[]; // 閲覧リストの保持\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from '../model/cubismmodel';\nimport { ACubismMotion } from './acubismmotion';\nimport { CubismMotionQueueEntryHandle, CubismMotionQueueManager } from './cubismmotionqueuemanager';\n\n/**\n * モーションの管理\n *\n * モーションの管理を行うクラス\n */\nexport class CubismMotionManager extends CubismMotionQueueManager {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    super();\n    this._currentPriority = 0;\n    this._reservePriority = 0;\n  }\n\n  /**\n   * 再生中のモーションの優先度の取得\n   * @return  モーションの優先度\n   */\n  public getCurrentPriority(): number {\n    return this._currentPriority;\n  }\n\n  /**\n   * 予約中のモーションの優先度を取得する。\n   * @return  モーションの優先度\n   */\n  public getReservePriority(): number {\n    return this._reservePriority;\n  }\n\n  /**\n   * 予約中のモーションの優先度を設定する。\n   * @param   val     優先度\n   */\n  public setReservePriority(val: number): void {\n    this._reservePriority = val;\n  }\n\n  /**\n   * 優先度を設定してモーションを開始する。\n   *\n   * @param motion          モーション\n   * @param autoDelete      再生が狩猟したモーションのインスタンスを削除するならtrue\n   * @param priority        優先度\n   * @return                開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するIsFinished()の引数で使用する。開始できない時は「-1」\n   */\n  public startMotionPriority(\n    motion: ACubismMotion,\n    autoDelete: boolean,\n    priority: number,\n  ): CubismMotionQueueEntryHandle {\n    if (priority == this._reservePriority) {\n      this._reservePriority = 0; // 予約を解除\n    }\n\n    this._currentPriority = priority; // 再生中モーションの優先度を設定\n\n    return super.startMotion(motion, autoDelete, this._userTimeSeconds);\n  }\n\n  /**\n   * モーションを更新して、モデルにパラメータ値を反映する。\n   *\n   * @param model   対象のモデル\n   * @param deltaTimeSeconds    デルタ時間[秒]\n   * @return  true    更新されている\n   * @return  false   更新されていない\n   */\n  public updateMotion(model: CubismModel, deltaTimeSeconds: number): boolean {\n    this._userTimeSeconds += deltaTimeSeconds;\n\n    const updated: boolean = super.doUpdateMotion(\n      model,\n      this._userTimeSeconds,\n    );\n\n    if (this.isFinished()) {\n      this._currentPriority = 0; // 再生中のモーションの優先度を解除\n    }\n\n    return updated;\n  }\n\n  /**\n   * モーションを予約する。\n   *\n   * @param   priority    優先度\n   * @return  true    予約できた\n   * @return  false   予約できなかった\n   */\n  public reserveMotion(priority: number): boolean {\n    if (\n      priority <= this._reservePriority ||\n      priority <= this._currentPriority\n    ) {\n      return false;\n    }\n\n    this._reservePriority = priority;\n\n    return true;\n  }\n\n  _currentPriority: number; // 現在再生中のモーションの優先度\n  _reservePriority: number; // 再生予定のモーションの優先度。再生中は0になる。モーションファイルを別スレッドで読み込むときの機能。\n}\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__5072__","__WEBPACK_EXTERNAL_MODULE__4893__","__WEBPACK_EXTERNAL_MODULE__8704__","__WEBPACK_EXTERNAL_MODULE__8623__","__WEBPACK_EXTERNAL_MODULE__5417__","__WEBPACK_EXTERNAL_MODULE__5888__","DataView","getNative","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","entries","index","length","this","clear","entry","set","prototype","get","has","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","Promise","Set","setCacheAdd","setCacheHas","SetCache","values","__data__","add","push","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","data","size","Symbol","Uint8Array","WeakMap","func","thisArg","args","call","apply","array","predicate","resIndex","result","value","baseTimes","isArguments","isArray","isBuffer","isIndex","isTypedArray","hasOwnProperty","Object","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","key","iteratee","Array","offset","eq","defineProperty","object","fromIndex","fromRight","baseFor","createBaseFor","keys","castPath","toKey","path","undefined","arrayPush","keysFunc","symbolsFunc","getRawTag","objectToString","symToStringTag","toStringTag","baseFindIndex","baseIsNaN","strictIndexOf","comparator","baseGetTag","isObjectLike","baseIsEqualDeep","baseIsEqual","other","bitmask","customizer","stack","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","source","matchData","noCustomizer","objValue","srcValue","COMPARE_PARTIAL_FLAG","isFunction","isMasked","isObject","toSource","reIsHostCtor","funcProto","Function","objectProto","funcToString","toString","reIsNative","RegExp","replace","test","isLength","typedArrayTags","baseMatches","baseMatchesProperty","identity","property","isPrototype","nativeKeys","baseIsMatch","getMatchData","matchesStrictComparable","hasIn","isKey","isStrictComparable","baseGet","arrayMap","baseIndexOf","baseIndexOfWith","baseUnary","copyArray","splice","indexOf","seen","computed","overRest","setToString","start","constant","baseSetToString","string","n","isSymbol","symbolProto","symbolToString","baseToString","cache","stringToPath","coreJsData","iterable","props","e","arraySome","cacheHas","isPartial","arrLength","othLength","arrStacked","othStacked","arrValue","othValue","compared","othIndex","mapToArray","setToArray","symbolValueOf","valueOf","tag","byteLength","byteOffset","buffer","name","message","convert","stacked","getAllKeys","objProps","objLength","objStacked","skipCtor","objCtor","constructor","othCtor","freeGlobal","g","baseGetAllKeys","getSymbols","isKeyable","map","baseIsNative","getValue","nativeObjectToString","isOwn","unmasked","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","symbol","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","resolve","Ctor","ctorString","hasFunc","nativeCreate","reIsUint","type","reIsDeepProp","reIsPlainProp","uid","maskSrcKey","exec","IE_PROTO","assocIndexOf","pop","getMapData","forEach","memoize","overArg","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","binding","transform","arg","nativeMax","Math","max","arguments","otherArgs","freeSelf","shortOut","nativeNow","Date","now","count","lastCalled","stamp","remaining","pairs","LARGE_ARRAY_SIZE","memoizeCapped","rePropName","reEscapeChar","charCodeAt","match","number","quote","subString","defaultValue","baseHasIn","hasPath","baseIsArguments","stubFalse","Buffer","baseIsTypedArray","nodeIsTypedArray","arrayLikeKeys","baseKeys","isArrayLike","baseAssignValue","baseForOwn","baseIteratee","resolver","TypeError","memoized","Cache","baseProperty","basePropertyDeep","pull","baseRest","basePullAll","window","Live2DCubismCore","Error","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","d","a","definition","o","enumerable","globalThis","obj","prop","r","nmd","paths","children","LOGICAL_WIDTH","LOGICAL_HEIGHT","config","LOG_LEVEL_VERBOSE","LOG_LEVEL_WARNING","LOG_LEVEL_ERROR","LOG_LEVEL_NONE","logLevel","sound","motionSync","motionFadingDuration","idleMotionFadingDuration","expressionFadingDuration","VERSION","logger","clamp","num","lower","upper","rand","min","random","copyProperty","from","to","fromKey","filter","item","applyMixins","derivedCtor","baseCtors","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","folderName","url","lastSlashIndex","lastIndexOf","slice","log","messages","console","warn","error","MotionPriority","ExpressionManager","EventEmitter","settings","options","super","expressions","reserveExpressionIndex","destroyed","init","defaultExpression","createExpression","currentExpression","stopAllExpressions","loadExpression","definitions","expression","_loadExpression","setRandomExpression","availableIndices","i","floor","setExpression","resetExpression","_setExpression","restoreExpression","getExpressionIndex","update","model","isFinished","updateParameters","destroy","emit","FocusController","targetX","targetY","x","y","vx","vy","focus","instant","dt","dx","dy","abs","sqrt","maxSpeed","ax","ay","maxA","v","maxV","ModelSettings","json","resolveURL","replaceFiles","replacer","moc","pose","physics","textures","getDefinedFiles","files","file","validateFiles","assertFileExists","expectedFile","shouldThrow","actualPath","includes","texture","MotionState","debug","currentPriority","NONE","reservePriority","reserve","group","priority","currentGroup","currentIndex","dump","reservedGroup","reservedIndex","reservedIdleGroup","reservedIdleIndex","IDLE","setReservedIdle","FORCE","setReserved","motion","setCurrent","complete","isActive","reset","shouldRequestIdleMotion","shouldOverrideExpression","requestedGroup","requestedIndex","join","SoundManager","volume","_volume","audios","audio","static","onFinish","onError","Audio","preload","addEventListener","dispose","reject","play","catch","dispatchEvent","ErrorEvent","readyState","HAVE_ENOUGH_DATA","pause","removeAttribute","MotionPreloadStrategy","MotionManager","motionGroups","state","playing","idleMotionGroup","groups","idle","setupMotions","stopAllMotions","motionPreload","ALL","loadMotion","then","_loadMotion","startMotion","NORMAL","currentAudio","soundURL","getSoundFile","readyToPlay","src","getMotionName","expressionManager","_startMotion","startRandomMotion","groupDefs","_stopAllMotions","tempBounds","width","height","InternalModel","focusController","originalWidth","originalHeight","localTransform","Matrix","drawingMatrix","hitAreas","textureFlipY","viewport","setupLayout","setupHitAreas","getSize","layout","assign","getLayout","scale","offsetX","centerX","left","right","offsetY","centerY","top","bottom","translate","getHitAreaDefs","hitArea","def","hitTest","hitAreaName","isHit","drawIndex","bounds","getDrawableBounds","vertices","getDrawableVertices","updateTransform","copyFrom","append","motionManager","NetworkError","status","aborted","XHRLoader","target","onload","onerror","xhr","XMLHttpRequest","allXhrSet","xhrSet","xhrMap","listeners","cancelXHRs","once","open","responseType","response","onabort","onloadend","delete","abort","runMiddlewares","middleware","context","dispatch","err","fn","bind","loader","next","createXHR","send","Live2DLoader","middlewares","urlToJSON","load","live2dModel","jsonToSettings","runtime","Live2DFactory","findRuntime","createModelSettings","waitUntilReady","ready","setupOptionals","internalModel","tasks","createPose","coreModel","createPhysics","all","setupEssentials","live2DModel","textureLoadings","tex","textureOptions","resourceOptions","crossorigin","crossOrigin","Texture","event","autoLoad","baseTexture","valid","resource","_live2d_load","errorHandler","removeEventListener","createTexture","createInternalModel","modelData","isValidMoc","createCoreModel","runtimes","sort","b","version","textureLoaded","modelLoaded","readyEventEmitted","live2DModelMiddlewares","handleError","releaseTasks","motionTasksMap","taskGroup","getMotionFile","motionDataType","createMotion","expressionTasksMap","getExpressionFile","InteractionMixin","_autoInteract","autoInteract","on","onTap","off","registerInteraction","manager","interactionManager","unregisterInteraction","onPointerMove","tap","global","Live2DTransform","Transform","tempPoint","Point","tempMatrix","TickerClass","PIXI","Ticker","Live2DModel","Container","anchor","ObservablePoint","onAnchorChange","glContextID","elapsedTime","performance","deltaTime","_autoUpdate","setupLive2DModel","onLoad","tickerClass","autoUpdate","_destroyed","shared","onTickerUpdate","remove","_options","interactive","pivot","toModelPosition","hitAreaNames","position","clone","skipUpdate","_recursivePostUpdateTransform","parent","displayObjectUpdateTransform","_tempDisplayObjectParent","worldTransform","applyInverse","containsPoint","point","getBounds","contains","_calculateBounds","_bounds","addFrame","deltaMS","_render","renderer","plugins","interaction","batch","geometry","shader","shouldUpdateTexture","CONTEXT_UID","updateWebGLContext","gl","_glTextures","pixelStorei","WebGLRenderingContext","UNPACK_FLIP_Y_WEBGL","bindTexture","touched","textureGC","framebuffer","internalTransform","globalUniforms","uniforms","projectionMatrix","draw","FileLoader","settingsURL","filePath","resolved","filesMap","fileMap","definedFile","decodeURI","actualFile","find","webkitRelativePath","URL","createObjectURL","_objectURL","settingsFile","endsWith","settingsText","readText","settingsJSON","JSON","parse","reader","FileReader","readAsText","File","createSettings","encodeURI","upload","objectURL","revokeObjectURL","resourceObjectURL","unshift","ZipLoader","filePaths","getFilePaths","requiredFilePaths","getFiles","settingsFilePath","ZIP_PROTOCOL","sourceURL","zipBlob","startsWith","zipReader","unzip","releaseReader","Rectangle","HitAreaFrames","Graphics","initialized","texts","strokeWidth","normalColor","activeColor","textStyle","TextStyle","fontSize","fill","stroke","strokeThickness","text","Text","visible","addChild","lineStyle","color","tx","ty","drawRect","CubismBlendMode","CubismVector2","vector2","ret","substract","multiply","multiplyByScaler","scalar","division","divisionByScalar","getLength","getDistanceWith","dot","normalize","pow","isEqual","rhs","isNotEqual","CubismMath","sin","cos","PI","degrees","radian","atan2","directionToRadian","degree","radianToDegrees","totalAngle","CubismMatrix44","_tr","Float32Array","loadIdentity","dst","c","j","k","setMatrix","tr","getArray","getScaleX","getScaleY","getTranslateX","getTranslateY","transformX","transformY","invertTransformX","invertTransformY","translateRelative","tr1","translateX","translateY","scaleRelative","multiplyByMatrix","m","cloneMatrix","CubismRenderer","_isCulling","_isPremultipliedAlpha","_anisortopy","_modelColor","CubismTextureColor","_mvpMatrix4x4","initialize","_model","drawModel","getModel","doDrawModel","setMvpMatrix","matrix44","getMvpMatrix","setModelColor","red","green","blue","alpha","R","G","B","A","getModelColor","setIsPremultipliedAlpha","enable","isPremultipliedAlpha","setIsCulling","culling","isCulling","setAnisotropy","getAnisotropy","s_option","s_isStarted","s_isInitialized","Constant","LogLevel","vertexOffset","vertexStep","CubismFramework","option","CubismLogInfo","_isStarted","Logging","csmSetLogFunction","logFunction","Version","csmGetVersion","minor","patch","versionNumber","CubismLogWarning","staticRelease","csmGetLogFunction","loggingLevel","LogLevel_Off","CSM_ASSERT","CubismLogVerbose","fmt","CubismDebug","print","LogLevel_Verbose","CubismLogDebug","LogLevel_Debug","LogLevel_Info","LogLevel_Warning","CubismLogError","LogLevel_Error","format","getLoggingLevel","logPrint","coreLogFunction","ACubismMotion","_fadeInSeconds","_fadeOutSeconds","_weight","_offsetSeconds","_firedEventValues","release","motionQueueEntry","userTimeSeconds","isAvailable","isStarted","setIsStarted","setStartTime","setFadeInStartTime","duration","getDuration","getEndTime","setEndTime","getStartTime","fadeWeight","getEasingSine","getFadeInStartTime","setState","doUpdateParameters","setIsFinished","setFadeInTime","fadeInSeconds","setFadeOutTime","fadeOutSeconds","getFadeOutTime","getFadeInTime","setWeight","weight","getWeight","getLoopDuration","setOffsetTime","offsetSeconds","getFiredEvent","beforeCheckTimeSeconds","motionTimeSeconds","setFinishedMotionHandler","onFinishedMotionHandler","_onFinishedMotion","getFinishedMotionHandler","CubismExpressionMotion","_parameters","fadeInTime","FadeInTime","fadeOutTime","FadeOutTime","parameters","Parameters","param","parameterId","Id","Value","blendType","Blend","ExpressionBlendType","ExpressionBlendType_Multiply","ExpressionBlendType_Overwrite","ExpressionBlendType_Add","parameter","addParameterValueById","multiplyParameterValueById","setParameterValueById","CubismMotionQueueEntry","_autoDelete","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_motionQueueEntryHandle","_isTriggeredFadeOut","_motion","setFadeOut","startFadeOut","newEndTimeSeconds","startTime","endTime","f","setIsAvailable","timeSeconds","getStateTime","getStateWeight","getLastCheckEventSeconds","setLastCheckEventSeconds","checkSeconds","isTriggeredFadeOut","getFadeOutSeconds","CubismMotionQueueManager","_userTimeSeconds","_eventCustomData","_motions","autoDelete","InvalidMotionQueueEntryHandleValue","isFinishedByHandle","motionQueueEntryNumber","getCubismMotionQueueEntry","setEventCallback","callback","customData","_eventCallBack","doUpdateMotion","updated","firedList","Cubism4ExpressionManager","queueManager","findIndex","Name","create","CubismModelSettingsJson","Groups","HitAreas","Layout","FileReferences","Moc","Expressions","motions","Motions","Textures","Physics","Pose","getEyeBlinkParameters","Ids","getLipSyncParameters","Cubism4ModelSettings","isValidJSON","every","Sound","CubismMotionCurveTarget","CubismMotionSegmentType","CubismMotionPoint","time","CubismMotionSegment","basePointIndex","segmentType","CubismMotionCurve","CubismMotionCurveTarget_Model","segmentCount","baseSegmentIndex","CubismMotionEvent","fireTime","CubismMotionData","loop","curveCount","eventCount","fps","curves","segments","points","events","CubismMotionJson","_json","getMotionDuration","Meta","Duration","isMotionLoop","Loop","getMotionCurveCount","CurveCount","getMotionFps","Fps","getMotionTotalSegmentCount","TotalSegmentCount","getMotionTotalPointCount","TotalPointCount","getMotionFadeInTime","getMotionFadeOutTime","getMotionCurveTarget","curveIndex","Curves","Target","getMotionCurveId","getMotionCurveFadeInTime","getMotionCurveFadeOutTime","getMotionCurveSegmentCount","Segments","getMotionCurveSegment","segmentIndex","getEventCount","UserDataCount","getTotalEventValueSize","TotalUserDataSize","getEventTime","userDataIndex","UserData","Time","getEventValue","lerpPoints","t","linearEvaluate","bezierEvaluate","p01","p12","p23","p012","p123","steppedEvaluate","inverseSteppedEvaluate","evaluateCurve","motionData","curve","totalSegmentCount","pointPosition","CubismMotionSegmentType_Bezier","segment","evaluate","CubismMotion","_eyeBlinkParameterIds","_lipSyncParameterIds","_sourceFrameRate","_loopDurationSeconds","_isLoop","_isLoopFadeIn","_lastWeight","_motionData","_modelCurveIdEyeBlink","_modelCurveIdLipSync","timeOffsetSeconds","lipSyncValue","Number","MAX_VALUE","eyeBlinkValue","MaxTargetSize","lipSyncFlags","eyeBlinkFlags","tmpFadeIn","tmpFadeOut","parameterIndex","CubismMotionCurveTarget_Parameter","getParameterIndex","sourceValue","getParameterValueByIndex","fin","fout","setParameterValueByIndex","getParameterValueById","CubismMotionCurveTarget_PartOpacity","setIsLoop","isLoop","setIsLoopFadeIn","loopFadeIn","isLoopFadeIn","setParameterFadeInTime","setParameterFadeOutTime","getParameterFadeInTime","getParameterFadeOutTime","setEffectIds","eyeBlinkParameterIds","lipSyncParameterIds","motionJson","totalPointCount","segmentPosition","CubismMotionSegmentType_Linear","CubismMotionSegmentType_Stepped","CubismMotionSegmentType_InverseStepped","userdatacount","u","Cubism4MotionManager","eyeBlinkIds","lipSyncIds","caller","eventValue","defaultFadingDuration","HitAreaPrefix","HitAreaHead","HitAreaBody","PartsIdCore","PartsArmPrefix","PartsArmLPrefix","PartsArmRPrefix","ParamAngleX","ParamAngleY","ParamAngleZ","ParamEyeLOpen","ParamEyeLSmile","ParamEyeROpen","ParamEyeRSmile","ParamEyeBallX","ParamEyeBallY","ParamEyeBallForm","ParamBrowLY","ParamBrowRY","ParamBrowLX","ParamBrowRX","ParamBrowLAngle","ParamBrowRAngle","ParamBrowLForm","ParamBrowRForm","ParamMouthForm","ParamMouthOpenY","ParamCheek","ParamBodyAngleX","ParamBodyAngleY","ParamBodyAngleZ","ParamBreath","ParamArmLA","ParamArmRA","ParamArmLB","ParamArmRB","ParamHandL","ParamHandR","ParamHairFront","ParamHairSide","ParamHairBack","ParamHairFluffy","ParamShoulderY","ParamBustX","ParamBustY","ParamBaseX","ParamBaseY","ParamNONE","CubismBreath","_breathParameters","_currentTime","setParameters","breathParameters","getParameters","deltaTimeSeconds","peak","cycle","BreathParameterData","CubismEyeBlink","modelSetting","_blinkingState","EyeState","EyeState_First","_nextBlinkingTime","_stateStartTimeSeconds","_blinkingIntervalSeconds","_closingSeconds","_closedSeconds","_openingSeconds","_parameterIds","setBlinkingInterval","blinkingInterval","setBlinkingSetting","closing","closed","opening","setParameterIds","parameterIds","getParameterIds","parameterValue","EyeState_Closing","EyeState_Closed","EyeState_Opening","EyeState_Interval","determinNextBlinkingTiming","CloseIfZero","csmRect","w","h","getCenterX","getCenterY","getRight","getBottom","setRect","expand","s_instance","s_viewport","s_fbo","supportMoreMaskDivisions","CubismClippingManager_WebGL","_maskRenderTexture","_colorBuffer","_currentFrameNo","_clippingMaskBufferSize","_clippingContextListForMask","_clippingContextListForDraw","_channelColors","_tmpBoundsOnModel","_tmpMatrix","_tmpMatrixForMask","_tmpMatrixForDraw","tmp","getChannelFlagAsColor","channelNo","getMaskRenderTexture","_maskTexture","frameNo","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","CubismRenderTextureResource","setGL","calcClippedDrawTotalBounds","clippingContext","clippedDrawTotalMinX","clippedDrawTotalMinY","clippedDrawTotalMaxX","MIN_VALUE","clippedDrawTotalMaxY","clippedDrawCount","_clippedDrawableIndexList","clippedDrawableIndex","drawableIndex","drawableVertexCount","getDrawableVertexCount","drawableVertexes","minX","minY","maxX","maxY","pi","_allClippedDrawRect","_isUsing","deleteFramebuffer","deleteTexture","drawableCount","drawableMasks","drawableMaskCounts","findSameClip","CubismClippingContext","addClippedDrawable","setupClippingContext","usingClipCount","clipIndex","cc","preDraw","setupLayoutBounds","clearColor","COLOR_BUFFER_BIT","clipContext","allClipedDrawRect","layoutBoundsOnTex01","_layoutBounds","MARGIN","scaleX","scaleY","_matrixForMask","_matrixForDraw","clipDrawCount","_clippingIdCount","clipDrawIndex","_clippingIdList","getDrawableDynamicFlagVertexPositionsDidChange","getDrawableCulling","setClippingContextBufferForMask","drawMesh","getDrawableTextureIndices","getDrawableVertexIndexCount","getDrawableVertexIndices","getDrawableVertexUvs","getDrawableOpacity","CubismBlendMode_Normal","sameCount","clipId","div","mod","curClipIndex","layoutCount","_layoutChannelNo","xpos","ypos","getColorBuffer","getClippingContextListForDraw","setClippingMaskBufferSize","getClippingMaskBufferSize","clippingDrawableIndices","clipCount","_owner","getClippingManager","setGl","CubismShader_WebGL","_shaderSets","releaseShaderProgram","setupShaderProgram","textureId","vertexCount","vertexArray","indexArray","uvArray","bufferData","opacity","colorBlendMode","baseColor","matrix4x4","invertedMask","SRC_COLOR","DST_COLOR","SRC_ALPHA","DST_ALPHA","generateShaders","clippingContextBufferForMask","getClippingContextBufferForMask","shaderSet","ShaderNames","ShaderNames_SetupMask","useProgram","shaderProgram","activeTexture","TEXTURE0","uniform1i","samplerTexture0Location","vertex","createBuffer","bindBuffer","ARRAY_BUFFER","DYNAMIC_DRAW","enableVertexAttribArray","attributePositionLocation","vertexAttribPointer","FLOAT","uv","attributeTexCoordLocation","colorChannel","uniform4f","uniformChannelFlagLocation","uniformMatrix4fv","uniformClipMatrixLocation","rect","uniformBaseColorLocation","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","clippingContextBufferForDraw","getClippingContextBufferForDraw","ShaderNames_NormalPremultipliedAlpha","ONE","CubismBlendMode_Additive","ShaderNames_AddPremultipliedAlpha","CubismBlendMode_Multiplicative","ShaderNames_MultPremultipliedAlpha","TEXTURE1","samplerTexture1Location","uniformMatrixLocation","ELEMENT_ARRAY_BUFFER","blendFuncSeparate","deleteProgram","loadShaderProgram","vertexShaderSrcSetupMask","fragmentShaderSrcsetupMask","vertexShaderSrc","fragmentShaderSrcPremultipliedAlpha","vertexShaderSrcMasked","fragmentShaderSrcMaskPremultipliedAlpha","fragmentShaderSrcMaskInvertedPremultipliedAlpha","getAttribLocation","getUniformLocation","vertexShaderSource","fragmentShaderSource","createProgram","vertShader","compileShaderSource","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","deleteShader","shaderType","shaderSource","createShader","compileShader","getShaderInfoLog","getShaderParameter","COMPILE_STATUS","CubismRenderer_WebGL","_clippingContextBufferForMask","_clippingContextBufferForDraw","_clippingManager","firstDraw","_textures","_sortedDrawableIndexList","_bufferData","isUsingMasking","getDrawableCount","getDrawableMasks","getDrawableMaskCounts","modelTextureNo","glTexture","getBindedTextures","deleteBuffer","renderOrder","getDrawableRenderOrders","order","getDrawableDynamicFlagIsVisible","setClippingContextBufferForDraw","getDrawableBlendMode","getDrawableInvertedMaskBit","textureNo","indexCount","CULL_FACE","disable","frontFace","CCW","modelColorRGBA","drawtexture","getInstance","drawElements","TRIANGLES","UNSIGNED_SHORT","deleteInstance","setRenderState","fbo","getExtension","SCISSOR_TEST","STENCIL_TEST","DEPTH_TEST","CW","BLEND","colorMask","clip","startUp","doStaticRelease","Cubism4InternalModel","lipSync","breath","idParamAngleX","idParamAngleY","idParamAngleZ","idParamEyeBallX","idParamEyeBallY","idParamBodyAngleX","idParamBreath","pixelsPerUnit","centeringTransform","eyeBlink","canvasinfo","CanvasWidth","CanvasHeight","_","charAt","toLowerCase","PixelsPerUnit","getDrawableIndex","getDrawableIDs","getDrawableIds","arr","prepend","motionUpdated","saveParameters","updateFocus","updateNaturalMovements","loadParameters","matrix","getParameter","FRAMEBUFFER_BINDING","startupPromise","startupRetries","cubism4Ready","startUpWithRetry","startUpCubism4","cause","setTimeout","CubismPose","_fadeTimeSeconds","_lastModel","_partGroups","_partGroupCounts","pose3json","poseListInfo","poseCount","poseIndex","idListInfo","idCount","groupCount","groupIndex","partInfo","partData","PartData","partId","linkListInfo","Link","linkCount","linkIndex","linkPart","link","beginIndex","partGroupCount","doFade","copyPartOpacities","partsIndex","partIndex","paramIndex","setPartOpacityByIndex","getPartOpacityByIndex","linkPartIndex","visiblePartIndex","newOpacity","a1","assignment","getPartIndex","clonePartData","CubismModel","_savedParameters","_drawableIds","_partIds","_notExistPartId","_notExistParameterId","_notExistParameterValues","_notExistPartOpacities","drawables","resetDynamicFlags","getCanvasWidth","getCanvasHeight","parameterCount","savedParameterCount","_parameterValues","partCount","parts","getPartCount","_partOpacities","setPartOpacityById","getPartOpacityById","getParameterCount","getParameterMaximumValue","maximumValues","getParameterMinimumValue","minimumValues","getParameterDefaultValue","defaultValues","addParameterValueByIndex","multiplyParameterValueByIndex","drawableId","getDrawableId","ids","renderOrders","textureIndices","dynamicFlags","Utils","hasVertexPositionsDidChangeBit","indexCounts","vertexCounts","getDrawableVertexPositions","indices","vertexPositions","vertexUvs","opacities","constantFlags","hasIsDoubleSidedBit","hasBlendAdditiveBit","hasBlendMultiplicativeBit","hasIsInvertedMaskBit","masks","maskCounts","hasIsVisibleBit","getDrawableDynamicFlagVisibilityDidChange","hasVisibilityDidChangeBit","getDrawableDynamicFlagOpacityDidChange","hasOpacityDidChangeBit","getDrawableDynamicFlagRenderOrderDidChange","hasRenderOrderDidChangeBit","_parameterMaximumValues","_parameterMinimumValues","partIds","drawableIds","CubismMoc","_moc","_modelCount","mocBytes","fromArrayBuffer","createModel","cubismModel","Model","fromMoc","deleteModel","_release","CubismPhysicsTargetType","CubismPhysicsSource","PhysicsJsonEffectiveForces","gravity","wind","CubismPhysicsParticle","initialPosition","lastPosition","lastGravity","force","velocity","CubismPhysicsSubRig","normalizationPosition","normalizationAngle","CubismPhysicsInput","CubismPhysicsOutput","destination","translationScale","CubismPhysicsRig","inputs","outputs","particles","CubismPhysicsJson","getGravity","EffectiveForces","Gravity","X","Y","getWind","Wind","getSubRigCount","PhysicsSettingCount","getTotalInputCount","TotalInputCount","getTotalOutputCount","TotalOutputCount","getVertexCount","VertexCount","getNormalizationPositionMinimumValue","physicsSettingIndex","PhysicsSettings","Normalization","Position","Minimum","getNormalizationPositionMaximumValue","Maximum","getNormalizationPositionDefaultValue","Default","getNormalizationAngleMinimumValue","Angle","getNormalizationAngleMaximumValue","getNormalizationAngleDefaultValue","getInputCount","Input","getInputWeight","inputIndex","Weight","getInputReflect","Reflect","getInputType","Type","getInputSourceId","Source","getOutputCount","Output","getOutputVertexIndex","outputIndex","VertexIndex","getOutputAngleScale","Scale","getOutputWeight","getOutputDestinationId","Destination","getOutputType","getOutputReflect","getParticleCount","Vertices","getParticleMobility","vertexIndex","Mobility","getParticleDelay","Delay","getParticleAcceleration","Acceleration","getParticleRadius","Radius","getParticlePosition","PhysicsTypeTagAngle","CubismPhysics","Options","_physicsRig","radAngle","outputValue","totalTranslation","currentSetting","currentInput","currentOutput","currentParticles","parameterMaximumValue","parameterMinimumValue","parameterDefaultValue","settingIndex","subRigCount","angle","baseInputIndex","baseOutputIndex","baseParticleIndex","inputCount","sourceParameterIndex","getNormalizedParameterValue","reflect","degreesToRadian","updateParticles","particleCount","maximum","outputCount","particleIndex","destinationParameterIndex","translation","outParameterValue","stringify","subarray","updateOutputParameterValue","outParamIndex","setOptions","getOption","physicsJson","setting","minimum","defalut","input","CubismPhysicsSource_X","getInputTranslationXFromNormalizedParameterValue","CubismPhysicsSource_Y","getInputTranslationYFromNormalizedParamterValue","CubismPhysicsSource_Angle","getInputAngleFromNormalizedParameterValue","targetType","CubismPhysicsTargetType_Parameter","output","angleScale","getOutputTranslationX","getScale","getOutputScaleTranslationX","getOutputTranslationY","getOutputScaleTranslationY","getOutputAngle","getOutputScaleAngle","particle","mobility","delay","acceleration","radius","strand","targetTranslation","targetAngle","isInverted","normalizeParameterValue","normalizaitionPosition","parentGravity","strandCount","windDirection","thresholdValue","airResistance","totalRadian","currentGravity","direction","newDirection","radianToDirection","parameterValueMinimum","parameterValueMaximum","outputScale","valueBelowMinimum","valueExceededMaximum","parameterMinimum","parameterMaximum","parameterDefault","normalizedMinimum","normalizedMaximum","normalizedDefault","maxValue","minValue","minNormValue","maxNormValue","middleNormValue","middleValue","getRangeValue","paramValue","sign","nLength","pLength","releaseMoc","__moc","cubism4","registerRuntime","view","Int8Array","fromCharCode","ignored","coreModelWithMoc","CubismModelUserDataJson","getUserDataCount","getTotalUserDataSize","getUserDataTargetType","getUserDataId","getUserDataValue","CubismModelUserData","_userDataNodes","_artMeshUserDataNode","parseUserData","getArtMeshUserDatas","nodeCount","addNode","targetId","CubismMotionManager","_currentPriority","_reservePriority","getCurrentPriority","getReservePriority","setReservePriority","val","startMotionPriority","updateMotion","reserveMotion"],"sourceRoot":""}