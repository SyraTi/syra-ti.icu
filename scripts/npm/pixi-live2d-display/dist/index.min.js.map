{"version":3,"file":"index.min.js","mappings":"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","sources":["webpack://PIXI.live2d/webpack/universalModuleDefinition","webpack://PIXI.live2d/./node_modules/lodash/_DataView.js","webpack://PIXI.live2d/./node_modules/lodash/_Hash.js","webpack://PIXI.live2d/./node_modules/lodash/_ListCache.js","webpack://PIXI.live2d/./node_modules/lodash/_Map.js","webpack://PIXI.live2d/./node_modules/lodash/_MapCache.js","webpack://PIXI.live2d/./node_modules/lodash/_Promise.js","webpack://PIXI.live2d/./node_modules/lodash/_Set.js","webpack://PIXI.live2d/./node_modules/lodash/_SetCache.js","webpack://PIXI.live2d/./node_modules/lodash/_Stack.js","webpack://PIXI.live2d/./node_modules/lodash/_Symbol.js","webpack://PIXI.live2d/./node_modules/lodash/_Uint8Array.js","webpack://PIXI.live2d/./node_modules/lodash/_WeakMap.js","webpack://PIXI.live2d/./node_modules/lodash/_apply.js","webpack://PIXI.live2d/./node_modules/lodash/_arrayFilter.js","webpack://PIXI.live2d/./node_modules/lodash/_arrayLikeKeys.js","webpack://PIXI.live2d/./node_modules/lodash/_arrayMap.js","webpack://PIXI.live2d/./node_modules/lodash/_arrayPush.js","webpack://PIXI.live2d/./node_modules/lodash/_arraySome.js","webpack://PIXI.live2d/./node_modules/lodash/_assocIndexOf.js","webpack://PIXI.live2d/./node_modules/lodash/_baseAssignValue.js","webpack://PIXI.live2d/./node_modules/lodash/_baseFindIndex.js","webpack://PIXI.live2d/./node_modules/lodash/_baseFor.js","webpack://PIXI.live2d/./node_modules/lodash/_baseForOwn.js","webpack://PIXI.live2d/./node_modules/lodash/_baseGet.js","webpack://PIXI.live2d/./node_modules/lodash/_baseGetAllKeys.js","webpack://PIXI.live2d/./node_modules/lodash/_baseGetTag.js","webpack://PIXI.live2d/./node_modules/lodash/_baseHasIn.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIndexOf.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIndexOfWith.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsArguments.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsEqual.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsEqualDeep.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsMatch.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsNaN.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsNative.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsTypedArray.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIteratee.js","webpack://PIXI.live2d/./node_modules/lodash/_baseKeys.js","webpack://PIXI.live2d/./node_modules/lodash/_baseMatches.js","webpack://PIXI.live2d/./node_modules/lodash/_baseMatchesProperty.js","webpack://PIXI.live2d/./node_modules/lodash/_baseProperty.js","webpack://PIXI.live2d/./node_modules/lodash/_basePropertyDeep.js","webpack://PIXI.live2d/./node_modules/lodash/_basePullAll.js","webpack://PIXI.live2d/./node_modules/lodash/_baseRest.js","webpack://PIXI.live2d/./node_modules/lodash/_baseSetToString.js","webpack://PIXI.live2d/./node_modules/lodash/_baseTimes.js","webpack://PIXI.live2d/./node_modules/lodash/_baseToString.js","webpack://PIXI.live2d/./node_modules/lodash/_baseUnary.js","webpack://PIXI.live2d/./node_modules/lodash/_cacheHas.js","webpack://PIXI.live2d/./node_modules/lodash/_castPath.js","webpack://PIXI.live2d/./node_modules/lodash/_copyArray.js","webpack://PIXI.live2d/./node_modules/lodash/_coreJsData.js","webpack://PIXI.live2d/./node_modules/lodash/_createBaseFor.js","webpack://PIXI.live2d/./node_modules/lodash/_defineProperty.js","webpack://PIXI.live2d/./node_modules/lodash/_equalArrays.js","webpack://PIXI.live2d/./node_modules/lodash/_equalByTag.js","webpack://PIXI.live2d/./node_modules/lodash/_equalObjects.js","webpack://PIXI.live2d/./node_modules/lodash/_freeGlobal.js","webpack://PIXI.live2d/./node_modules/lodash/_getAllKeys.js","webpack://PIXI.live2d/./node_modules/lodash/_getMapData.js","webpack://PIXI.live2d/./node_modules/lodash/_getMatchData.js","webpack://PIXI.live2d/./node_modules/lodash/_getNative.js","webpack://PIXI.live2d/./node_modules/lodash/_getRawTag.js","webpack://PIXI.live2d/./node_modules/lodash/_getSymbols.js","webpack://PIXI.live2d/./node_modules/lodash/_getTag.js","webpack://PIXI.live2d/./node_modules/lodash/_getValue.js","webpack://PIXI.live2d/./node_modules/lodash/_hasPath.js","webpack://PIXI.live2d/./node_modules/lodash/_hashClear.js","webpack://PIXI.live2d/./node_modules/lodash/_hashDelete.js","webpack://PIXI.live2d/./node_modules/lodash/_hashGet.js","webpack://PIXI.live2d/./node_modules/lodash/_hashHas.js","webpack://PIXI.live2d/./node_modules/lodash/_hashSet.js","webpack://PIXI.live2d/./node_modules/lodash/_isIndex.js","webpack://PIXI.live2d/./node_modules/lodash/_isKey.js","webpack://PIXI.live2d/./node_modules/lodash/_isKeyable.js","webpack://PIXI.live2d/./node_modules/lodash/_isMasked.js","webpack://PIXI.live2d/./node_modules/lodash/_isPrototype.js","webpack://PIXI.live2d/./node_modules/lodash/_isStrictComparable.js","webpack://PIXI.live2d/./node_modules/lodash/_listCacheClear.js","webpack://PIXI.live2d/./node_modules/lodash/_listCacheDelete.js","webpack://PIXI.live2d/./node_modules/lodash/_listCacheGet.js","webpack://PIXI.live2d/./node_modules/lodash/_listCacheHas.js","webpack://PIXI.live2d/./node_modules/lodash/_listCacheSet.js","webpack://PIXI.live2d/./node_modules/lodash/_mapCacheClear.js","webpack://PIXI.live2d/./node_modules/lodash/_mapCacheDelete.js","webpack://PIXI.live2d/./node_modules/lodash/_mapCacheGet.js","webpack://PIXI.live2d/./node_modules/lodash/_mapCacheHas.js","webpack://PIXI.live2d/./node_modules/lodash/_mapCacheSet.js","webpack://PIXI.live2d/./node_modules/lodash/_mapToArray.js","webpack://PIXI.live2d/./node_modules/lodash/_matchesStrictComparable.js","webpack://PIXI.live2d/./node_modules/lodash/_memoizeCapped.js","webpack://PIXI.live2d/./node_modules/lodash/_nativeCreate.js","webpack://PIXI.live2d/./node_modules/lodash/_nativeKeys.js","webpack://PIXI.live2d/./node_modules/lodash/_nodeUtil.js","webpack://PIXI.live2d/./node_modules/lodash/_objectToString.js","webpack://PIXI.live2d/./node_modules/lodash/_overArg.js","webpack://PIXI.live2d/./node_modules/lodash/_overRest.js","webpack://PIXI.live2d/./node_modules/lodash/_root.js","webpack://PIXI.live2d/./node_modules/lodash/_setCacheAdd.js","webpack://PIXI.live2d/./node_modules/lodash/_setCacheHas.js","webpack://PIXI.live2d/./node_modules/lodash/_setToArray.js","webpack://PIXI.live2d/./node_modules/lodash/_setToString.js","webpack://PIXI.live2d/./node_modules/lodash/_shortOut.js","webpack://PIXI.live2d/./node_modules/lodash/_stackClear.js","webpack://PIXI.live2d/./node_modules/lodash/_stackDelete.js","webpack://PIXI.live2d/./node_modules/lodash/_stackGet.js","webpack://PIXI.live2d/./node_modules/lodash/_stackHas.js","webpack://PIXI.live2d/./node_modules/lodash/_stackSet.js","webpack://PIXI.live2d/./node_modules/lodash/_strictIndexOf.js","webpack://PIXI.live2d/./node_modules/lodash/_stringToPath.js","webpack://PIXI.live2d/./node_modules/lodash/_toKey.js","webpack://PIXI.live2d/./node_modules/lodash/_toSource.js","webpack://PIXI.live2d/./node_modules/lodash/constant.js","webpack://PIXI.live2d/./node_modules/lodash/eq.js","webpack://PIXI.live2d/./node_modules/lodash/get.js","webpack://PIXI.live2d/./node_modules/lodash/hasIn.js","webpack://PIXI.live2d/./node_modules/lodash/identity.js","webpack://PIXI.live2d/./node_modules/lodash/isArguments.js","webpack://PIXI.live2d/./node_modules/lodash/isArray.js","webpack://PIXI.live2d/./node_modules/lodash/isArrayLike.js","webpack://PIXI.live2d/./node_modules/lodash/isBuffer.js","webpack://PIXI.live2d/./node_modules/lodash/isFunction.js","webpack://PIXI.live2d/./node_modules/lodash/isLength.js","webpack://PIXI.live2d/./node_modules/lodash/isObject.js","webpack://PIXI.live2d/./node_modules/lodash/isObjectLike.js","webpack://PIXI.live2d/./node_modules/lodash/isSymbol.js","webpack://PIXI.live2d/./node_modules/lodash/isTypedArray.js","webpack://PIXI.live2d/./node_modules/lodash/keys.js","webpack://PIXI.live2d/./node_modules/lodash/mapKeys.js","webpack://PIXI.live2d/./node_modules/lodash/memoize.js","webpack://PIXI.live2d/./node_modules/lodash/property.js","webpack://PIXI.live2d/./node_modules/lodash/pull.js","webpack://PIXI.live2d/./node_modules/lodash/pullAll.js","webpack://PIXI.live2d/./node_modules/lodash/stubArray.js","webpack://PIXI.live2d/./node_modules/lodash/stubFalse.js","webpack://PIXI.live2d/./node_modules/lodash/toString.js","webpack://PIXI.live2d/./src/cubism2/check-runtime.ts","webpack://PIXI.live2d/./src/cubism2/patch-motion.ts","webpack://PIXI.live2d/./src/cubism4/check-runtime.ts","webpack://PIXI.live2d/external umd {\"commonjs\":\"@pixi/core\",\"commonjs2\":\"@pixi/core\",\"amd\":\"@pixi/core\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/external umd {\"commonjs\":\"@pixi/display\",\"commonjs2\":\"@pixi/display\",\"amd\":\"@pixi/display\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/external umd {\"commonjs\":\"@pixi/graphics\",\"commonjs2\":\"@pixi/graphics\",\"amd\":\"@pixi/graphics\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/external umd {\"commonjs\":\"@pixi/math\",\"commonjs2\":\"@pixi/math\",\"amd\":\"@pixi/math\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/external umd {\"commonjs\":\"@pixi/text\",\"commonjs2\":\"@pixi/text\",\"amd\":\"@pixi/text\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/external umd {\"commonjs\":\"@pixi/utils\",\"commonjs2\":\"@pixi/utils\",\"amd\":\"@pixi/utils\",\"root\":[\"PIXI\",\"utils\"]}","webpack://PIXI.live2d/webpack/bootstrap","webpack://PIXI.live2d/webpack/runtime/compat get default export","webpack://PIXI.live2d/webpack/runtime/define property getters","webpack://PIXI.live2d/webpack/runtime/global","webpack://PIXI.live2d/webpack/runtime/hasOwnProperty shorthand","webpack://PIXI.live2d/webpack/runtime/make namespace object","webpack://PIXI.live2d/webpack/runtime/node module decorator","webpack://PIXI.live2d/./src/cubism-common/constants.ts","webpack://PIXI.live2d/./src/config.ts","webpack://PIXI.live2d/./src/utils/log.ts","webpack://PIXI.live2d/./src/utils/math.ts","webpack://PIXI.live2d/./src/utils/obj.ts","webpack://PIXI.live2d/./src/utils/string.ts","webpack://PIXI.live2d/./src/cubism-common/MotionState.ts","webpack://PIXI.live2d/./src/cubism-common/ExpressionManager.ts","webpack://PIXI.live2d/./src/cubism-common/FocusController.ts","webpack://PIXI.live2d/./src/cubism-common/ModelSettings.ts","webpack://PIXI.live2d/./src/cubism-common/SoundManager.ts","webpack://PIXI.live2d/./src/cubism-common/MotionManager.ts","webpack://PIXI.live2d/./src/cubism-common/InternalModel.ts","webpack://PIXI.live2d/./src/factory/XHRLoader.ts","webpack://PIXI.live2d/./src/utils/middleware.ts","webpack://PIXI.live2d/./src/factory/Live2DLoader.ts","webpack://PIXI.live2d/./src/factory/model-middlewares.ts","webpack://PIXI.live2d/./src/factory/texture.ts","webpack://PIXI.live2d/./src/factory/Live2DFactory.ts","webpack://PIXI.live2d/./src/InteractionMixin.ts","webpack://PIXI.live2d/./src/Live2DTransform.ts","webpack://PIXI.live2d/./src/Live2DModel.ts","webpack://PIXI.live2d/./src/factory/FileLoader.ts","webpack://PIXI.live2d/./src/factory/ZipLoader.ts","webpack://PIXI.live2d/./src/tools/HitAreaFrames.ts","webpack://PIXI.live2d/./src/cubism2/Live2DEyeBlink.ts","webpack://PIXI.live2d/./src/cubism2/Live2DExpression.ts","webpack://PIXI.live2d/./src/cubism2/Cubism2ExpressionManager.ts","webpack://PIXI.live2d/./src/cubism2/Cubism2MotionManager.ts","webpack://PIXI.live2d/./src/cubism2/Cubism2InternalModel.ts","webpack://PIXI.live2d/./src/cubism2/Cubism2ModelSettings.ts","webpack://PIXI.live2d/./src/cubism2/Live2DPhysics.ts","webpack://PIXI.live2d/./src/cubism2/Live2DPose.ts","webpack://PIXI.live2d/./cubism/src/rendering/cubismrenderer.ts","webpack://PIXI.live2d/./src/cubism2/factory.ts","webpack://PIXI.live2d/./cubism/src/math/cubismvector2.ts","webpack://PIXI.live2d/./cubism/src/math/cubismmath.ts","webpack://PIXI.live2d/./cubism/src/math/cubismmatrix44.ts","webpack://PIXI.live2d/./cubism/src/live2dcubismframework.ts","webpack://PIXI.live2d/./cubism/src/utils/cubismdebug.ts","webpack://PIXI.live2d/./cubism/src/motion/acubismmotion.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismexpressionmotion.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismmotionqueueentry.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismmotionqueuemanager.ts","webpack://PIXI.live2d/./src/cubism4/Cubism4ExpressionManager.ts","webpack://PIXI.live2d/./cubism/src/settings/cubismmodelsettingsjson.ts","webpack://PIXI.live2d/./src/cubism4/Cubism4ModelSettings.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismmotioninternal.ts","webpack://PIXI.live2d/./cubism/src/effect/cubismeyeblink.ts","webpack://PIXI.live2d/./cubism/src/config.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismmotionjson.ts","webpack://PIXI.live2d/./cubism/src/motion/cubismmotion.ts","webpack://PIXI.live2d/./src/cubism4/Cubism4MotionManager.ts","webpack://PIXI.live2d/./cubism/src/effect/cubismbreath.ts","webpack://PIXI.live2d/./cubism/src/type/csmrectf.ts","webpack://PIXI.live2d/./cubism/src/rendering/cubismrenderer_webgl.ts","webpack://PIXI.live2d/./src/cubism4/Cubism4InternalModel.ts","webpack://PIXI.live2d/./cubism/src/cubismdefaultparameterid.ts","webpack://PIXI.live2d/./src/cubism4/setup.ts","webpack://PIXI.live2d/./cubism/src/effect/cubismpose.ts","webpack://PIXI.live2d/./cubism/src/model/cubismmodel.ts","webpack://PIXI.live2d/./cubism/src/model/cubismmoc.ts","webpack://PIXI.live2d/./cubism/src/physics/cubismphysicsinternal.ts","webpack://PIXI.live2d/./cubism/src/physics/cubismphysicsjson.ts","webpack://PIXI.live2d/./cubism/src/physics/cubismphysics.ts","webpack://PIXI.live2d/./src/cubism4/factory.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@pixi/utils\"), require(\"@pixi/math\"), require(\"@pixi/core\"), require(\"@pixi/display\"), require(\"@pixi/graphics\"), require(\"@pixi/text\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@pixi/utils\", \"@pixi/math\", \"@pixi/core\", \"@pixi/display\", \"@pixi/graphics\", \"@pixi/text\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PIXI\"] = factory(require(\"@pixi/utils\"), require(\"@pixi/math\"), require(\"@pixi/core\"), require(\"@pixi/display\"), require(\"@pixi/graphics\"), require(\"@pixi/text\"));\n\telse\n\t\troot[\"PIXI\"] = root[\"PIXI\"] || {}, root[\"PIXI\"][\"live2d\"] = factory(root[\"PIXI\"][\"utils\"], root[\"PIXI\"], root[\"PIXI\"], root[\"PIXI\"], root[\"PIXI\"], root[\"PIXI\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__5072__, __WEBPACK_EXTERNAL_MODULE__4893__, __WEBPACK_EXTERNAL_MODULE__8704__, __WEBPACK_EXTERNAL_MODULE__8623__, __WEBPACK_EXTERNAL_MODULE__5417__, __WEBPACK_EXTERNAL_MODULE__5888__) => {\nreturn ","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOfWith;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var arrayMap = require('./_arrayMap'),\n    baseIndexOf = require('./_baseIndexOf'),\n    baseIndexOfWith = require('./_baseIndexOfWith'),\n    baseUnary = require('./_baseUnary'),\n    copyArray = require('./_copyArray');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAll;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nmodule.exports = mapKeys;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseRest = require('./_baseRest'),\n    pullAll = require('./pullAll');\n\n/**\n * Removes all given values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n * to remove elements from an array by predicate.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pull(array, 'a', 'c');\n * console.log(array);\n * // => ['b', 'b']\n */\nvar pull = baseRest(pullAll);\n\nmodule.exports = pull;\n","var basePullAll = require('./_basePullAll');\n\n/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pullAll(array, ['a', 'c']);\n * console.log(array);\n * // => ['b', 'b']\n */\nfunction pullAll(array, values) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values)\n    : array;\n}\n\nmodule.exports = pullAll;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","if (!(window as any).Live2D) {\n    throw new Error('Cannot find Cubism 2 runtime. Did you forget to include the live2d.min.js?');\n}\n","// subclassing is impossible because it will be instantiated by `Live2DMotion.create()`\ndeclare interface Live2DMotion {\n    onFinishHandler?(motion: this): void\n}\n\nconst originalUpdateParam = Live2DMotion.prototype.updateParam;\n\nLive2DMotion.prototype.updateParam = function(model: Live2DModelWebGL, entry: Live2DObfuscated.MotionQueueEnt) {\n    originalUpdateParam.call(this, model, entry);\n\n    if (entry.isFinished() && this.onFinishHandler) {\n        this.onFinishHandler(this);\n\n        delete this.onFinishHandler;\n    }\n};\n","if (!(window as any).Live2DCubismCore) {\n    throw new Error('Cannot find Cubism 4 runtime. Did you forget to include the live2dcubismcore.min.js?');\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8704__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8623__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5417__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4893__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5888__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5072__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","export const LOGICAL_WIDTH = 2;\nexport const LOGICAL_HEIGHT = 2;\n","/**\n * Global configs.\n */\nexport namespace config {\n    export const LOG_LEVEL_VERBOSE = 0;\n    export const LOG_LEVEL_WARNING = 1;\n    export const LOG_LEVEL_ERROR = 2;\n    export const LOG_LEVEL_NONE = 999;\n\n    declare const __PRODUCTION__: boolean;\n\n    /**\n     * Global log level.\n     * @default {@link LOG_LEVEL_WARNING}\n     */\n    export let logLevel = __PRODUCTION__ ? LOG_LEVEL_WARNING : LOG_LEVEL_VERBOSE;\n\n    /**\n     * Enabling sound for motions.\n     */\n    export let sound = true;\n\n    /**\n     * Deferring motion and corresponding sound until both are loaded.\n     */\n    export let motionSync = true;\n\n    /**\n     * Default fading duration for motions without such value specified.\n     */\n    export let motionFadingDuration = 500;\n\n    /**\n     * Default fading duration for idle motions without such value specified.\n     */\n    export let idleMotionFadingDuration = 2000;\n\n    /**\n     * Default fading duration for expressions without such value specified.\n     */\n    export let expressionFadingDuration = 500;\n\n    export let cubism4: {\n        /**\n         * Should masks support 4x4 division, which is unofficial and experimental.\n         * See [official manual](https://docs.live2d.com/cubism-sdk-manual/ow-sdk-mask-premake-web/?locale=en_us).\n         * @default true\n         */\n        supportMoreMaskDivisions: boolean;\n    } | undefined;\n}\n\ndeclare const __VERSION__: string;\n\n/**\n * Consistent with the `version` in package.json.\n */\nexport const VERSION = __VERSION__;\n","import { config } from '@/config';\n\n/**\n * A simple tagged logger.\n *\n * You can replace the methods with your own ones.\n *\n * ```js\n * import { logger } from 'pixi-live2d-display';\n *\n * logger.log = (tag, ...messages) => {\n *     console.log(tag, 'says:', ...messages);\n * };\n * ```\n */\nexport namespace logger {\n    export function log(tag: string, ...messages: any[]) {\n        if (config.logLevel <= config.LOG_LEVEL_VERBOSE) {\n            console.log(`[${tag}]`, ...messages);\n        }\n    }\n\n    export function warn(tag: string, ...messages: any[]) {\n        if (config.logLevel <= config.LOG_LEVEL_WARNING) {\n            console.warn(`[${tag}]`, ...messages);\n        }\n    }\n\n    export function error(tag: string, ...messages: any[]) {\n        if (config.logLevel <= config.LOG_LEVEL_ERROR) {\n            console.error(`[${tag}]`, ...messages);\n        }\n    }\n}\n","/**\n * These functions can be slightly faster than the ones in Lodash.\n * @packageDocumentation\n */\n\nexport function clamp(num: number, lower: number, upper: number) {\n    return num < lower ? lower : num > upper ? upper : num;\n}\n\nexport function rand(min: number, max: number) {\n    return Math.random() * (max - min) + min;\n}\n","/**\n * Copies a property at only if it matches the `type`.\n * @param type - Type expected to match `typeof` on the property.\n * @param from - Source object.\n * @param to - Destination object.\n * @param fromKey - Key of the property in source object.\n * @param toKey - Key of the property in destination object.\n */\n// TODO: lint and fix the formatting!\nexport function copyProperty<From, FromKey extends keyof From, ToKey extends keyof any, To extends Partial<Record<ToKey, From[FromKey]>>>(type: string, from: From, to: To, fromKey: FromKey, toKey: ToKey) {\n    const value = from[fromKey];\n\n    if (value !== null && typeof value === type) {\n        // a type error will occur here, have no idea\n        to[toKey] = value as any;\n    }\n}\n\n/**\n * Copies an array at `key`, filtering the items that match the `type`.\n * @param type - Type expected to match `typeof` on the items.\n * @param from - Source object.\n * @param to - Destination object.\n * @param fromKey - Key of the array property in source object.\n * @param toKey - Key of the array property in destination object.\n */\nexport function copyArray<FromKey extends keyof any, From extends Partial<Record<FromKey, any[]>>, ToKey extends keyof any, To extends Partial<Record<ToKey, any[]>>>(type: string, from: From, to: To, fromKey: FromKey, toKey: ToKey) {\n    const array = from[fromKey];\n\n    if (Array.isArray(array)) {\n        to[toKey] = array.filter(item => item !== null && typeof item === type) as any;\n    }\n}\n\n/**\n * @see {@link https://www.typescriptlang.org/docs/handbook/mixins.html}\n */\nexport function applyMixins(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            if (name !== 'constructor') {\n                Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name)!);\n            }\n        });\n    });\n}\n","/**\n * Gets the name of parent folder in a url.\n * @param url - URL of a file.\n * @return Name of the parent folder, or the file itself if it has no parent folder.\n */\nexport function folderName(url: string) {\n    let lastSlashIndex = url.lastIndexOf('/');\n\n    if (lastSlashIndex != -1) {\n        url = url.slice(0, lastSlashIndex);\n    }\n\n    lastSlashIndex = url.lastIndexOf('/');\n\n    if (lastSlashIndex !== -1) {\n        url = url.slice(lastSlashIndex + 1);\n    }\n\n    return url;\n}\n","import { logger } from '@/utils';\n\n/**\n * Indicates the motion priority.\n */\nexport enum MotionPriority {\n    /** States that the model is currently not playing any motion. This priority cannot be applied to a motion. */\n    NONE,\n\n    /** Low priority, used when starting idle motions automatically. */\n    IDLE,\n\n    /** Medium priority. */\n    NORMAL,\n\n    /** High priority. Motions as this priority will always be played regardless of the current priority. */\n    FORCE\n}\n\n/**\n * Handles the state of a MotionManager.\n */\nexport class MotionState {\n    /**\n     * Tag for logging.\n     */\n    tag!: string;\n\n    /**\n     * When enabled, the states will be dumped to the logger when an exception occurs.\n     */\n    debug = false;\n\n    /**\n     * Priority of the current motion. Will be `MotionPriority.NONE` if there's no playing motion.\n     */\n    currentPriority = MotionPriority.NONE;\n\n    /**\n     * Priority of the reserved motion, which is still in loading and will be played once loaded.\n     * Will be `MotionPriority.NONE` if there's no reserved motion.\n     */\n    reservePriority = MotionPriority.NONE;\n\n    /**\n     * Group of current motion.\n     */\n    currentGroup?: string;\n\n    /**\n     * Index of current motion in its group.\n     */\n    currentIndex?: number;\n\n    /**\n     * Group of the reserved motion.\n     */\n    reservedGroup?: string;\n\n    /**\n     * Index of the reserved motion in its group.\n     */\n    reservedIndex?: number;\n\n    /**\n     * Group of the reserved idle motion.\n     */\n    reservedIdleGroup?: string;\n\n    /**\n     * Index of the reserved idle motion in its group.\n     */\n    reservedIdleIndex?: number;\n\n    /**\n     * Reserves the playback for a motion.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @param priority - The priority to be applied.\n     * @return True if the reserving has succeeded.\n     */\n    reserve(group: string, index: number, priority: MotionPriority): boolean {\n        if (priority <= MotionPriority.NONE) {\n            logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n            return false;\n        }\n\n        if (group === this.currentGroup && index === this.currentIndex) {\n            logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n            return false;\n        }\n\n        if ((group === this.reservedGroup && index === this.reservedIndex) || (group === this.reservedIdleGroup && index === this.reservedIdleIndex)) {\n            logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n            return false;\n        }\n\n        if (priority === MotionPriority.IDLE) {\n            if (this.currentPriority !== MotionPriority.NONE) {\n                logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n                return false;\n            }\n\n            if (this.reservedIdleGroup !== undefined) {\n                logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n                return false;\n            }\n\n            this.setReservedIdle(group, index);\n        } else {\n            if (priority < MotionPriority.FORCE) {\n                if (priority <= this.currentPriority) {\n                    logger.log(this.tag, 'Cannot start motion because another motion is playing as an equivalent or higher priority.', this.dump(group, index));\n                    return false;\n                }\n\n                if (priority <= this.reservePriority) {\n                    logger.log(this.tag, 'Cannot start motion because another motion has reserved as an equivalent or higher priority.', this.dump(group, index));\n                    return false;\n                }\n            }\n\n            this.setReserved(group, index, priority);\n        }\n\n        return true;\n    }\n\n    /**\n     * Requests the playback for a motion.\n     * @param motion - The Motion, can be undefined.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @param priority - The priority to be applied.\n     * @return True if the request has been approved, i.e. the motion is allowed to play.\n     */\n    start(motion: any, group: string, index: number, priority: MotionPriority): boolean {\n        if (priority === MotionPriority.IDLE) {\n            this.setReservedIdle(undefined, undefined);\n\n            if (this.currentPriority !== MotionPriority.NONE) {\n                logger.log(this.tag, 'Cannot start idle motion because another motion is playing.', this.dump(group, index));\n                return false;\n            }\n        } else {\n            if (group !== this.reservedGroup || index !== this.reservedIndex) {\n                logger.log(this.tag, 'Cannot start motion because another motion has taken the place.', this.dump(group, index));\n                return false;\n            }\n\n            this.setReserved(undefined, undefined, MotionPriority.NONE);\n        }\n\n        if (!motion) {\n            return false;\n        }\n\n        this.setCurrent(group, index, priority);\n\n        return true;\n    }\n\n    /**\n     * Notifies the motion playback has finished.\n     */\n    complete() {\n        this.setCurrent(undefined, undefined, MotionPriority.NONE);\n    }\n\n    /**\n     * Sets the current motion.\n     */\n    setCurrent(group: string | undefined, index: number | undefined, priority: MotionPriority) {\n        this.currentPriority = priority;\n        this.currentGroup = group;\n        this.currentIndex = index;\n    }\n\n    /**\n     * Sets the reserved motion.\n     */\n    setReserved(group: string | undefined, index: number | undefined, priority: MotionPriority) {\n        this.reservePriority = priority;\n        this.reservedGroup = group;\n        this.reservedIndex = index;\n    }\n\n    /**\n     * Sets the reserved idle motion.\n     */\n    setReservedIdle(group: string | undefined, index: number | undefined) {\n        this.reservedIdleGroup = group;\n        this.reservedIdleIndex = index;\n    }\n\n    /**\n     * Checks if a Motion is currently playing or has reserved.\n     * @return True if active.\n     */\n    isActive(group: string, index: number): boolean {\n        return (group === this.currentGroup && index === this.currentIndex)\n            || (group === this.reservedGroup && index === this.reservedIndex)\n            || (group === this.reservedIdleGroup && index === this.reservedIdleIndex);\n    }\n\n    /**\n     * Resets the state.\n     */\n    reset() {\n        this.setCurrent(undefined, undefined, MotionPriority.NONE);\n\n        // make sure the reserved motions (if existing) won't start when they are loaded\n        this.setReserved(undefined, undefined, MotionPriority.NONE);\n        this.setReservedIdle(undefined, undefined);\n    }\n\n    /**\n     * Checks if an idle motion should be requests to play.\n     */\n    shouldRequestIdleMotion(): boolean {\n        return this.currentGroup === undefined && this.reservedIdleGroup === undefined;\n    }\n\n    /**\n     * Checks if the model's expression should be overridden by the motion.\n     */\n    shouldOverrideExpression(): boolean {\n        return this.currentPriority > MotionPriority.IDLE;\n    }\n\n    /**\n     * Dumps the state for debugging.\n     */\n    dump(requestedGroup?: string, requestedIndex?: number): string {\n        if (this.debug) {\n            const keys: (keyof this & string)[] = [\n                'currentPriority',\n                'reservePriority',\n                'currentGroup',\n                'currentIndex',\n                'reservedGroup',\n                'reservedIndex',\n                'reservedIdleGroup',\n                'reservedIdleIndex',\n            ];\n            return `\\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\\n` + keys.map(key => '[' + key + '] ' + this[key]).join('\\n');\n        }\n        return '';\n    }\n}\n","import { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport { logger } from '@/utils';\nimport { EventEmitter } from '@pixi/utils';\n\n/**\n * Abstract expression manager.\n * @emits {@link ExpressionManagerEvents}\n */\nexport abstract class ExpressionManager<Expression = any, ExpressionSpec = any> extends EventEmitter {\n    /**\n     * Tag for logging.\n     */\n    tag: string;\n\n    /**\n     * Expression definitions copied from ModelSettings.\n     */\n    abstract readonly definitions: ExpressionSpec[];\n\n    /**\n     * The ModelSettings reference.\n     */\n    readonly settings: ModelSettings;\n\n    /**\n     * The Expressions. The structure is the same as {@link definitions}, initially there's only\n     * an empty array, which means all expressions will be `undefined`. When an Expression has\n     * been loaded, it'll fill the place in which it should be; when it fails to load,\n     * the place will be filled with `null`.\n     */\n    expressions: (Expression | null | undefined)[] = [];\n\n    /**\n     * An empty Expression to reset all the expression parameters.\n     */\n    defaultExpression!: Expression;\n\n    /**\n     * Current Expression. This will not be overwritten by the {@link defaultExpression}.\n     */\n    currentExpression!: Expression;\n\n    /**\n     * The pending Expression.\n     */\n    reserveExpressionIndex = -1;\n\n    /**\n     * Flags the instance has been destroyed.\n     */\n    destroyed = false;\n\n    protected constructor(settings: ModelSettings, options?: MotionManagerOptions) {\n        super();\n        this.settings = settings;\n        this.tag = `ExpressionManager(${settings.name})`;\n    }\n\n    /**\n     * Should be called in the constructor of derived class.\n     */\n    protected init() {\n        this.defaultExpression = this.createExpression({}, undefined);\n        this.currentExpression = this.defaultExpression;\n\n        this.stopAllExpressions();\n    }\n\n    /**\n     * Loads an Expression. Errors in this method will not be thrown,\n     * but be emitted with an \"expressionLoadError\" event.\n     * @param index - Index of the expression in definitions.\n     * @return Promise that resolves with the Expression, or with undefined if it can't be loaded.\n     * @emits {@link ExpressionManagerEvents.expressionLoaded}\n     * @emits {@link ExpressionManagerEvents.expressionLoadError}\n     */\n    protected async loadExpression(index: number): Promise<Expression | undefined> {\n        if (!this.definitions[index]) {\n            logger.warn(this.tag, `Undefined expression at [${index}]`);\n            return undefined;\n        }\n\n        if (this.expressions[index] === null) {\n            logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n            return undefined;\n        }\n\n        if (this.expressions[index]) {\n            return this.expressions[index] as Expression;\n        }\n\n        const expression = await this._loadExpression(index);\n\n        this.expressions[index] = expression;\n\n        return expression;\n    }\n\n    /**\n     * Loads the Expression. Will be implemented by Live2DFactory.\n     * @ignore\n     */\n    private _loadExpression(index: number): Promise<Expression | undefined> {\n        throw new Error('Not implemented.');\n    }\n\n    /**\n     * Sets a random Expression that differs from current one.\n     * @return Promise that resolves with true if succeeded, with false otherwise.\n     */\n    async setRandomExpression(): Promise<boolean> {\n        if (this.definitions.length) {\n            const availableIndices = [];\n\n            for (let i = 0; i < this.definitions.length; i++) {\n                if (\n                    this.expressions[i] !== null\n                    && this.expressions[i] !== this.currentExpression\n                    && i !== this.reserveExpressionIndex\n                ) {\n                    availableIndices.push(i);\n                }\n            }\n\n            if (availableIndices.length) {\n                const index = Math.floor(Math.random() * availableIndices.length);\n\n                return this.setExpression(index);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Resets model's expression using {@link defaultExpression}.\n     */\n    resetExpression(): void {\n        this._setExpression(this.defaultExpression);\n    }\n\n    /**\n     * Restores model's expression to {@link currentExpression}.\n     */\n    restoreExpression(): void {\n        this._setExpression(this.currentExpression);\n    }\n\n    /**\n     * Sets an Expression.\n     * @param index - Either the index, or the name of the expression.\n     * @return Promise that resolves with true if succeeded, with false otherwise.\n     */\n    async setExpression(index: number | string): Promise<boolean> {\n        if (typeof index !== 'number') {\n            index = this.getExpressionIndex(index);\n        }\n\n        if (!(index > -1 && index < this.definitions.length)) {\n            return false;\n        }\n\n        if (index === this.expressions.indexOf(this.currentExpression)) {\n            return false;\n        }\n\n        this.reserveExpressionIndex = index;\n\n        const expression = await this.loadExpression(index);\n\n        if (!expression || this.reserveExpressionIndex !== index) {\n            return false;\n        }\n\n        this.reserveExpressionIndex = -1;\n        this.currentExpression = expression;\n        this._setExpression(expression);\n\n        return true;\n    }\n\n    /**\n     * Updates parameters of the core model.\n     * @return True if the parameters are actually updated.\n     */\n    update(model: object, now: DOMHighResTimeStamp) {\n        if (!this.isFinished()) {\n            return this.updateParameters(model, now);\n        }\n\n        return false;\n    }\n\n    /**\n     * Destroys the instance.\n     * @emits {@link ExpressionManagerEvents.destroy}\n     */\n    destroy() {\n        this.destroyed = true;\n        this.emit('destroy');\n\n        const self = this as Mutable<Partial<this>>;\n        self.definitions = undefined;\n        self.expressions = undefined;\n    }\n\n    /**\n     * Checks if the expression playback has finished.\n     */\n    abstract isFinished(): boolean;\n\n    /**\n     * Retrieves the expression's index by its name.\n     * @return The index. `-1` if not found.\n     */\n    abstract getExpressionIndex(name: string): number;\n\n    /**\n     * Retrieves the expression's file path by its definition.\n     * @return The file path extracted from given definition. Not resolved.\n     */\n    abstract getExpressionFile(definition: ExpressionSpec): string;\n\n    /**\n     * Creates an Expression from the data.\n     * @param data - Content of the expression file.\n     * @param definition - The expression definition. Can be undefined when creating the {@link defaultExpression}.\n     * @return The created Expression.\n     */\n    abstract createExpression(data: JSONObject, definition: ExpressionSpec | undefined): Expression;\n\n    /**\n     * Applies the Expression to the model.\n     */\n    protected abstract _setExpression(motion: Expression): number;\n\n    /**\n     * Cancels expression playback.\n     */\n    protected abstract stopAllExpressions(): void;\n\n    /**\n     * Updates parameters of the core model.\n     * @return True if the parameters are actually updated.\n     */\n    protected abstract updateParameters(model: object, now: DOMHighResTimeStamp): boolean;\n}\n","import { clamp } from '@/utils';\n\n// Minimum distance to respond\nconst EPSILON = 0.01;\n\nconst MAX_SPEED = 40 / 7.5;\n\n// the time to accelerate to max speed\nconst ACCELERATION_TIME = 1 / (0.15 * 1000);\n\n/**\n * Interpolates the transition of focus position.\n */\nexport class FocusController {\n    /** The focus position. */\n    targetX = 0;\n\n    /** The focus position. */\n    targetY = 0;\n\n    /** Current position. */\n    x = 0;\n\n    /** Current position. */\n    y = 0;\n\n    /** Current velocity. */\n    vx = 0;\n\n    /** Current velocity. */\n    vy = 0;\n\n    /**\n     * Sets the focus position.\n     * @param x - X position in range `[-1, 1]`.\n     * @param y - Y position in range `[-1, 1]`.\n     * @param instant - Should the focus position be instantly applied.\n     */\n    focus(x: number, y: number, instant: boolean = false) {\n        this.targetX = clamp(x, -1, 1);\n        this.targetY = clamp(y, -1, 1);\n\n        if (instant) {\n            this.x = this.targetX;\n            this.y = this.targetY;\n        }\n    }\n\n    /**\n     * Updates the interpolation.\n     * @param dt - Delta time in milliseconds.\n     */\n    update(dt: DOMHighResTimeStamp) {\n        const dx = this.targetX - this.x;\n        const dy = this.targetY - this.y;\n\n        if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON) return;\n\n        const d = Math.sqrt(dx ** 2 + dy ** 2);\n        const maxSpeed = MAX_SPEED / (1000 / dt);\n\n        let ax = maxSpeed * (dx / d) - this.vx;\n        let ay = maxSpeed * (dy / d) - this.vy;\n\n        const a = Math.sqrt(ax ** 2 + ay ** 2);\n        const maxA = maxSpeed * ACCELERATION_TIME * dt;\n\n        if (a > maxA) {\n            ax *= maxA / a;\n            ay *= maxA / a;\n        }\n\n        this.vx += ax;\n        this.vy += ay;\n\n        const v = Math.sqrt(this.vx ** 2 + this.vy ** 2);\n        const maxV = 0.5 * (Math.sqrt(maxA ** 2 + 8 * maxA * d) - maxA);\n\n        if (v > maxV) {\n            this.vx *= maxV / v;\n            this.vy *= maxV / v;\n        }\n\n        this.x += this.vx;\n        this.y += this.vy;\n    }\n}\n","import { folderName } from '@/utils';\nimport { url } from '@pixi/utils';\n\n/**\n * Parses, and provides access to the settings JSON.\n */\nexport abstract class ModelSettings {\n    json: JSONObject;\n\n    /**\n     * The model's name, typically used for displaying or logging. By default it's inferred from\n     * the URL by taking the folder name (the second to last component). In Cubism 2 it'll be overwritten\n     * by the `name` field of settings JSON.\n     */\n    name: string;\n\n    /**\n     * URL of the model settings file, used to resolve paths of the resource files defined in settings.\n     * This typically ends with `.model.json` in Cubism 2 and `.model3.json` in Cubism 4.\n     */\n    url: string;\n\n    /**\n     * Relative path of he moc file, typically ends with `.moc` in Cubism 2 and `.moc3` in Cubism 4.\n     */\n    abstract moc: string;\n\n    /**\n     * Relative paths of the texture images.\n     */\n    abstract textures: string[];\n\n    /**\n     * Relative path of the pose file.\n     */\n    pose?: string;\n\n    /**\n     * Relative path of the physics file.\n     */\n    physics?: string;\n\n    /**\n     * @param json - The settings JSON object.\n     * @param json.url - The `url` field must be defined to specify the settings file's URL.\n     */\n    protected constructor(json: JSONObject & { url: string }) {\n        this.json = json;\n\n        let url = (json as any).url;\n\n        if (typeof url !== 'string') {\n            // this is not allowed because it'll typically result in errors, including a\n            // fatal error - an OOM that crashes the browser while initializing this cubism2 model,\n            // I'm not kidding!\n            throw new TypeError('The `url` field in settings JSON must be defined as a string.');\n        }\n\n        this.url = url;\n\n        // set default name to folder's name\n        this.name = folderName(this.url);\n    }\n\n    /**\n     * Resolves a relative path using the {@link url}. This is used to resolve the resource files\n     * defined in the settings.\n     * @param path - Relative path.\n     * @return Resolved path.\n     */\n    resolveURL(path: string): string {\n        return url.resolve(this.url, path);\n    }\n\n    /**\n     * Replaces the resource files by running each file through the `replacer`.\n     * @param replacer - Invoked with two arguments: `(file, path)`, where `file` is the file definition,\n     * and `path` is its property path in the ModelSettings instance. A string must be returned to be the replacement.\n     *\n     * ```js\n     * modelSettings.replaceFiles((file, path) => {\n     *     // file = \"foo.moc\", path = \"moc\"\n     *     // file = \"foo.png\", path = \"textures[0]\"\n     *     // file = \"foo.mtn\", path = \"motions.idle[0].file\"\n     *     // file = \"foo.motion3.json\", path = \"motions.idle[0].File\"\n     *\n     *     return \"bar/\" + file;\n     * });\n     * ```\n     */\n    replaceFiles(replacer: (file: string, path: string) => string) {\n        this.moc = replacer(this.moc, 'moc');\n\n        if (this.pose !== undefined) {\n            (this.pose = replacer(this.pose, 'pose'));\n        }\n\n        if (this.physics !== undefined) {\n            (this.physics = replacer(this.physics, 'physics'));\n        }\n\n        for (let i = 0; i < this.textures.length; i++) {\n            this.textures[i] = replacer(this.textures[i]!, `textures[${i}]`);\n        }\n    };\n\n    /**\n     * Retrieves all resource files defined in the settings.\n     * @return A flat array of the paths of all resource files.\n     *\n     * ```js\n     * modelSettings.getDefinedFiles();\n     * // returns: [\"foo.moc\", \"foo.png\", ...]\n     * ```\n     */\n    getDefinedFiles(): string[] {\n        const files: string[] = [];\n\n        this.replaceFiles((file: string) => {\n            files.push(file);\n\n            return file;\n        });\n\n        return files;\n    }\n\n    /**\n     * Validates that the files defined in the settings exist in given files. Each file will be\n     * resolved by {@link resolveURL} before comparison.\n     * @param files - A flat array of file paths.\n     * @return All the files which are defined in the settings and also exist in given files,\n     * *including the optional files*.\n     * @throws Error if any *essential* file is defined in settings but not included in given files.\n     */\n    validateFiles(files: string[]): string[] {\n        const assertFileExists = (expectedFile: string, shouldThrow: boolean): boolean => {\n            const actualPath = this.resolveURL(expectedFile);\n\n            if (!files.includes(actualPath)) {\n                if (shouldThrow) {\n                    throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n                }\n\n                return false;\n            }\n\n            return true;\n        };\n\n        const essentialFiles = [this.moc, ...this.textures];\n\n        essentialFiles.forEach(texture => assertFileExists(texture, true));\n\n        const definedFiles = this.getDefinedFiles();\n\n        return definedFiles.filter(file => assertFileExists(file, false));\n    }\n}\n","import { logger } from '@/utils';\nimport pull from 'lodash/pull';\n\nconst TAG = 'SoundManager';\nconst VOLUME = 0.5;\n\n/**\n * Manages all the sounds.\n */\nexport class SoundManager {\n    /**\n     * Audio elements playing or pending to play. Finished audios will be removed automatically.\n     */\n    static audios: HTMLAudioElement[] = [];\n\n    protected static _volume = VOLUME;\n\n    /**\n     * Global volume that applies to all the sounds.\n     */\n    static get volume(): number {\n        return this._volume;\n    }\n\n    static set volume(value: number) {\n        this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n        this.audios.forEach(audio => (audio.volume = this._volume));\n    }\n\n    // TODO: return an ID?\n    /**\n     * Creates an audio element and adds it to the {@link audios}.\n     * @param file - URL of the sound file.\n     * @param onFinish - Callback invoked when the playback has finished.\n     * @param onError - Callback invoked when error occurs.\n     * @return Created audio element.\n     */\n    static add(file: string, onFinish?: () => void, onError?: (e: Error) => void): HTMLAudioElement {\n        const audio = new Audio(file);\n\n        audio.volume = this._volume;\n        audio.preload = 'auto';\n\n        audio.addEventListener('ended', () => {\n            this.dispose(audio);\n            onFinish?.();\n        });\n\n        audio.addEventListener('error', (e: ErrorEvent) => {\n            this.dispose(audio);\n            logger.warn(TAG, `Error occurred on \"${file}\"`, e.error);\n            onError?.(e.error);\n        });\n\n        this.audios.push(audio);\n\n        return audio;\n    }\n\n    /**\n     * Plays the sound.\n     * @param audio - An audio element.\n     * @return Promise that resolves when the audio is ready to play, rejects when error occurs.\n     */\n    static play(audio: HTMLAudioElement): Promise<void> {\n        return new Promise((resolve, reject) => {\n            // see https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n            audio.play()?.catch(e => {\n                audio.dispatchEvent(new ErrorEvent('error', { error: e }));\n                reject(e);\n            });\n\n            if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n                resolve();\n            } else {\n                audio.addEventListener('canplaythrough', resolve as () => void);\n            }\n        });\n    }\n\n    /**\n     * Disposes an audio element and removes it from {@link audios}.\n     * @param audio - An audio element.\n     */\n    static dispose(audio: HTMLAudioElement): void {\n        audio.pause();\n        audio.removeAttribute('src');\n\n        pull(this.audios, audio);\n    }\n\n    /**\n     * Destroys all managed audios.\n     */\n    static destroy(): void {\n        // dispose() removes given audio from the array, so the loop must be backward\n        for (let i = this.audios.length - 1; i >= 0; i--) {\n            this.dispose(this.audios[i]!);\n        }\n    }\n}\n","import { config } from '@/config';\nimport { ExpressionManager } from '@/cubism-common/ExpressionManager';\nimport { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { MotionPriority, MotionState } from '@/cubism-common/MotionState';\nimport { SoundManager } from '@/cubism-common/SoundManager';\nimport { logger } from '@/utils';\nimport { EventEmitter } from '@pixi/utils';\n\nexport interface MotionManagerOptions {\n    /**\n     * How to preload the motions.\n     * @default {@link MotionPreloadStrategy.NONE}\n     */\n    motionPreload?: MotionPreloadStrategy;\n\n    /**\n     * Specifies the idle motion group.\n     * @default \"idle\" in Cubism 2 and \"Idle\" in Cubism 4.\n     */\n    idleMotionGroup?: string;\n}\n\n/**\n * Indicates how the motions will be preloaded.\n */\nexport enum MotionPreloadStrategy {\n    /** Preload all the motions. */\n    ALL = 'ALL',\n\n    /** Preload only the idle motions. */\n    IDLE = 'IDLE',\n\n    /** No preload. */\n    NONE = 'NONE',\n}\n\n/**\n * Handles the motion playback.\n * @emits {@link MotionManagerEvents}\n */\nexport abstract class MotionManager<Motion = any, MotionSpec = any> extends EventEmitter {\n    /**\n     * Tag for logging.\n     */\n    tag: string;\n\n    /**\n     * Motion definitions copied from ModelSettings.\n     */\n    abstract readonly definitions: Partial<Record<string, MotionSpec[]>>;\n\n    /**\n     * Motion groups with particular internal usages. Currently there's only the `idle` field,\n     * which specifies the actual name of the idle motion group, so the idle motions\n     * can be correctly found from the settings JSON of various Cubism versions.\n     */\n    abstract readonly groups: { idle: string };\n\n    /**\n     * Indicates the content type of the motion files, varies in different Cubism versions.\n     * This will be used as `xhr.responseType`.\n     */\n    abstract readonly motionDataType: 'json' | 'arraybuffer';\n\n    /**\n     * Can be undefined if the settings defines no expression.\n     */\n    abstract expressionManager?: ExpressionManager;\n\n    /**\n     * The ModelSettings reference.\n     */\n    readonly settings: ModelSettings;\n\n    /**\n     * The Motions. The structure is the same as {@link definitions}, initially each group contains\n     * an empty array, which means all motions will be `undefined`. When a Motion has been loaded,\n     * it'll fill the place in which it should be; when it fails to load, the place will be filled\n     * with `null`.\n     */\n    motionGroups: Partial<Record<string, (Motion | undefined | null)[]>> = {};\n\n    /**\n     * Maintains the state of this MotionManager.\n     */\n    state = new MotionState();\n\n    /**\n     * Audio element of the current motion if a sound file is defined with it.\n     */\n    currentAudio?: HTMLAudioElement;\n\n    /**\n     * Flags there's a motion playing.\n     */\n    playing = false;\n\n    /**\n     * Flags the instances has been destroyed.\n     */\n    destroyed = false;\n\n    protected constructor(settings: ModelSettings, options?: MotionManagerOptions) {\n        super();\n        this.settings = settings;\n        this.tag = `MotionManager(${settings.name})`;\n        this.state.tag = this.tag;\n    }\n\n    /**\n     * Should be called in the constructor of derived class.\n     */\n    protected init(options?: MotionManagerOptions) {\n        if (options?.idleMotionGroup) {\n            this.groups.idle = options.idleMotionGroup;\n        }\n\n        this.setupMotions(options);\n        this.stopAllMotions();\n    }\n\n    /**\n     * Sets up motions from the definitions, and preloads them according to the preload strategy.\n     */\n    protected setupMotions(options?: MotionManagerOptions): void {\n        for (const group of Object.keys(this.definitions)) {\n            // init with the same structure of definitions\n            this.motionGroups[group] = [];\n        }\n\n        // preload motions\n\n        let groups;\n\n        switch (options?.motionPreload) {\n            case MotionPreloadStrategy.NONE:\n                return;\n\n            case MotionPreloadStrategy.ALL:\n                groups = Object.keys(this.definitions);\n                break;\n\n            case MotionPreloadStrategy.IDLE:\n            default:\n                groups = [this.groups.idle];\n                break;\n        }\n\n        for (const group of groups) {\n            if (this.definitions[group]) {\n                for (let i = 0; i < this.definitions[group]!.length; i++) {\n                    this.loadMotion(group, i).then();\n                }\n            }\n        }\n    }\n\n    /**\n     * Loads a Motion in a motion group. Errors in this method will not be thrown,\n     * but be emitted with a \"motionLoadError\" event.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @return Promise that resolves with the Motion, or with undefined if it can't be loaded.\n     * @emits {@link MotionManagerEvents.motionLoaded}\n     * @emits {@link MotionManagerEvents.motionLoadError}\n     */\n    async loadMotion(group: string, index: number): Promise<Motion | undefined> {\n        if (!this.definitions[group] ?. [index]) {\n            logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n            return undefined;\n        }\n\n        if (this.motionGroups[group]![index] === null) {\n            logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n            return undefined;\n        }\n\n        if (this.motionGroups[group]![index]) {\n            return this.motionGroups[group]![index]!;\n        }\n\n        const motion = await this._loadMotion(group, index);\n\n        if (this.destroyed) {\n            return;\n        }\n\n        this.motionGroups[group]![index] = motion ?? null;\n\n        return motion;\n    }\n\n    // TODO: remove\n    /**\n     * Loads the Motion. Will be implemented by Live2DFactory.\n     * @ignore\n     */\n    private _loadMotion(group: string, index: number): Promise<Motion | undefined> {\n        throw new Error('Not implemented.');\n    }\n\n    /**\n     * Starts a motion as given priority.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @param priority - The priority to be applied.\n     * @return Promise that resolves with true if the motion is successfully started, with false otherwise.\n     */\n    async startMotion(group: string, index: number, priority = MotionPriority.NORMAL): Promise<boolean> {\n        if (!this.state.reserve(group, index, priority)) {\n            return false;\n        }\n\n        const definition = this.definitions[group]?.[index];\n\n        if (!definition) {\n            return false;\n        }\n\n        if (this.currentAudio) {\n            // TODO: reuse the audio?\n            SoundManager.dispose(this.currentAudio);\n        }\n\n        let audio: HTMLAudioElement | undefined;\n\n        if (config.sound) {\n            const soundURL = this.getSoundFile(definition);\n\n            if (soundURL) {\n                try {\n                    // start to load the audio\n                    audio = SoundManager.add(\n                        this.settings.resolveURL(soundURL),\n                        () => this.currentAudio = undefined,\n                        () => this.currentAudio = undefined,\n                    );\n\n                    this.currentAudio = audio;\n                } catch (e) {\n                    logger.warn(this.tag, 'Failed to create audio', soundURL, e);\n                }\n            }\n        }\n\n        const motion = await this.loadMotion(group, index);\n\n        if (audio) {\n            const readyToPlay = SoundManager.play(audio)\n                .catch(e => logger.warn(this.tag, 'Failed to play audio', audio!.src, e));\n\n            if (config.motionSync) {\n                // wait until the audio is ready\n                await readyToPlay;\n            }\n        }\n\n        if (!this.state.start(motion, group, index, priority)) {\n            if (audio) {\n                SoundManager.dispose(audio);\n                this.currentAudio = undefined;\n            }\n\n            return false;\n        }\n\n        logger.log(this.tag, 'Start motion:', this.getMotionName(definition));\n\n        this.emit('motionStart', group, index, audio);\n\n        if (this.state.shouldOverrideExpression()) {\n            this.expressionManager && this.expressionManager.resetExpression();\n        }\n\n        this.playing = true;\n\n        this._startMotion(motion!);\n\n        return true;\n    }\n\n    /**\n     * Starts a random Motion as given priority.\n     * @param group - The motion group.\n     * @param priority - The priority to be applied.\n     * @return Promise that resolves with true if the motion is successfully started, with false otherwise.\n     */\n    async startRandomMotion(group: string, priority?: MotionPriority): Promise<boolean> {\n        const groupDefs = this.definitions[group];\n\n        if (groupDefs?.length) {\n            const availableIndices = [];\n\n            for (let i = 0; i < groupDefs!.length; i++) {\n                if (this.motionGroups[group]![i] !== null && !this.state.isActive(group, i)) {\n                    availableIndices.push(i);\n                }\n            }\n\n            if (availableIndices.length) {\n                const index = Math.floor(Math.random() * availableIndices.length);\n\n                return this.startMotion(group, availableIndices[index]!, priority);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Stops all playing motions as well as the sound.\n     */\n    stopAllMotions(): void {\n        this._stopAllMotions();\n\n        this.state.reset();\n\n        if (this.currentAudio) {\n            SoundManager.dispose(this.currentAudio);\n            this.currentAudio = undefined;\n        }\n    }\n\n    /**\n     * Updates parameters of the core model.\n     * @param model - The core model.\n     * @param now - Current time in milliseconds.\n     * @return True if the parameters have been actually updated.\n     */\n    update(model: object, now: DOMHighResTimeStamp): boolean {\n        if (this.isFinished()) {\n            if (this.playing) {\n                this.playing = false;\n                this.emit('motionFinish');\n            }\n\n            if (this.state.shouldOverrideExpression()) {\n                this.expressionManager?.restoreExpression();\n            }\n\n            this.state.complete();\n\n            if (this.state.shouldRequestIdleMotion()) {\n                // noinspection JSIgnoredPromiseFromCall\n                this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n            }\n        }\n\n        return this.updateParameters(model, now);\n    }\n\n    /**\n     * Destroys the instance.\n     * @emits {@link MotionManagerEvents.destroy}\n     */\n    destroy() {\n        this.destroyed = true;\n        this.emit('destroy');\n\n        this.stopAllMotions();\n        this.expressionManager?.destroy();\n\n        const self = this as Mutable<Partial<this>>;\n        self.definitions = undefined;\n        self.motionGroups = undefined;\n    }\n\n    /**\n     * Checks if the motion playback has finished.\n     */\n    abstract isFinished(): boolean;\n\n    /**\n     * Creates a Motion from the data.\n     * @param data - Content of the motion file. The format must be consistent with {@link motionDataType}.\n     * @param group - The motion group.\n     * @param definition - The motion definition.\n     * @return The created Motion.\n     */\n    abstract createMotion(data: ArrayBuffer | JSONObject, group: string, definition: MotionSpec): Motion;\n\n    /**\n     * Retrieves the motion's file path by its definition.\n     * @return The file path extracted from given definition. Not resolved.\n     */\n    abstract getMotionFile(definition: MotionSpec): string;\n\n    /**\n     * Retrieves the motion's name by its definition.\n     * @return The motion's name.\n     */\n    protected abstract getMotionName(definition: MotionSpec): string;\n\n    /**\n     * Retrieves the motion's sound file by its definition.\n     * @return The motion's sound file, can be undefined.\n     */\n    protected abstract getSoundFile(definition: MotionSpec): string | undefined;\n\n    /**\n     * Starts the Motion.\n     */\n    protected abstract _startMotion(motion: Motion, onFinish?: (motion: Motion) => void): number;\n\n    /**\n     * Stops all playing motions.\n     */\n    protected abstract _stopAllMotions(): void;\n\n    /**\n     * Updates parameters of the core model.\n     * @param model - The core model.\n     * @param now - Current time in milliseconds.\n     * @return True if the parameters have been actually updated.\n     */\n    protected abstract updateParameters(model: object, now: DOMHighResTimeStamp): boolean;\n}\n","import { LOGICAL_HEIGHT, LOGICAL_WIDTH } from '@/cubism-common/constants';\nimport { FocusController } from '@/cubism-common/FocusController';\nimport { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { MotionManager, MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport { Matrix } from '@pixi/math';\nimport { EventEmitter } from '@pixi/utils';\n\n/**\n * Common layout definition shared between all Cubism versions.\n */\nexport interface CommonLayout {\n    centerX?: number;\n    centerY?: number;\n    x?: number;\n    y?: number;\n    width?: number;\n    height?: number;\n    top?: number;\n    bottom?: number;\n    left?: number;\n    right?: number;\n}\n\n/**\n * Common hit area definition shared between all Cubism versions.\n */\nexport interface CommonHitArea {\n    id: string;\n    name: string;\n    index: number;\n}\n\nexport interface Bounds {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface InternalModelOptions extends MotionManagerOptions {}\n\nconst tempBounds: Bounds = { x: 0, y: 0, width: 0, height: 0 };\n\n/**\n * A wrapper that manages the states of a Live2D core model, and delegates all operations to it.\n * @emits {@link InternalModelEvents}\n */\nexport abstract class InternalModel extends EventEmitter {\n    /**\n     * The managed Live2D core model.\n     */\n    abstract readonly coreModel: object;\n\n    abstract readonly settings: ModelSettings;\n\n    focusController = new FocusController();\n\n    abstract motionManager: MotionManager;\n\n    pose?: any;\n    physics?: any;\n\n    /**\n     * Original canvas width of the model. Note this doesn't represent the model's real size,\n     * as the model can overflow from its canvas.\n     */\n    readonly originalWidth: number = 0;\n\n    /**\n     * Original canvas height of the model. Note this doesn't represent the model's real size,\n     * as the model can overflow from its canvas.\n     */\n    readonly originalHeight: number = 0;\n\n    /**\n     * Canvas width of the model, scaled by the `width` of the model's layout.\n     */\n    readonly width: number = 0;\n\n    /**\n     * Canvas height of the model, scaled by the `height` of the model's layout.\n     */\n    readonly height: number = 0;\n\n    /**\n     * Local transformation, calculated from the model's layout.\n     */\n    localTransform = new Matrix();\n\n    /**\n     * The final matrix to draw the model.\n     */\n    drawingMatrix = new Matrix();\n\n    // TODO: change structure\n    /**\n     * The hit area definitions, keyed by their names.\n     */\n    hitAreas: Record<string, CommonHitArea> = {};\n\n    /**\n     * Flags whether `gl.UNPACK_FLIP_Y_WEBGL` should be enabled when binding the textures.\n     */\n    textureFlipY = false;\n\n    /**\n     * WebGL viewport when drawing the model. The format is `[x, y, width, height]`.\n     */\n    viewport: [number, number, number, number] = [0, 0, 0, 0];\n\n    /**\n     * Flags this instance has been destroyed.\n     */\n    destroyed = false;\n\n    /**\n     * Should be called in the constructor of derived class.\n     */\n    protected init() {\n        this.setupLayout();\n        this.setupHitAreas();\n    }\n\n    /**\n     * Sets up the model's size and local transform by the model's layout.\n     */\n    protected setupLayout() {\n        // cast `this` to be mutable\n        const self = this as Mutable<this>;\n\n        const size = this.getSize();\n\n        self.originalWidth = size[0];\n        self.originalHeight = size[1];\n\n        const layout = Object.assign(\n            {\n                width: LOGICAL_WIDTH,\n                height: LOGICAL_HEIGHT,\n            },\n            this.getLayout(),\n        );\n\n        this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n\n        self.width = this.originalWidth * this.localTransform.a;\n        self.height = this.originalHeight * this.localTransform.d;\n\n        // this calculation differs from Live2D SDK...\n        const offsetX = (layout.x !== undefined && layout.x - layout.width / 2)\n            || (layout.centerX !== undefined && layout.centerX)\n            || (layout.left !== undefined && layout.left - layout.width / 2)\n            || (layout.right !== undefined && layout.right + layout.width / 2)\n            || 0;\n\n        const offsetY = (layout.y !== undefined && layout.y - layout.height / 2)\n            || (layout.centerY !== undefined && layout.centerY)\n            || (layout.top !== undefined && layout.top - layout.height / 2)\n            || (layout.bottom !== undefined && layout.bottom + layout.height / 2)\n            || 0;\n\n        this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n    }\n\n    /**\n     * Sets up the hit areas by their definitions in settings.\n     */\n    protected setupHitAreas() {\n        const definitions = this.getHitAreaDefs().filter(hitArea => hitArea.index >= 0);\n\n        for (const def of definitions) {\n            this.hitAreas[def.name] = def;\n        }\n    }\n\n    /**\n     * Hit-test on the model.\n     * @param x - Position in model canvas.\n     * @param y - Position in model canvas.\n     * @return The names of the *hit* hit areas. Can be empty if none is hit.\n     */\n    hitTest(x: number, y: number): string[] {\n        return Object.keys(this.hitAreas).filter(hitAreaName => this.isHit(hitAreaName, x, y));\n    }\n\n    /**\n     * Hit-test for a single hit area.\n     * @param hitAreaName - The hit area's name.\n     * @param x - Position in model canvas.\n     * @param y - Position in model canvas.\n     * @return True if hit.\n     */\n    isHit(hitAreaName: string, x: number, y: number): boolean {\n        if (!this.hitAreas[hitAreaName]) {\n            return false;\n        }\n\n        const drawIndex = this.hitAreas[hitAreaName]!.index;\n\n        const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n\n        return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n    }\n\n    /**\n     * Gets a drawable's bounds.\n     * @param index - Index of the drawable.\n     * @param bounds - Object to store the output values.\n     * @return The bounds in model canvas space.\n     */\n    getDrawableBounds(index: number, bounds?: Bounds): Bounds {\n        const vertices = this.getDrawableVertices(index);\n\n        let left = vertices[0]!;\n        let right = vertices[0]!;\n        let top = vertices[1]!;\n        let bottom = vertices[1]!;\n\n        for (let i = 0; i < vertices.length; i += 2) {\n            const vx = vertices[i]!;\n            const vy = vertices[i + 1]!;\n\n            left = Math.min(vx, left);\n            right = Math.max(vx, right);\n            top = Math.min(vy, top);\n            bottom = Math.max(vy, bottom);\n        }\n\n        bounds ??= {} as Bounds;\n\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left;\n        bounds.height = bottom - top;\n\n        return bounds;\n    }\n\n    /**\n     * Updates the model's transform.\n     * @param transform - The world transform.\n     */\n    updateTransform(transform: Matrix) {\n        this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n    }\n\n    /**\n     * Updates the model's parameters.\n     * @param dt - Elapsed time in milliseconds from last frame.\n     * @param now - Current time in milliseconds.\n     */\n    update(dt: DOMHighResTimeStamp, now: DOMHighResTimeStamp): void {\n        this.focusController.update(dt);\n    };\n\n    /**\n     * Destroys the model and all related resources.\n     * @emits {@link InternalModelEvents.destroy | destroy}\n     */\n    destroy() {\n        this.destroyed = true;\n        this.emit('destroy');\n\n        this.motionManager.destroy();\n        (this as Partial<this>).motionManager = undefined;\n    }\n\n    /**\n     * Gets all the hit area definitions.\n     * @return Normalized definitions.\n     */\n    protected abstract getHitAreaDefs(): CommonHitArea[];\n\n    /**\n     * Gets the model's original canvas size.\n     * @return `[width, height]`\n     */\n    protected abstract getSize(): [number, number];\n\n    /**\n     * Gets the layout definition.\n     * @return Normalized definition.\n     */\n    protected abstract getLayout(): CommonLayout;\n\n    /**\n     * Gets all the drawables' IDs.\n     * @return IDs.\n     */\n    abstract getDrawableIDs(): string[];\n\n    /**\n     * Finds the index of a drawable by its ID.\n     * @return The index.\n     */\n    abstract getDrawableIndex(id: string): number;\n\n    /**\n     * Gets a drawable's vertices.\n     * @param index - Either the index or the ID of the drawable.\n     * @throws Error when the drawable cannot be found.\n     */\n    abstract getDrawableVertices(index: number | string): Float32Array;\n\n    /**\n     * Updates WebGL context bound to this model.\n     * @param gl - WebGL context.\n     * @param glContextID - Unique ID for given WebGL context.\n     */\n    abstract updateWebGLContext(gl: WebGLRenderingContext, glContextID: number): void;\n\n    /**\n     * Binds a texture to the model. The index must be the same as that of this texture\n     * in the {@link ModelSettings.textures} array.\n     */\n    abstract bindTexture(index: number, texture: WebGLTexture): void;\n\n    /**\n     * Draws the model.\n     */\n    abstract draw(gl: WebGLRenderingContext): void;\n}\n","import { Live2DLoaderContext, Live2DLoaderTarget } from '@/factory/Live2DLoader';\nimport { logger } from '@/utils';\nimport { Middleware } from '@/utils/middleware';\n\nconst TAG = 'XHRLoader';\n\nclass NetworkError extends Error {\n    constructor(message: string, public url: string, public status: number, public aborted = false) {\n        super(message);\n    }\n}\n\n/**\n * The basic XHR loader.\n *\n * A network error will be thrown with the following properties:\n * - `url` - The request URL.\n * - `status` - The HTTP status.\n * - `aborted` - True if the error is caused by aborting the XHR.\n */\nexport class XHRLoader {\n    /**\n     * All the created XHRs, keyed by their owners respectively.\n     */\n    static xhrMap = new WeakMap<Live2DLoaderTarget, Set<XMLHttpRequest>>();\n\n    /**\n     * All the created XHRs as a flat array.\n     */\n    static allXhrSet = new Set<XMLHttpRequest>();\n\n    /**\n     * Middleware for Live2DLoader.\n     */\n    static loader: Middleware<Live2DLoaderContext> = (context, next) => {\n        return new Promise<void>((resolve, reject) => {\n            const xhr = XHRLoader.createXHR(\n                context.target,\n                context.settings ? context.settings.resolveURL(context.url) : context.url,\n                context.type,\n                data => {\n                    context.result = data;\n                    resolve();\n                },\n                reject,\n            );\n            xhr.send();\n        });\n    };\n\n    /**\n     * Creates a managed XHR.\n     * @param target - If provided, the XHR will be canceled when receiving an \"destroy\" event from the target.\n     * @param url - The URL.\n     * @param type - The XHR response type.\n     * @param onload - Load listener.\n     * @param onerror - Error handler.\n     */\n    static createXHR<T = any>(\n        target: Live2DLoaderTarget | undefined,\n        url: string,\n        type: XMLHttpRequestResponseType,\n        onload: (data: T) => void,\n        onerror: (e: Error) => void,\n    ): XMLHttpRequest {\n        const xhr = new XMLHttpRequest();\n\n        XHRLoader.allXhrSet.add(xhr);\n\n        if (target) {\n            let xhrSet = XHRLoader.xhrMap.get(target);\n\n            if (!xhrSet) {\n                xhrSet = new Set([xhr]);\n                XHRLoader.xhrMap.set(target, xhrSet);\n            } else {\n                xhrSet.add(xhr);\n            }\n\n            if (!target.listeners('destroy').includes(XHRLoader.cancelXHRs)) {\n                target.once('destroy', XHRLoader.cancelXHRs);\n            }\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = type;\n        xhr.onload = () => {\n            if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n                onload(xhr.response);\n            } else {\n                (xhr.onerror as any)();\n            }\n        };\n        xhr.onerror = () => {\n            logger.warn(TAG, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url}`);\n            onerror(new NetworkError('Network error.', url, xhr.status));\n        };\n        xhr.onabort = () => onerror(new NetworkError('Aborted.', url, xhr.status, true));\n        xhr.onloadend = () => {\n            XHRLoader.allXhrSet.delete(xhr);\n\n            if (target) {\n                XHRLoader.xhrMap.get(target)?.delete(xhr);\n            }\n        };\n\n        return xhr;\n    }\n\n    /**\n     * Cancels all XHRs related to this target.\n     */\n    static cancelXHRs(this: Live2DLoaderTarget) {\n        XHRLoader.xhrMap.get(this)?.forEach(xhr => {\n            xhr.abort();\n            XHRLoader.allXhrSet.delete(xhr);\n        });\n        XHRLoader.xhrMap.delete(this);\n    }\n\n    /**\n     * Release all XHRs.\n     */\n    static release() {\n        XHRLoader.allXhrSet.forEach(xhr => xhr.abort());\n        XHRLoader.allXhrSet.clear();\n        XHRLoader.xhrMap = new WeakMap();\n    }\n}\n","export type Middleware<T> = (context: T, next: (err?: any) => Promise<void>) => Promise<void>\n\n/**\n * Run middlewares with given context.\n * @see https://github.com/koajs/compose/blob/master/index.js\n *\n * @param middleware\n * @param context\n */\nexport function runMiddlewares<T>(middleware: Middleware<T>[], context: T): Promise<void> {\n    // last called middleware #\n    let index = -1;\n    return dispatch(0);\n\n    function dispatch(i: number, err?: Error): Promise<void> {\n        if (err) return Promise.reject(err);\n        if (i <= index) return Promise.reject(new Error('next() called multiple times'));\n        index = i;\n        const fn = middleware[i];\n        if (!fn) return Promise.resolve();\n        try {\n            return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    }\n}\n","import { ExpressionManager, InternalModel, ModelSettings, MotionManager } from '@/cubism-common';\nimport { XHRLoader } from '@/factory/XHRLoader';\nimport { Live2DModel } from '@/Live2DModel';\nimport { Middleware, runMiddlewares } from '@/utils/middleware';\n\nexport type Live2DLoaderTarget = Live2DModel | InternalModel | MotionManager | ExpressionManager\n\n/**\n * The context transferred through Live2DLoader middlewares.\n */\nexport interface Live2DLoaderContext {\n    /** The XHR's response type. */\n    type: XMLHttpRequestResponseType;\n\n    /** Will be resolved by {@link ModelSettings.resolveURL} if a ModelSettings is provided. */\n    url: string;\n\n    /** If provided, the given URL will be resolved by {@link ModelSettings.resolveURL}. */\n    settings?: ModelSettings;\n\n    /**\n     * Owner of this resource. The load task will be automatically canceled\n     * when receiving an \"destroy\" event from the target.\n     */\n    target?: Live2DLoaderTarget;\n\n    /** Loaded data. */\n    result?: any;\n}\n\nexport class Live2DLoader {\n    static middlewares: Middleware<Live2DLoaderContext>[] = [XHRLoader.loader];\n\n    /**\n     * Loads a resource.\n     * @return Promise that resolves with the loaded data in a format that's consistent with the specified `type`.\n     */\n    static load<T = any>(context: Live2DLoaderContext): Promise<T> {\n        return runMiddlewares(this.middlewares, context).then(() => context.result);\n    }\n}\n","import { Middleware } from '@/utils/middleware';\nimport { Live2DLoader } from '@/factory/Live2DLoader';\nimport { ModelSettings } from '@/cubism-common';\nimport { logger } from '@/utils';\nimport { createTexture } from '@/factory/texture';\nimport { Live2DFactory, Live2DFactoryContext } from '@/factory/Live2DFactory';\n\nconst TAG = 'Live2DFactory';\n\n/**\n * A middleware that converts the source from a URL to a settings JSON object.\n */\nexport const urlToJSON: Middleware<Live2DFactoryContext> = async (context, next) => {\n    if (typeof context.source === 'string') {\n        const data = await Live2DLoader.load({\n            url: context.source,\n            type: 'json',\n            target: context.live2dModel,\n        });\n\n        data.url = context.source;\n\n        context.source = data;\n\n        context.live2dModel.emit('settingsJSONLoaded', data);\n    }\n\n    return next();\n};\n\n/**\n * A middleware that converts the source from a settings JSON object to a ModelSettings instance.\n */\nexport const jsonToSettings: Middleware<Live2DFactoryContext> = async (context, next) => {\n    if (context.source instanceof ModelSettings) {\n        context.settings = context.source;\n\n        return next();\n    } else if (typeof context.source === 'object') {\n        const runtime = Live2DFactory.findRuntime(context.source);\n\n        if (runtime) {\n            const settings = runtime.createModelSettings(context.source);\n\n            context.settings = settings;\n            context.live2dModel.emit('settingsLoaded', settings);\n\n            return next();\n        }\n    }\n\n    throw new TypeError('Unknown settings format.');\n};\n\nexport const waitUntilReady: Middleware<Live2DFactoryContext> = (context, next) => {\n    if (context.settings) {\n        const runtime = Live2DFactory.findRuntime(context.settings);\n\n        if (runtime) {\n            return runtime.ready().then(next);\n        }\n    }\n\n    return next();\n};\n\n/**\n * A middleware that populates the Live2DModel with optional resources.\n * Requires InternalModel in context when all the subsequent middlewares have finished.\n */\nexport const setupOptionals: Middleware<Live2DFactoryContext> = async (context, next) => {\n    // wait until all has finished\n    await next();\n\n    const internalModel = context.internalModel;\n\n    if (internalModel) {\n        const settings = context.settings!;\n        const runtime = Live2DFactory.findRuntime(settings);\n\n        if (runtime) {\n            const tasks: Promise<void>[] = [];\n\n            if (settings.pose) {\n                tasks.push(\n                    Live2DLoader.load({\n                            settings,\n                            url: settings.pose,\n                            type: 'json',\n                            target: internalModel,\n                        })\n                        .then((data: ArrayBuffer) => {\n                            internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n                            context.live2dModel.emit('poseLoaded', internalModel.pose);\n                        })\n                        .catch((e: Error) => {\n                            context.live2dModel.emit('poseLoadError', e);\n                            logger.warn(TAG, 'Failed to load pose.', e);\n                        }),\n                );\n            }\n\n            if (settings.physics) {\n                tasks.push(\n                    Live2DLoader.load({\n                            settings,\n                            url: settings.physics,\n                            type: 'json',\n                            target: internalModel,\n                        })\n                        .then((data: ArrayBuffer) => {\n                            internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n                            context.live2dModel.emit('physicsLoaded', internalModel.physics);\n                        })\n                        .catch((e: Error) => {\n                            context.live2dModel.emit('physicsLoadError', e);\n                            logger.warn(TAG, 'Failed to load physics.', e);\n                        }),\n                );\n            }\n\n            if (tasks.length) {\n                await Promise.all(tasks);\n            }\n        }\n    }\n};\n\n/**\n * A middleware that populates the Live2DModel with essential resources.\n * Requires ModelSettings in context immediately, and InternalModel in context\n * when all the subsequent middlewares have finished.\n */\nexport const setupEssentials: Middleware<Live2DFactoryContext> = async (context, next) => {\n    if (context.settings) {\n        const live2DModel = context.live2dModel;\n\n        const textureLoadings = context.settings.textures.map(tex => {\n            const url = context.settings!.resolveURL(tex);\n            return createTexture(url, { crossOrigin: context.options.crossOrigin });\n        });\n\n        // wait for the internal model to be created\n        await next();\n\n        if (context.internalModel) {\n            live2DModel.internalModel = context.internalModel;\n            live2DModel.emit('modelLoaded', context.internalModel);\n        } else {\n            throw new TypeError('Missing internal model.');\n        }\n\n        live2DModel.textures = await Promise.all(textureLoadings);\n        live2DModel.emit('textureLoaded', live2DModel.textures);\n    } else {\n        throw new TypeError('Missing settings.');\n    }\n};\n\n/**\n * A middleware that creates the InternalModel. Requires ModelSettings in context.\n */\nexport const createInternalModel: Middleware<Live2DFactoryContext> = async (context, next) => {\n    const settings = context.settings;\n\n    if (settings instanceof ModelSettings) {\n        const runtime = Live2DFactory.findRuntime(settings);\n\n        if (!runtime) {\n            throw new TypeError('Unknown model settings.');\n        }\n\n        const modelData = await Live2DLoader.load<ArrayBuffer>({\n            settings,\n            url: settings.moc,\n            type: 'arraybuffer',\n            target: context.live2dModel,\n        });\n\n        if (!runtime.isValidMoc(modelData)) {\n            throw new Error('Invalid moc data');\n        }\n\n        const coreModel = runtime.createCoreModel(modelData);\n\n        context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n\n        return next();\n    }\n\n    throw new TypeError('Missing settings.');\n};\n","import { Texture } from '@pixi/core';\n\nexport function createTexture(url: string, options: { crossOrigin?: string } = {}): Promise<Texture> {\n    const textureOptions: any = { resourceOptions: { crossorigin: options.crossOrigin } };\n\n    // there's already such a method since Pixi v5.3.0\n    if ((Texture as any).fromURL) {\n        return Texture.fromURL(url, textureOptions).catch(e => {\n            if (e instanceof Error) {\n                throw e;\n            }\n\n            // assume e is an ErrorEvent, let's convert it to an Error\n            const err = new Error('Texture loading error');\n            (err as any).event = e;\n\n            throw err;\n        });\n    }\n\n    // and in order to provide backward compatibility for older Pixi versions,\n    // we have to manually implement this method\n    // see https://github.com/pixijs/pixi.js/pull/6687/files\n\n    textureOptions.resourceOptions.autoLoad = false;\n\n    const texture = Texture.from(url, textureOptions);\n\n    if (texture.baseTexture.valid) {\n        return Promise.resolve(texture);\n    }\n\n    const resource = texture.baseTexture.resource as any;\n\n    // before Pixi v5.2.2, the Promise will not be rejected when loading has failed,\n    // we have to manually handle the \"error\" event\n    // see https://github.com/pixijs/pixi.js/pull/6374\n    resource._live2d_load ??= new Promise<Texture>((resolve, reject) => {\n        const errorHandler = (event: ErrorEvent) => {\n            (resource.source as HTMLImageElement).removeEventListener('error', errorHandler);\n\n            // convert the ErrorEvent to an Error\n            const err = new Error('Texture loading error');\n            (err as any).event = event;\n\n            reject(err);\n        };\n\n        (resource.source as HTMLImageElement).addEventListener('error', errorHandler);\n\n        (resource.load() as Promise<unknown>).then(() => resolve(texture)).catch(errorHandler);\n    });\n\n    return resource._live2d_load;\n}\n","import { ExpressionManager, InternalModel, ModelSettings, MotionManager } from '@/cubism-common';\nimport { Live2DLoader } from '@/factory/Live2DLoader';\nimport { Live2DModel, Live2DModelOptions } from '@/Live2DModel';\nimport { logger } from '@/utils';\nimport { Middleware, runMiddlewares } from '@/utils/middleware';\nimport {\n    createInternalModel,\n    jsonToSettings,\n    setupEssentials,\n    setupOptionals,\n    urlToJSON,\n    waitUntilReady,\n} from '@/factory/model-middlewares';\n\nexport interface Live2DFactoryOptions extends Live2DModelOptions {\n    /**\n     * String to use for crossOrigin properties on `<img>` elements when loading textures.\n     * @default undefined\n     */\n    crossOrigin?: string;\n\n    /**\n     * Callback invokes when the model has been loaded.\n     * @default undefined\n     */\n    onLoad?(): void;\n\n    /**\n     * Callback invokes when error occurs while loading the model.\n     * @default undefined\n     */\n    onError?(e: Error): void;\n}\n\n/**\n * The context transferred through the model creation middlewares.\n */\nexport interface Live2DFactoryContext {\n    source: any,\n    options: Live2DFactoryOptions;\n    live2dModel: Live2DModel;\n    internalModel?: InternalModel;\n    settings?: ModelSettings;\n}\n\n/**\n * Represents a Cubism version.\n */\nexport interface Live2DRuntime {\n    /**\n     * The version number. Higher version takes priority when matching the runtime.\n     */\n    version: number;\n\n    /**\n     * Checks if the source belongs to this runtime.\n     * @param source - Either a settings JSON object or a ModelSettings instance.\n     * @return True if the source belongs to this runtime.\n     */\n    test(source: any): boolean;\n\n    // TODO: remove\n    ready(): Promise<void>;\n\n    /**\n     * Checks if the data is a valid moc to create the core model.\n     * @param modelData - The moc content.\n     * @return True if the data is valid.\n     */\n    isValidMoc(modelData: ArrayBuffer): boolean;\n\n    /**\n     * Creates a ModelSettings.\n     * @param json - The settings JSON object.\n     * @return Created ModelSettings.\n     */\n    createModelSettings(json: JSONObject): ModelSettings;\n\n    /**\n     * Creates a core model.\n     * @param data - Content of the moc file.\n     * @return Created core model.\n     */\n    createCoreModel(data: ArrayBuffer): any;\n\n    /**\n     * Creates an InternalModel.\n     * @param coreModel - Core model that *must* belong to this runtime.\n     * @param settings - ModelSettings of this model.\n     * @param options - Options that will be passed to the InternalModel's constructor.\n     * @return Created InternalModel.\n     */\n    createInternalModel(coreModel: any, settings: ModelSettings, options?: Live2DFactoryOptions): InternalModel;\n\n    /**\n     * Creates a pose.\n     * @param coreModel - Core model that *must* belong to this runtime.\n     * @param data - Content of the pose file.\n     * @return Created pose.\n     */\n    createPose(coreModel: any, data: any): any;\n\n    /**\n     * Creates a physics.\n     * @param coreModel - Core model that *must* belong to this runtime.\n     * @param data - Content of the physics file.\n     * @return Created physics.\n     */\n    createPhysics(coreModel: any, data: any): any;\n}\n\n/**\n * Handles all the network load tasks.\n *\n * - Model creation: requested by {@link Live2DModel.from}.\n * - Motion loading: implements the load method of MotionManager.\n * - Expression loading: implements the load method of ExpressionManager.\n */\nexport class Live2DFactory {\n    /**\n     * All registered runtimes, sorted by versions in descending order.\n     */\n    static runtimes: Live2DRuntime[] = [];\n\n    static urlToJSON = urlToJSON;\n    static jsonToSettings = jsonToSettings;\n    static waitUntilReady = waitUntilReady;\n    static setupOptionals = setupOptionals;\n    static setupEssentials = setupEssentials;\n    static createInternalModel = createInternalModel;\n\n    /**\n     * Middlewares to run through when setting up a Live2DModel.\n     */\n    static live2DModelMiddlewares: Middleware<Live2DFactoryContext>[] = [\n        urlToJSON, jsonToSettings, waitUntilReady, setupOptionals, setupEssentials, createInternalModel,\n    ];\n\n    /**\n     * load tasks of each motion. The structure of each value in this map\n     * is the same as respective {@link MotionManager.definitions}.\n     */\n    static motionTasksMap = new WeakMap<MotionManager, Record<string, (Promise<any> | undefined)[]>>();\n\n    /**\n     * Load tasks of each expression.\n     */\n    static expressionTasksMap = new WeakMap<ExpressionManager, (Promise<any> | undefined)[]>();\n\n    /**\n     * Registers a Live2DRuntime.\n     */\n    static registerRuntime(runtime: Live2DRuntime) {\n        Live2DFactory.runtimes.push(runtime);\n\n        // higher version as higher priority\n        Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n    }\n\n    /**\n     * Finds a runtime that matches given source.\n     * @param source - Either a settings JSON object or a ModelSettings instance.\n     * @return The Live2DRuntime, or undefined if not found.\n     */\n    static findRuntime(source: any): Live2DRuntime | undefined {\n        for (const runtime of Live2DFactory.runtimes) {\n            if (runtime.test(source)) {\n                return runtime;\n            }\n        }\n    }\n\n    /**\n     * Sets up a Live2DModel, populating it with all defined resources.\n     * @param live2dModel - The Live2DModel instance.\n     * @param source - Can be one of: settings file URL, settings JSON object, ModelSettings instance.\n     * @param options - Options for the process.\n     * @return Promise that resolves when all resources have been loaded, rejects when error occurs.\n     */\n    static async setupLive2DModel<IM extends InternalModel>(live2dModel: Live2DModel<IM>, source: string | object | IM['settings'], options?: Live2DFactoryOptions): Promise<void> {\n        const textureLoaded = new Promise(resolve => live2dModel.once('textureLoaded', resolve));\n        const modelLoaded = new Promise(resolve => live2dModel.once('modelLoaded', resolve));\n\n        // because the \"ready\" event is supposed to be emitted after\n        // both the internal model and textures have been loaded,\n        // we should here wrap the emit() in a then() so it'll\n        // be executed after all the handlers of \"modelLoaded\" and \"textureLoaded\"\n        const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit('ready'));\n\n        await runMiddlewares(Live2DFactory.live2DModelMiddlewares, {\n            live2dModel: live2dModel as Live2DModel<InternalModel>,\n            source,\n            options: options || {},\n        });\n\n        // the \"load\" event should never be emitted before \"ready\"\n        await readyEventEmitted;\n\n        live2dModel.emit('load');\n    }\n\n    /**\n     * Loads a Motion and registers the task to {@link motionTasksMap}. The task will be automatically\n     * canceled when its owner - the MotionManager instance - has been destroyed.\n     * @param motionManager - MotionManager that owns this Motion.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @return Promise that resolves with the Motion, or with undefined if it can't be loaded.\n     */\n    static loadMotion<Motion, MotionSpec>(motionManager: MotionManager<Motion, MotionSpec>, group: string, index: number): Promise<Motion | undefined> {\n        // errors in this method are always handled\n        const handleError = (e: any) => motionManager.emit('motionLoadError', group, index, e);\n\n        try {\n            const definition = motionManager.definitions[group] ?. [index];\n\n            if (!definition) {\n                return Promise.resolve(undefined);\n            }\n\n            if (!motionManager.listeners('destroy').includes(Live2DFactory.releaseTasks)) {\n                motionManager.once('destroy', Live2DFactory.releaseTasks);\n            }\n\n            let tasks = Live2DFactory.motionTasksMap.get(motionManager);\n\n            if (!tasks) {\n                tasks = {};\n                Live2DFactory.motionTasksMap.set(motionManager, tasks);\n            }\n\n            let taskGroup = tasks[group];\n\n            if (!taskGroup) {\n                taskGroup = [];\n                tasks[group] = taskGroup;\n            }\n\n            const path = motionManager.getMotionFile(definition);\n\n            taskGroup[index] ??= Live2DLoader.load({\n                    url: path,\n                    settings: motionManager.settings,\n                    type: motionManager.motionDataType,\n                    target: motionManager,\n                })\n                .then(data => {\n                    const taskGroup = Live2DFactory.motionTasksMap.get(motionManager)?.[group];\n\n                    if (taskGroup) {\n                        delete taskGroup[index];\n                    }\n\n                    const motion = motionManager.createMotion(data, group, definition);\n\n                    motionManager.emit('motionLoaded', group, index, motion);\n\n                    return motion;\n                })\n                .catch(e => {\n                    logger.warn(motionManager.tag, `Failed to load motion: ${path}\\n`, e);\n                    handleError(e);\n                });\n\n            return taskGroup[index]!;\n        } catch (e) {\n            logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\\n`, e);\n            handleError(e);\n        }\n\n        return Promise.resolve(undefined);\n    }\n\n    /**\n     * Loads an Expression and registers the task to {@link expressionTasksMap}. The task will be automatically\n     * canceled when its owner - the ExpressionManager instance - has been destroyed.\n     * @param expressionManager - ExpressionManager that owns this Expression.\n     * @param index - Index of the Expression.\n     * @return Promise that resolves with the Expression, or with undefined if it can't be loaded.\n     */\n    static loadExpression<Expression, ExpressionSpec>(expressionManager: ExpressionManager<Expression, ExpressionSpec>, index: number): Promise<Expression | undefined> {\n        // errors in this method are always handled\n        const handleError = (e: any) => expressionManager.emit('expressionLoadError', index, e);\n\n        try {\n            const definition = expressionManager.definitions[index];\n\n            if (!definition) {\n                return Promise.resolve(undefined);\n            }\n\n            if (!expressionManager.listeners('destroy').includes(Live2DFactory.releaseTasks)) {\n                expressionManager.once('destroy', Live2DFactory.releaseTasks);\n            }\n\n            let tasks = Live2DFactory.expressionTasksMap.get(expressionManager);\n\n            if (!tasks) {\n                tasks = [];\n                Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n            }\n\n            const path = expressionManager.getExpressionFile(definition);\n\n            tasks[index] ??= Live2DLoader.load({\n                    url: path,\n                    settings: expressionManager.settings,\n                    type: 'json',\n                    target: expressionManager,\n                })\n                .then(data => {\n                    const tasks = Live2DFactory.expressionTasksMap.get(expressionManager);\n\n                    if (tasks) {\n                        delete tasks[index];\n                    }\n\n                    const expression = expressionManager.createExpression(data, definition);\n\n                    expressionManager.emit('expressionLoaded', index, expression);\n\n                    return expression;\n                })\n                .catch(e => {\n                    logger.warn(expressionManager.tag, `Failed to load expression: ${path}\\n`, e);\n                    handleError(e);\n                });\n\n            return tasks[index]!;\n        } catch (e) {\n            logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\\n`, e);\n            handleError(e);\n        }\n\n        return Promise.resolve(undefined);\n    }\n\n    static releaseTasks(this: MotionManager | ExpressionManager) {\n        if (this instanceof MotionManager) {\n            Live2DFactory.motionTasksMap.delete(this);\n        } else {\n            Live2DFactory.expressionTasksMap.delete(this);\n        }\n    }\n}\n\n(MotionManager.prototype as any)._loadMotion = function(this: MotionManager, group: string, index: number) {\n    return Live2DFactory.loadMotion(this, group, index);\n};\n\n(ExpressionManager.prototype as any)._loadExpression = function(this: ExpressionManager, index: number) {\n    return Live2DFactory.loadExpression(this, index);\n};\n","import { InteractionEvent, InteractionManager } from '@pixi/interaction';\nimport { Live2DModel } from './Live2DModel';\n\n/**\n * The interaction control split from Live2DModel class for code clarity. This mixin should *only*\n * be used on the Live2DModel.\n */\nexport class InteractionMixin {\n    private _autoInteract = false;\n\n    /**\n     * Enables automatic interaction. Only takes effect if Pixi's interaction\n     * feature has been enabled (by registering the `PIXI.InteractionManager` into `PIXI.Renderer`).\n     */\n    get autoInteract(): boolean {\n        return this._autoInteract;\n    }\n\n    set autoInteract(autoInteract: boolean) {\n        if (autoInteract !== this._autoInteract) {\n            if (autoInteract) {\n                (this as any as Live2DModel<any>).on('pointertap', onTap, this);\n            } else {\n                (this as any as Live2DModel<any>).off('pointertap', onTap, this);\n            }\n\n            this._autoInteract = autoInteract;\n        }\n    }\n\n    /**\n     * Local reference used to clean up the event listeners when destroying the model.\n     */\n    interactionManager?: InteractionManager;\n\n    /**\n     * Registers interaction by subscribing to the `PIXI.InteractionManager`.\n     */\n    registerInteraction(this: Live2DModel<any>, manager?: InteractionManager): void {\n        if (manager !== this.interactionManager) {\n            this.unregisterInteraction();\n\n            if (this._autoInteract && manager) {\n                this.interactionManager = manager;\n\n                manager.on('pointermove', onPointerMove, this);\n            }\n        }\n    }\n\n    /**\n     * Unregisters interaction.\n     */\n    unregisterInteraction(this: Live2DModel<any>): void {\n        if (this.interactionManager) {\n            this.interactionManager?.off('pointermove', onPointerMove, this);\n            this.interactionManager = undefined;\n        }\n    }\n}\n\nfunction onTap(this: Live2DModel<any>, event: InteractionEvent): void {\n    this.tap(event.data.global.x, event.data.global.y);\n}\n\nfunction onPointerMove(this: Live2DModel<any>, event: InteractionEvent) {\n    this.focus(event.data.global.x, event.data.global.y);\n}\n","import { Transform } from '@pixi/math';\n\n/**\n * Useless class. May be useful in the future.\n */\nexport class Live2DTransform extends Transform {\n}\n","import { InternalModel, ModelSettings, MotionPriority } from '@/cubism-common';\nimport { MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport type { Live2DFactoryOptions } from '@/factory/Live2DFactory';\nimport { Live2DFactory } from '@/factory/Live2DFactory';\nimport { Renderer, Texture } from '@pixi/core';\nimport { Container } from '@pixi/display';\nimport { Matrix, ObservablePoint, Point, Rectangle } from '@pixi/math';\nimport { Ticker } from '@pixi/ticker';\nimport { InteractionMixin } from './InteractionMixin';\nimport { Live2DTransform } from './Live2DTransform';\nimport { applyMixins, logger } from './utils';\n\nexport interface Live2DModelOptions extends MotionManagerOptions {\n    /**\n     * Should the internal model be automatically updated by `PIXI.Ticker.shared`.\n     * @default ture\n     */\n    autoUpdate?: boolean;\n\n    /**\n     * Should the internal model automatically reacts to interactions by listening for pointer events.\n     * @see {@link InteractionMixin}\n     * @default true\n     */\n    autoInteract?: boolean;\n}\n\nconst tempPoint = new Point();\nconst tempMatrix = new Matrix();\n\n// a reference to Ticker class, defaults to window.PIXI.Ticker (when loaded by a <script> tag)\nlet TickerClass: typeof Ticker | undefined = (window as any).PIXI?.Ticker;\n\nexport interface Live2DModel<IM extends InternalModel = InternalModel> extends InteractionMixin {}\n\nexport type Live2DConstructor = { new(options?: Live2DModelOptions): Live2DModel }\n\n/**\n * A wrapper that allows the Live2D model to be used as a DisplayObject in PixiJS.\n *\n * ```js\n * const model = await Live2DModel.from('shizuku.model.json');\n * container.add(model);\n * ```\n * @emits {@link Live2DModelEvents}\n */\nexport class Live2DModel<IM extends InternalModel = InternalModel> extends Container {\n    /**\n     * Creates a Live2DModel from given source.\n     * @param source - Can be one of: settings file URL, settings JSON object, ModelSettings instance.\n     * @param options - Options for the creation.\n     * @return Promise that resolves with the Live2DModel.\n     */\n    static from<M extends Live2DConstructor = typeof Live2DModel>(this: M, source: string | JSONObject | ModelSettings, options?: Live2DFactoryOptions): Promise<InstanceType<M>> {\n        const model = new this(options) as InstanceType<M>;\n\n        return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n    }\n\n    /**\n     * Synchronous version of `Live2DModel.from()`. This method immediately returns a Live2DModel instance,\n     * whose resources have not been loaded. Therefore this model can't be manipulated or rendered\n     * until the \"load\" event has been emitted.\n     *\n     * ```js\n     * // no `await` here as it's not a Promise\n     * const model = Live2DModel.fromSync('shizuku.model.json');\n     *\n     * // these will cause errors!\n     * // app.stage.addChild(model);\n     * // model.motion('tap_body');\n     *\n     * model.once('load', () => {\n     *     // now it's safe\n     *     app.stage.addChild(model);\n     *     model.motion('tap_body');\n     * });\n     * ```\n     */\n    static fromSync<M extends Live2DConstructor = typeof Live2DModel>(this: M, source: string | JSONObject | ModelSettings, options?: Live2DFactoryOptions): InstanceType<M> {\n        const model = new this(options) as InstanceType<M>;\n\n        Live2DFactory.setupLive2DModel(model, source, options).then(options?.onLoad).catch(options?.onError);\n\n        return model;\n    }\n\n    /**\n     * Registers the class of `PIXI.Ticker` for auto updating.\n     */\n    static registerTicker(tickerClass: typeof Ticker): void {\n        TickerClass = tickerClass;\n    }\n\n    /**\n     * Tag for logging.\n     */\n    tag = 'Live2DModel(uninitialized)';\n\n    /**\n     * The internal model. Though typed as non-nullable, it'll be undefined until the \"ready\" event is emitted.\n     */\n    internalModel!: IM;\n\n    /**\n     * Pixi textures.\n     */\n    textures: Texture[] = [];\n\n    /** @override */\n    transform = new Live2DTransform();\n\n    /**\n     * The anchor behaves like the one in `PIXI.Sprite`, where `(0, 0)` means the top left\n     * and `(1, 1)` means the bottom right.\n     */\n    anchor = new ObservablePoint(this.onAnchorChange, this, 0, 0) as ObservablePoint<any>; // cast the type because it breaks the casting of Live2DModel\n\n    /**\n     * An ID of Gl context that syncs with `renderer.CONTEXT_UID`. Used to check if the GL context has changed.\n     */\n    protected glContextID = -1;\n\n    /**\n     * Elapsed time in milliseconds since created.\n     */\n    elapsedTime: DOMHighResTimeStamp = performance.now();\n\n    /**\n     * Elapsed time in milliseconds from last frame to this frame.\n     */\n    deltaTime: DOMHighResTimeStamp = 0;\n\n    protected _autoUpdate = false;\n\n    /**\n     * Enables automatic updating. Requires {@link Live2DModel.registerTicker} or the global `window.PIXI.Ticker`.\n     */\n    get autoUpdate() {\n        return this._autoUpdate;\n    }\n\n    set autoUpdate(autoUpdate: boolean) {\n        if (autoUpdate) {\n            if (!this._destroyed) {\n                if (TickerClass) {\n                    TickerClass.shared.add(this.onTickerUpdate, this);\n\n                    this._autoUpdate = true;\n                } else {\n                    logger.warn(this.tag, 'No Ticker registered, please call Live2DModel.registerTicker(Ticker).');\n                }\n            }\n        } else {\n            TickerClass?.shared.remove(this.onTickerUpdate, this);\n\n            this._autoUpdate = false;\n        }\n    }\n\n    constructor(options?: Live2DModelOptions) {\n        super();\n\n        this.once('modelLoaded', () => this.init(options));\n    }\n\n    // TODO: rename\n    /**\n     * A handler of the \"modelLoaded\" event, invoked when the internal model has been loaded.\n     */\n    protected init(options?: Live2DModelOptions) {\n        this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n\n        const _options = Object.assign({\n            autoUpdate: true,\n            autoInteract: true,\n        }, options);\n\n        if (_options.autoInteract) {\n            this.interactive = true;\n        }\n\n        this.autoInteract = _options.autoInteract;\n        this.autoUpdate = _options.autoUpdate;\n    }\n\n    /**\n     * A callback that observes {@link anchor}, invoked when the anchor's values have been changed.\n     */\n    protected onAnchorChange(): void {\n        this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n    }\n\n    /**\n     * Shorthand to start a motion.\n     * @param group - The motion group.\n     * @param index - The index in this group. If not presented, a random motion will be started.\n     * @param priority - The motion priority. Defaults to `MotionPriority.NORMAL`.\n     * @return Promise that resolves with true if the motion is successfully started, with false otherwise.\n     */\n    motion(group: string, index?: number, priority?: MotionPriority): Promise<boolean> {\n        return index === undefined\n            ? this.internalModel.motionManager.startRandomMotion(group, priority)\n            : this.internalModel.motionManager.startMotion(group, index, priority);\n    }\n\n    /**\n     * Shorthand to set an expression.\n     * @param id - Either the index, or the name of the expression. If not presented, a random expression will be set.\n     * @return Promise that resolves with true if succeeded, with false otherwise.\n     */\n    expression(id?: number | string): Promise<boolean> {\n        if (this.internalModel.motionManager.expressionManager) {\n            return id === undefined\n                ? this.internalModel.motionManager.expressionManager.setRandomExpression()\n                : this.internalModel.motionManager.expressionManager.setExpression(id);\n        }\n        return Promise.resolve(false);\n    }\n\n    /**\n     * Updates the focus position. This will not cause the model to immediately look at the position,\n     * instead the movement will be interpolated.\n     * @param x - Position in world space.\n     * @param y - Position in world space.\n     * @param instant - Should the focus position be instantly applied.\n     */\n    focus(x: number, y: number, instant: boolean = false): void {\n        tempPoint.x = x;\n        tempPoint.y = y;\n\n        // we can pass `true` as the third argument to skip the update transform\n        // because focus won't take effect until the model is rendered,\n        // and a model being rendered will always get transform updated\n        this.toModelPosition(tempPoint, tempPoint, true);\n\n        this.internalModel.focusController.focus(\n            (tempPoint.x / this.internalModel.originalWidth) * 2 - 1,\n            -((tempPoint.y / this.internalModel.originalHeight) * 2 - 1),\n            instant,\n        );\n    }\n\n    /**\n     * Tap on the model. This will perform a hit-testing, and emit a \"hit\" event\n     * if at least one of the hit areas is hit.\n     * @param x - Position in world space.\n     * @param y - Position in world space.\n     * @emits {@link Live2DModelEvents.hit}\n     */\n    tap(x: number, y: number): void {\n        const hitAreaNames = this.hitTest(x, y);\n\n        if (hitAreaNames.length) {\n            logger.log(this.tag, `Hit`, hitAreaNames);\n\n            this.emit('hit', hitAreaNames);\n        }\n    }\n\n    /**\n     * Hit-test on the model.\n     * @param x - Position in world space.\n     * @param y - Position in world space.\n     * @return The names of the *hit* hit areas. Can be empty if none is hit.\n     */\n    hitTest(x: number, y: number): string[] {\n        tempPoint.x = x;\n        tempPoint.y = y;\n        this.toModelPosition(tempPoint, tempPoint);\n\n        return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n    }\n\n    /**\n     * Calculates the position in the canvas of original, unscaled Live2D model.\n     * @param position - A Point in world space.\n     * @param result - A Point to store the new value. Defaults to a new Point.\n     * @param skipUpdate - True to skip the update transform.\n     * @return The Point in model canvas space.\n     */\n    toModelPosition(position: Point, result: Point = position.clone(), skipUpdate?: boolean): Point {\n        if (!skipUpdate) {\n            this._recursivePostUpdateTransform();\n\n            if (!this.parent) {\n                (this.parent as any) = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                (this.parent as any) = null;\n            } else {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        this.transform.worldTransform.applyInverse(position, result);\n        this.internalModel.localTransform.applyInverse(result, result);\n\n        return result;\n    }\n\n    /**\n     * A method required by `PIXI.InteractionManager` to perform hit-testing.\n     * @param point - A Point in world space.\n     * @return True if the point is inside this model.\n     */\n    containsPoint(point: Point): boolean {\n        return this.getBounds(true).contains(point.x, point.y);\n    }\n\n    /** @override */\n    protected _calculateBounds(): void {\n        this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n    }\n\n    /**\n     * An update callback to be added to `PIXI.Ticker` and invoked every tick.\n     */\n    onTickerUpdate(): void {\n        this.update(TickerClass!.shared.deltaMS);\n    }\n\n    /**\n     * Updates the model. Note this method just updates the timer,\n     * and the actual update will be done right before rendering the model.\n     * @param dt - The elapsed time in milliseconds since last frame.\n     */\n    update(dt: DOMHighResTimeStamp): void {\n        this.deltaTime += dt;\n        this.elapsedTime += dt;\n\n        // don't call `this.internalModel.update()` here, because it requires WebGL context\n    }\n\n    /** @override */\n    protected _render(renderer: Renderer): void {\n        this.registerInteraction(renderer.plugins.interaction);\n\n        // reset certain systems in renderer to make Live2D's drawing system compatible with Pixi\n        renderer.batch.reset();\n        renderer.geometry.reset();\n        renderer.shader.reset();\n        renderer.state.reset();\n\n        let shouldUpdateTexture = false;\n\n        // when the WebGL context has changed\n        if (this.glContextID !== (renderer as any).CONTEXT_UID) {\n            this.glContextID = (renderer as any).CONTEXT_UID;\n\n            this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n\n            shouldUpdateTexture = true;\n        }\n\n        for (let i = 0; i < this.textures.length; i++) {\n            const texture = this.textures[i]!;\n\n            if (!texture.valid) {\n                continue;\n            }\n\n            if (shouldUpdateTexture || !(texture.baseTexture as any)._glTextures[this.glContextID]) {\n                renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n\n                // let the TextureSystem generate corresponding WebGLTexture, and bind to an arbitrary location\n                renderer.texture.bind(texture.baseTexture, 0);\n            }\n\n            // bind the WebGLTexture into Live2D core.\n            // because the Texture in Pixi can be shared between multiple DisplayObjects,\n            // it's unable to know if the WebGLTexture in this Texture has been destroyed (GCed) and regenerated,\n            // and therefore we always bind the texture at this moment no matter what\n            this.internalModel.bindTexture(i, (texture.baseTexture as any)._glTextures[this.glContextID].texture);\n\n            // manually update the GC counter so they won't be GCed while using this model\n            (texture.baseTexture as any).touched = renderer.textureGC.count;\n        }\n\n        const viewport = (renderer.framebuffer as any).viewport as Rectangle;\n        this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n\n        // update only if the time has changed, as the model will possibly be updated once but rendered multiple times\n        if (this.deltaTime) {\n            this.internalModel.update(this.deltaTime, this.elapsedTime);\n            this.deltaTime = 0;\n        }\n\n        const internalTransform = tempMatrix\n            .copyFrom(renderer.globalUniforms.uniforms.projectionMatrix)\n            .append(this.worldTransform);\n\n        this.internalModel.updateTransform(internalTransform);\n        this.internalModel.draw(renderer.gl);\n\n        // reset WebGL state and texture bindings\n        renderer.state.reset();\n        renderer.texture.reset();\n    }\n\n    /**\n     * Destroys the model and all related resources. This takes the same options and also\n     * behaves the same as `PIXI.Container#destroy`.\n     * @param options - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param [options.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'options' will be passed on to those calls.\n     * @param [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     */\n    destroy(options?: { children?: boolean, texture?: boolean, baseTexture?: boolean }): void {\n        this.emit('destroy');\n\n        // the setters will do the cleanup\n        this.autoUpdate = false;\n\n        this.unregisterInteraction();\n\n        if (options?.texture) {\n            this.textures.forEach(texture => texture.destroy(options.baseTexture));\n        }\n\n        this.internalModel.destroy();\n\n        super.destroy(options);\n    }\n}\n\napplyMixins(Live2DModel, [InteractionMixin]);\n","import { InternalModel, ModelSettings } from '@/cubism-common';\nimport { Live2DFactory, Live2DFactoryContext } from '@/factory';\nimport { Middleware } from '@/utils/middleware';\nimport { url as urlUtils } from '@pixi/utils';\n\ndeclare global {\n    interface File {\n        readonly webkitRelativePath: string;\n    }\n}\n\ndeclare module '@/cubism-common/ModelSettings' {\n    interface ModelSettings {\n        /** @ignore */\n        _objectURL?: string;\n    }\n}\n\nexport type ExtendedFileList = File[] & { settings?: ModelSettings }\n\n/**\n * Experimental loader to load resources from uploaded files.\n *\n * This loader relies on\n * [webkitRelativePath](https://developer.mozilla.org/en-US/docs/Web/API/File/webkitRelativePath)\n * to recognize the file path.\n *\n * Though named as a \"Loader\", this class has nothing to do with Live2DLoader,\n * it only contains a middleware for the Live2DFactory.\n */\nexport class FileLoader {\n    /**\n     * Stores all the object URLs of uploaded files.\n     */\n    static filesMap: {\n        [settingsFileURL: string]: {\n            [resourceFileURL: string]: string\n        }\n    } = {};\n\n    /**\n     * Resolves the path of a resource file to the object URL.\n     * @param settingsURL - Object URL of the settings file.\n     * @param filePath - Resource file path.\n     * @return Resolved object URL.\n     */\n    static resolveURL(settingsURL: string, filePath: string): string {\n        const resolved = FileLoader.filesMap[settingsURL]?.[filePath];\n\n        if (resolved === undefined) {\n            throw new Error('Cannot find this file from uploaded files: ' + filePath);\n        }\n\n        return resolved;\n    }\n\n    /**\n     * Middleware for Live2DFactory.\n     */\n    static factory: Middleware<Live2DFactoryContext> = async (context, next) => {\n        if (Array.isArray(context.source) && context.source[0] instanceof File) {\n            const files = context.source as File[];\n\n            let settings = (files as ExtendedFileList).settings;\n\n            if (!settings) {\n                settings = await FileLoader.createSettings(files);\n            } else if (!settings._objectURL) {\n                throw  new Error('\"_objectURL\" must be specified in ModelSettings');\n            }\n\n            settings.validateFiles(files.map(file => encodeURI(file.webkitRelativePath)));\n\n            await FileLoader.upload(files, settings);\n\n            // override the default method to resolve URL from uploaded files\n            settings.resolveURL = function(url) {\n                return FileLoader.resolveURL(this._objectURL!, url);\n            };\n\n            context.source = settings;\n\n            // clean up when destroying the model\n            context.live2dModel.once('modelLoaded', (internalModel: InternalModel) => {\n                internalModel.once('destroy', function(this: InternalModel) {\n                    const objectURL = this.settings._objectURL!;\n\n                    URL.revokeObjectURL(objectURL);\n\n                    if (FileLoader.filesMap[objectURL]) {\n                        for (const resourceObjectURL of Object.values(FileLoader.filesMap[objectURL]!)) {\n                            URL.revokeObjectURL(resourceObjectURL);\n                        }\n                    }\n\n                    delete FileLoader.filesMap[objectURL];\n                });\n            });\n        }\n\n        return next();\n    };\n\n    /**\n     * Consumes the files by storing their object URLs. Files not defined in the settings will be ignored.\n     */\n    static async upload(files: File[], settings: ModelSettings): Promise<void> {\n        const fileMap: Record<string, string> = {};\n\n        // only consume the files defined in settings\n        for (const definedFile of settings.getDefinedFiles()) {\n            const actualPath = decodeURI(urlUtils.resolve(settings.url, definedFile));\n\n            const actualFile = files.find(file => file.webkitRelativePath === actualPath);\n\n            if (actualFile) {\n                fileMap[definedFile] = URL.createObjectURL(actualFile);\n            }\n        }\n\n        FileLoader.filesMap[settings._objectURL!] = fileMap;\n    }\n\n    /**\n     * Creates a ModelSettings by given files.\n     * @return Promise that resolves with the created ModelSettings.\n     */\n    static async createSettings(files: File[]): Promise<ModelSettings> {\n        const settingsFile = files.find(file => file.name.endsWith('model.json') || file.name.endsWith('model3.json'));\n\n        if (!settingsFile) {\n            throw new TypeError('Settings file not found');\n        }\n\n        const settingsText = await FileLoader.readText(settingsFile);\n        const settingsJSON = JSON.parse(settingsText);\n\n        settingsJSON.url = settingsFile.webkitRelativePath;\n\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n\n        if (!runtime) {\n            throw new Error('Unknown settings JSON');\n        }\n\n        const settings = runtime.createModelSettings(settingsJSON);\n\n        settings._objectURL = URL.createObjectURL(settingsFile);\n\n        return settings;\n    }\n\n    /**\n     * Reads a file as text in UTF-8.\n     */\n    static async readText(file: File): Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = reject;\n            reader.readAsText(file, 'utf8');\n        });\n    }\n}\n\nLive2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\n","import { url as urlUtils } from '@pixi/utils';\nimport { Middleware } from '@/utils/middleware';\nimport { InternalModel, ModelSettings } from '@/cubism-common';\nimport { ExtendedFileList } from './FileLoader';\nimport { Live2DFactory, Live2DFactoryContext } from '@/factory/Live2DFactory';\nimport { Live2DLoader } from '@/factory/Live2DLoader';\n\ntype ZipReader = any;\n\n/**\n * Experimental loader to load resources from a zip file.\n *\n * Though named as a \"Loader\", this class has nothing to do with Live2DLoader,\n * it only contains a middleware for the Live2DFactory.\n */\nexport class ZipLoader {\n    static ZIP_PROTOCOL = 'zip://';\n    static uid = 0;\n\n    static factory: Middleware<Live2DFactoryContext> = async (context, next) => {\n        const source = context.source;\n\n        let sourceURL: string;\n        let zipBlob: Blob | undefined;\n        let settings: ModelSettings | undefined;\n\n        if (typeof source === 'string' && (source.endsWith('.zip') || source.startsWith(ZipLoader.ZIP_PROTOCOL))) {\n            if (source.startsWith(ZipLoader.ZIP_PROTOCOL)) {\n                sourceURL = source.slice(ZipLoader.ZIP_PROTOCOL.length);\n            } else {\n                sourceURL = source;\n            }\n\n            zipBlob = await Live2DLoader.load({\n                url: sourceURL,\n                type: 'blob',\n                target: context.live2dModel,\n            });\n        } else if (\n            Array.isArray(source)\n            && source.length === 1\n            && source[0] instanceof File\n            && source[0].name.endsWith('.zip')\n        ) {\n            zipBlob = source[0];\n\n            sourceURL = URL.createObjectURL(zipBlob);\n\n            settings = (source as ExtendedFileList).settings;\n        }\n\n        if (zipBlob) {\n            if (!zipBlob.size) {\n                throw new Error('Empty zip file');\n            }\n\n            const reader = await ZipLoader.zipReader(zipBlob, sourceURL!);\n\n            if (!settings) {\n                settings = await ZipLoader.createSettings(reader);\n            }\n\n            // a fake URL, the only requirement is it should be unique,\n            // as FileLoader will use it as the ID of all uploaded files\n            settings._objectURL = ZipLoader.ZIP_PROTOCOL + ZipLoader.uid + '/' + settings.url;\n\n            const files = await ZipLoader.unzip(reader, settings);\n\n            (files as ExtendedFileList).settings = settings;\n\n            // pass files to the FileLoader\n            context.source = files;\n\n            // clean up when destroying the model\n            if (sourceURL!.startsWith('blob:')) {\n                context.live2dModel.once('modelLoaded', (internalModel: InternalModel) => {\n                    internalModel.once('destroy', function(this: InternalModel) {\n                        URL.revokeObjectURL(sourceURL);\n\n                    });\n                });\n            }\n\n            ZipLoader.releaseReader(reader);\n        }\n\n        return next();\n    };\n\n    static async unzip(reader: ZipReader, settings: ModelSettings): Promise<File[]> {\n        const filePaths = await ZipLoader.getFilePaths(reader);\n\n        const requiredFilePaths: string[] = [];\n\n        // only consume the files defined in settings\n        for (const definedFile of settings.getDefinedFiles()) {\n            const actualPath = decodeURI(urlUtils.resolve(settings.url, definedFile));\n\n            if (filePaths.includes(actualPath)) {\n                requiredFilePaths.push(actualPath);\n            }\n        }\n\n        const files = await ZipLoader.getFiles(reader, requiredFilePaths);\n\n        for (let i = 0; i < files.length; i++) {\n            const path = requiredFilePaths[i]!;\n            const file = files[i]!;\n\n            // let's borrow this property...\n            Object.defineProperty(file, 'webkitRelativePath', {\n                value: path,\n            });\n        }\n\n        return files;\n    }\n\n    static async createSettings(reader: ZipReader): Promise<ModelSettings> {\n        const filePaths = await ZipLoader.getFilePaths(reader);\n\n        const settingsFilePath = filePaths.find(path => path.endsWith('model.json') || path.endsWith('model3.json'));\n\n        if (!settingsFilePath) {\n            throw  new Error('Settings file not found');\n        }\n\n        const settingsText = await ZipLoader.readText(reader, settingsFilePath);\n\n        if (!settingsText) {\n            throw new Error('Empty settings file: ' + settingsFilePath);\n        }\n\n        const settingsJSON = JSON.parse(settingsText);\n\n        settingsJSON.url = settingsFilePath;\n\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n\n        if (!runtime) {\n            throw new Error('Unknown settings JSON');\n        }\n\n        return runtime.createModelSettings(settingsJSON);\n    }\n\n    static async zipReader(data: Blob, url: string): Promise<ZipReader> {\n        throw new Error('Not implemented');\n    }\n\n    static async getFilePaths(reader: ZipReader): Promise<string[]> {\n        throw new Error('Not implemented');\n    }\n\n    static async getFiles(reader: ZipReader, paths: string[]): Promise<File[]> {\n        throw new Error('Not implemented');\n    }\n\n    static async readText(reader: ZipReader, path: string): Promise<string> {\n        throw new Error('Not implemented');\n    }\n\n    static releaseReader(reader: ZipReader) {\n        // this method is optional\n    }\n}\n\nLive2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\n","import { Live2DModel } from '@/Live2DModel';\nimport { Renderer } from '@pixi/core';\nimport { Graphics } from '@pixi/graphics';\nimport { InteractionEvent } from '@pixi/interaction';\nimport { Text, TextStyle } from '@pixi/text';\nimport { Rectangle } from '@pixi/math';\n\nconst tempBounds = new Rectangle();\n\nexport class HitAreaFrames extends Graphics {\n    initialized = false;\n\n    texts: Text[] = [];\n\n    strokeWidth = 4;\n    normalColor = 0xE31A1A;\n    activeColor = 0x1EC832;\n\n    constructor() {\n        super();\n\n        this.interactive = true;\n\n        this.on('added', this.init).on('pointermove', this.onPointerMove);\n    }\n\n    init() {\n        const internalModel = (this.parent as Live2DModel).internalModel;\n\n        const textStyle = new TextStyle({\n            fontSize: 24,\n            fill: '#ffffff',\n            stroke: '#000000',\n            strokeThickness: 4,\n        });\n\n        this.texts = Object.keys(internalModel.hitAreas).map(hitAreaName => {\n            const text = new Text(hitAreaName, textStyle);\n\n            text.visible = false;\n\n            this.addChild(text);\n\n            return text;\n        });\n    }\n\n    onPointerMove(e: InteractionEvent) {\n        const hitAreaNames = (this.parent as Live2DModel).hitTest(e.data.global.x, e.data.global.y);\n\n        this.texts.forEach(text => {\n            text.visible = hitAreaNames.includes(text.text);\n        });\n    }\n\n    /** @override */\n    protected _render(renderer: Renderer): void {\n        const internalModel = (this.parent as Live2DModel).internalModel;\n\n        // extract scale from the transform matrix, and invert it to ease following calculation\n        // https://math.stackexchange.com/a/13165\n        const scale = 1 / Math.sqrt(this.transform.worldTransform.a ** 2 + this.transform.worldTransform.b ** 2);\n\n        this.texts.forEach(text => {\n            (\n                // correct the type definition of this method, the official definition is wrong!\n                this.lineStyle as any as (options: { width?: number, color?: number }) => void\n            )({\n                width: this.strokeWidth * scale,\n                color: text.visible ? this.activeColor : this.normalColor,\n            });\n\n            const bounds = internalModel.getDrawableBounds(internalModel.hitAreas[text.text]!.index, tempBounds);\n            const transform = internalModel.localTransform;\n\n            bounds.x = bounds.x * transform.a + transform.tx;\n            bounds.y = bounds.y * transform.d + transform.ty;\n            bounds.width = bounds.width * transform.a;\n            bounds.height = bounds.height * transform.d;\n\n            this.drawRect(bounds.x, bounds.y, bounds.width, bounds.height);\n\n            text.x = bounds.x + this.strokeWidth * scale;\n            text.y = bounds.y + this.strokeWidth * scale;\n            text.scale.set(scale);\n        });\n\n        super._render(renderer);\n\n        this.clear();\n    }\n}\n","import { clamp, rand } from '@/utils';\n\nconst enum EyeState {\n    Idle,\n    Closing,\n    Closed,\n    Opening,\n}\n\nexport class Live2DEyeBlink {\n    leftParam: number;\n    rightParam: number;\n\n    blinkInterval: DOMHighResTimeStamp = 4000;\n    closingDuration: DOMHighResTimeStamp = 100;\n    closedDuration: DOMHighResTimeStamp = 50;\n    openingDuration: DOMHighResTimeStamp = 150;\n\n    eyeState = EyeState.Idle;\n    eyeParamValue = 1;\n    closedTimer = 0;\n    nextBlinkTimeLeft = this.blinkInterval;\n\n    constructor(readonly coreModel: Live2DModelWebGL) {\n        this.leftParam = coreModel.getParamIndex('PARAM_EYE_L_OPEN');\n        this.rightParam = coreModel.getParamIndex('PARAM_EYE_R_OPEN');\n    }\n\n    setEyeParams(value: number) {\n        this.eyeParamValue = clamp(value, 0, 1);\n        this.coreModel.setParamFloat(this.leftParam, this.eyeParamValue);\n        this.coreModel.setParamFloat(this.rightParam, this.eyeParamValue);\n    }\n\n    update(dt: DOMHighResTimeStamp) {\n        switch (this.eyeState) {\n            case EyeState.Idle:\n                this.nextBlinkTimeLeft -= dt;\n\n                if (this.nextBlinkTimeLeft < 0) {\n                    this.eyeState = EyeState.Closing;\n                    this.nextBlinkTimeLeft =\n                        this.blinkInterval +\n                        this.closingDuration +\n                        this.closedDuration +\n                        this.openingDuration +\n                        rand(0, 2000);\n                }\n                break;\n\n            case EyeState.Closing:\n                this.setEyeParams(this.eyeParamValue + dt / this.closingDuration);\n\n                if (this.eyeParamValue <= 0) {\n                    this.eyeState = EyeState.Closed;\n                    this.closedTimer = 0;\n                }\n                break;\n\n            case EyeState.Closed:\n                this.closedTimer += dt;\n\n                if (this.closedTimer >= this.closedDuration) {\n                    this.eyeState = EyeState.Opening;\n                }\n                break;\n\n            case EyeState.Opening:\n                this.setEyeParams(this.eyeParamValue + dt / this.openingDuration);\n\n                if (this.eyeParamValue >= 1) {\n                    this.eyeState = EyeState.Idle;\n                }\n        }\n    }\n}\n","import { config } from '@/config';\n\nexport class Live2DExpression extends AMotion {\n    readonly params: NonNullable<Cubism2Spec.ExpressionJSON['params']> = [];\n\n    constructor(json: Cubism2Spec.ExpressionJSON) {\n        super();\n\n        this.setFadeIn(json.fade_in! > 0 ? json.fade_in! : config.expressionFadingDuration);\n        this.setFadeOut(json.fade_out! > 0 ? json.fade_out! : config.expressionFadingDuration);\n\n        if (Array.isArray(json.params)) {\n            json.params.forEach(param => {\n                const calc = param.calc || 'add';\n\n                if (calc === 'add') {\n                    const defaultValue = param.def || 0;\n                    param.val -= defaultValue;\n                } else if (calc === 'mult') {\n                    const defaultValue = param.def || 1;\n                    param.val /= defaultValue;\n                }\n\n                this.params.push({\n                    calc,\n                    val: param.val,\n                    id: param.id,\n                });\n            });\n        }\n    }\n\n    /** @override */\n    updateParamExe(model: Live2DModelWebGL, time: number, weight: number, motionQueueEnt: unknown) {\n        this.params.forEach(param => {\n            // this algorithm seems to be broken for newer Neptunia series models, have no idea\n            //\n            // switch (param.type) {\n            //     case ParamCalcType.Set:\n            //         model.setParamFloat(param.id, param.value, weight);\n            //         break;\n            //     case ParamCalcType.Add:\n            //         model.addToParamFloat(param.id, param.value * weight);\n            //         break;\n            //     case ParamCalcType.Mult:\n            //         model.multParamFloat(param.id, param.value, weight);\n            //         break;\n            // }\n\n            // this works fine for any model\n            model.setParamFloat(param.id, param.val * weight);\n        });\n    }\n}\n","import { MotionManagerOptions } from '@/cubism-common';\nimport { ExpressionManager } from '@/cubism-common/ExpressionManager';\nimport { Cubism2ModelSettings } from '@/cubism2/Cubism2ModelSettings';\nimport { Live2DExpression } from './Live2DExpression';\n\nexport class Cubism2ExpressionManager extends ExpressionManager<Live2DExpression> {\n    readonly queueManager = new MotionQueueManager();\n\n    readonly definitions: Cubism2Spec.Expression[];\n\n    readonly settings!: Cubism2ModelSettings;\n\n    constructor(settings: Cubism2ModelSettings, options?: MotionManagerOptions) {\n        super(settings, options);\n\n        this.definitions = this.settings.expressions ?? [];\n\n        this.init();\n    }\n\n    isFinished(): boolean {\n        return this.queueManager.isFinished();\n    }\n\n    getExpressionIndex(name: string): number {\n        return this.definitions.findIndex(def => def.name === name);\n    }\n\n    getExpressionFile(definition: Cubism2Spec.Expression): string {\n        return definition.file;\n    }\n\n    createExpression(data: object, definition: Cubism2Spec.Expression | undefined): Live2DExpression {\n        return new Live2DExpression(data);\n    }\n\n    protected _setExpression(motion: Live2DExpression): number {\n        return this.queueManager.startMotion(motion);\n    }\n\n    protected stopAllExpressions(): void {\n        this.queueManager.stopAllMotions();\n    }\n\n    protected updateParameters(model: Live2DModelWebGL, dt: number): boolean {\n        return this.queueManager.updateParam(model);\n    }\n}\n","import { MotionManager, MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport { Cubism2ExpressionManager } from '@/cubism2/Cubism2ExpressionManager';\nimport { Cubism2ModelSettings } from '@/cubism2/Cubism2ModelSettings';\nimport './patch-motion';\nimport { config } from '@/config';\n\nexport class Cubism2MotionManager extends MotionManager<Live2DMotion, Cubism2Spec.Motion> {\n    readonly definitions: Partial<Record<string, Cubism2Spec.Motion[]>>;\n\n    readonly groups = { idle: 'idle' } as const;\n\n    readonly motionDataType = 'arraybuffer';\n\n    readonly queueManager = new MotionQueueManager();\n\n    readonly settings!: Cubism2ModelSettings;\n\n    expressionManager?: Cubism2ExpressionManager;\n\n    constructor(settings: Cubism2ModelSettings, options?: MotionManagerOptions) {\n        super(settings, options);\n\n        this.definitions = this.settings.motions;\n\n        this.init(options);\n    }\n\n    protected init(options?: MotionManagerOptions) {\n        super.init(options);\n\n        if (this.settings.expressions) {\n            this.expressionManager = new Cubism2ExpressionManager(this.settings, options);\n        }\n    }\n\n    isFinished(): boolean {\n        return this.queueManager.isFinished();\n    }\n\n    createMotion(data: ArrayBuffer, group: string, definition: Cubism2Spec.Motion): Live2DMotion {\n        const motion = Live2DMotion.loadMotion(data);\n\n        const defaultFadingDuration =\n            group === this.groups.idle\n                ? config.idleMotionFadingDuration\n                : config.motionFadingDuration;\n\n        motion.setFadeIn(definition.fade_in! > 0 ? definition.fade_in! : defaultFadingDuration);\n        motion.setFadeOut(definition.fade_out! > 0 ? definition.fade_out! : defaultFadingDuration);\n\n        return motion;\n    }\n\n    getMotionFile(definition: Cubism2Spec.Motion): string {\n        return definition.file;\n    }\n\n    protected getMotionName(definition: Cubism2Spec.Motion): string {\n        return definition.file;\n    }\n\n    protected getSoundFile(definition: Cubism2Spec.Motion): string | undefined {\n        return definition.sound;\n    }\n\n    protected _startMotion(motion: Live2DMotion, onFinish?: (motion: Live2DMotion) => void): number {\n        motion.onFinishHandler = onFinish;\n\n        this.queueManager.stopAllMotions();\n\n        return this.queueManager.startMotion(motion);\n    }\n\n    protected _stopAllMotions(): void {\n        this.queueManager.stopAllMotions();\n    }\n\n    protected updateParameters(model: Live2DModelWebGL, now: DOMHighResTimeStamp): boolean {\n        return this.queueManager.updateParam(model);\n    }\n\n    destroy() {\n        super.destroy();\n\n        (this as Partial<Mutable<this>>).queueManager = undefined;\n    }\n}\n","import { InternalModelOptions } from '@/cubism-common';\nimport { CommonHitArea, CommonLayout, InternalModel } from '@/cubism-common/InternalModel';\nimport { Cubism2ModelSettings } from './Cubism2ModelSettings';\nimport { Cubism2MotionManager } from './Cubism2MotionManager';\nimport { Live2DEyeBlink } from './Live2DEyeBlink';\nimport { Live2DPhysics } from './Live2DPhysics';\nimport { Live2DPose } from './Live2DPose';\n\n// prettier-ignore\nconst tempMatrixArray = new Float32Array([\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1,\n]);\n\nexport class Cubism2InternalModel extends InternalModel {\n    settings: Cubism2ModelSettings;\n\n    coreModel: Live2DModelWebGL;\n    motionManager: Cubism2MotionManager;\n\n    eyeBlink?: Live2DEyeBlink;\n    physics?: Live2DPhysics;\n    pose?: Live2DPose;\n\n    // parameter indices, cached for better performance\n    eyeballXParamIndex: number;\n    eyeballYParamIndex: number;\n    angleXParamIndex: number;\n    angleYParamIndex: number;\n    angleZParamIndex: number;\n    bodyAngleXParamIndex: number;\n    breathParamIndex: number;\n\n    textureFlipY = true;\n\n    /**\n     * Number of the drawables in this model.\n     */\n    drawDataCount = 0;\n\n    /**\n     * If true, the face culling will always be disabled when drawing the model,\n     * regardless of the model's internal flags.\n     */\n    disableCulling = false;\n\n    constructor(coreModel: Live2DModelWebGL, settings: Cubism2ModelSettings, options?: InternalModelOptions) {\n        super();\n\n        this.coreModel = coreModel;\n        this.settings = settings;\n        this.motionManager = new Cubism2MotionManager(settings, options);\n        this.eyeBlink = new Live2DEyeBlink(coreModel);\n\n        this.eyeballXParamIndex = coreModel.getParamIndex('PARAM_EYE_BALL_X');\n        this.eyeballYParamIndex = coreModel.getParamIndex('PARAM_EYE_BALL_Y');\n        this.angleXParamIndex = coreModel.getParamIndex('PARAM_ANGLE_X');\n        this.angleYParamIndex = coreModel.getParamIndex('PARAM_ANGLE_Y');\n        this.angleZParamIndex = coreModel.getParamIndex('PARAM_ANGLE_Z');\n        this.bodyAngleXParamIndex = coreModel.getParamIndex('PARAM_BODY_ANGLE_X');\n        this.breathParamIndex = coreModel.getParamIndex('PARAM_BREATH');\n\n        this.init();\n    }\n\n    protected init() {\n        super.init();\n\n        if (this.settings.initParams) {\n            this.settings.initParams.forEach(({ id, value }) => this.coreModel.setParamFloat(id, value));\n        }\n        if (this.settings.initOpacities) {\n            this.settings.initOpacities.forEach(({ id, value }) => this.coreModel.setPartsOpacity(id, value));\n        }\n\n        this.coreModel.saveParam();\n\n        const arr: any = this.coreModel.getModelContext()._$aS;\n\n        if (arr?.length) {\n            this.drawDataCount = arr.length;\n        }\n\n        let culling = this.coreModel.drawParamWebGL.culling;\n\n        Object.defineProperty(this.coreModel.drawParamWebGL, 'culling', {\n            set: (v: boolean) => culling = v,\n\n            // always return false when disabled\n            get: () => this.disableCulling ? false : culling,\n        });\n\n        const clipManager = this.coreModel.getModelContext().clipManager;\n        const originalSetupClip = clipManager.setupClip;\n\n        // after setupClip(), the GL viewport will be set to [0, 0, canvas.width, canvas.height],\n        // so we have to set it back\n        clipManager.setupClip = (modelContext, drawParam) => {\n            originalSetupClip.call(clipManager, modelContext, drawParam);\n\n            drawParam.gl.viewport(...this.viewport);\n        };\n    }\n\n    protected getSize(): [number, number] {\n        return [this.coreModel.getCanvasWidth(), this.coreModel.getCanvasHeight()];\n    }\n\n    protected getLayout(): CommonLayout {\n        const layout = this.settings.layout || {};\n\n        return {\n            ...layout,\n            centerX: layout.center_x,\n            centerY: layout.center_y,\n        };\n    }\n\n    updateWebGLContext(gl: WebGLRenderingContext, glContextID: number): void {\n        const drawParamWebGL = this.coreModel.drawParamWebGL;\n\n        drawParamWebGL.firstDraw = true;\n        drawParamWebGL.setGL(gl);\n        drawParamWebGL.glno = glContextID;\n\n        // reset WebGL buffers\n        for (const prop in drawParamWebGL) {\n            if (drawParamWebGL.hasOwnProperty(prop) && (drawParamWebGL as any)[prop] instanceof WebGLBuffer) {\n                (drawParamWebGL as any)[prop] = null;\n            }\n        }\n\n        const clipManager = this.coreModel.getModelContext().clipManager;\n        clipManager.curFrameNo = glContextID;\n\n        const framebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n\n        // force Live2D to re-create the framebuffer\n        clipManager.getMaskRenderTexture();\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    }\n\n    bindTexture(index: number, texture: WebGLTexture): void {\n        this.coreModel.setTexture(index, texture);\n    }\n\n    protected getHitAreaDefs(): CommonHitArea[] {\n        return this.settings.hitAreas?.map(hitArea => ({\n            id: hitArea.id,\n            name: hitArea.name,\n            index: this.coreModel.getDrawDataIndex(hitArea.id),\n        })) || [];\n    }\n\n    getDrawableIDs(): string[] {\n        const modelContext = this.coreModel.getModelContext();\n        const ids = [];\n\n        for (let i = 0; i < this.drawDataCount; i++) {\n            const drawData = modelContext.getDrawData(i);\n\n            if (drawData) {\n                ids.push(drawData.getDrawDataID().id);\n            }\n        }\n\n        return ids;\n    }\n\n    getDrawableIndex(id: string): number {\n        return this.coreModel.getDrawDataIndex(id);\n    }\n\n    getDrawableVertices(drawIndex: number | string): Float32Array {\n        if (typeof drawIndex === 'string') {\n            drawIndex = this.coreModel.getDrawDataIndex(drawIndex);\n\n            if (drawIndex === -1) throw new TypeError('Unable to find drawable ID: ' + drawIndex);\n        }\n\n        return this.coreModel.getTransformedPoints(drawIndex).slice();\n    }\n\n    update(dt: DOMHighResTimeStamp, now: DOMHighResTimeStamp): void {\n        super.update(dt, now);\n\n        const model = this.coreModel;\n\n        this.emit('beforeMotionUpdate');\n\n        const motionUpdated = this.motionManager.update(this.coreModel, now);\n\n        this.emit('afterMotionUpdate');\n\n        model.saveParam();\n\n        this.motionManager.expressionManager?.update(model, now);\n\n        if (!motionUpdated) {\n            this.eyeBlink?.update(dt);\n        }\n\n        this.updateFocus();\n        this.updateNaturalMovements(dt, now);\n\n        this.physics?.update(now);\n        this.pose?.update(dt);\n\n        this.emit('beforeModelUpdate');\n\n        model.update();\n        model.loadParam();\n    }\n\n    updateFocus() {\n        this.coreModel.addToParamFloat(this.eyeballXParamIndex, this.focusController.x);\n        this.coreModel.addToParamFloat(this.eyeballYParamIndex, this.focusController.y);\n        this.coreModel.addToParamFloat(this.angleXParamIndex, this.focusController.x * 30);\n        this.coreModel.addToParamFloat(this.angleYParamIndex, this.focusController.y * 30);\n        this.coreModel.addToParamFloat(this.angleZParamIndex, this.focusController.x * this.focusController.y * -30);\n        this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, this.focusController.x * 10);\n    }\n\n    updateNaturalMovements(dt: DOMHighResTimeStamp, now: DOMHighResTimeStamp) {\n        const t = (now / 1000) * 2 * Math.PI;\n\n        this.coreModel.addToParamFloat(this.angleXParamIndex, 15 * Math.sin(t / 6.5345) * 0.5);\n        this.coreModel.addToParamFloat(this.angleYParamIndex, 8 * Math.sin(t / 3.5345) * 0.5);\n        this.coreModel.addToParamFloat(this.angleZParamIndex, 10 * Math.sin(t / 5.5345) * 0.5);\n        this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, 4 * Math.sin(t / 15.5345) * 0.5);\n\n        this.coreModel.setParamFloat(this.breathParamIndex, 0.5 + 0.5 * Math.sin(t / 3.2345));\n    }\n\n    draw(gl: WebGLRenderingContext): void {\n        const disableCulling = this.disableCulling;\n\n        // culling must be disabled to get this cubism2 model drawn properly on a framebuffer\n        if (gl.getParameter(gl.FRAMEBUFFER_BINDING)) {\n            this.disableCulling = true;\n        }\n\n        const matrix = this.drawingMatrix;\n\n        // set given 3x3 matrix into a 4x4 matrix\n        tempMatrixArray[0] = matrix.a;\n        tempMatrixArray[1] = matrix.b;\n        tempMatrixArray[4] = matrix.c;\n        tempMatrixArray[5] = matrix.d;\n        tempMatrixArray[12] = matrix.tx;\n        tempMatrixArray[13] = matrix.ty;\n\n        this.coreModel.setMatrix(tempMatrixArray);\n        this.coreModel.draw();\n\n        this.disableCulling = disableCulling;\n    }\n\n    destroy() {\n        super.destroy();\n\n        // cubism2 core has a super dumb memory management so there's basically nothing much to do to release the model\n        (this as Partial<this>).coreModel = undefined;\n    }\n}\n","import { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { copyArray, copyProperty } from '../utils';\n\nexport class Cubism2ModelSettings extends ModelSettings {\n    json!: Cubism2Spec.ModelJSON;\n\n    // files\n    moc: string;\n    textures!: string[];\n    pose?: string;\n    physics?: string;\n\n    // metadata\n    layout?: Cubism2Spec.Layout;\n    hitAreas?: Cubism2Spec.HitArea[];\n    initParams?: Cubism2Spec.InitParam[];\n    initOpacities?: Cubism2Spec.InitOpacity[];\n\n    // motions\n    expressions?: Cubism2Spec.Expression[];\n    motions: Record<string, Cubism2Spec.Motion[]> = {};\n\n    /**\n     * Checks if a JSON object is valid model settings.\n     * @param json\n     */\n    static isValidJSON(json: any): json is Cubism2Spec.ModelJSON {\n        // should always return a boolean\n        return !!json\n            && typeof json.model === 'string'\n            && json.textures?.length > 0\n\n            // textures must be an array of strings\n            && json.textures.every((item: any) => typeof item === 'string');\n    }\n\n    constructor(json: Cubism2Spec.ModelJSON & { url: string }) {\n        super(json);\n\n        if (!Cubism2ModelSettings.isValidJSON(json)) {\n            throw new TypeError('Invalid JSON.');\n        }\n\n        this.moc = json.model;\n\n        // copy textures array\n        copyArray('string', json, this, 'textures', 'textures');\n\n        this.copy(json);\n    }\n\n    /**\n     * Validates and copies *optional* properties from raw JSON.\n     */\n    protected copy(json: Cubism2Spec.ModelJSON): void {\n        copyProperty('string', json, this, 'name', 'name');\n        copyProperty('string', json, this, 'pose', 'pose');\n        copyProperty('string', json, this, 'physics', 'physics');\n\n        copyProperty('object', json, this, 'layout', 'layout');\n        copyProperty('object', json, this, 'motions', 'motions');\n\n        copyArray('object', json, this, 'hit_areas', 'hitAreas');\n        copyArray('object', json, this, 'expressions', 'expressions');\n        copyArray('object', json, this, 'init_params', 'initParams');\n        copyArray('object', json, this, 'init_opacities', 'initOpacities');\n    }\n\n    replaceFiles(replace: (file: string, path: string) => string) {\n        super.replaceFiles(replace);\n\n        for (const [group, motions] of Object.entries(this.motions)) {\n            for (let i = 0; i < motions.length; i++) {\n                motions[i]!.file = replace(motions[i]!.file, `motions.${group}[${i}].file`);\n\n                if (motions[i]!.sound !== undefined) {\n                    motions[i]!.sound = replace(motions[i]!.sound!, `motions.${group}[${i}].sound`);\n                }\n            }\n        }\n\n        if (this.expressions) {\n            for (let i = 0; i < this.expressions.length; i++) {\n                this.expressions[i]!.file = replace(this.expressions[i]!.file, `expressions[${i}].file`);\n            }\n        }\n    }\n}\n","const SRC_TYPE_MAP = {\n    x: PhysicsHair.Src.SRC_TO_X,\n    y: PhysicsHair.Src.SRC_TO_Y,\n    angle: PhysicsHair.Src.SRC_TO_G_ANGLE,\n};\n\nconst TARGET_TYPE_MAP = {\n    x: PhysicsHair.Src.SRC_TO_X,\n    y: PhysicsHair.Src.SRC_TO_Y,\n    angle: PhysicsHair.Src.SRC_TO_G_ANGLE,\n};\n\nexport class Live2DPhysics {\n    physicsHairs: PhysicsHair[] = [];\n\n    constructor(readonly coreModel: Live2DModelWebGL, json: Cubism2Spec.PhysicsJSON) {\n        if (json.physics_hair) {\n            this.physicsHairs = json.physics_hair.map(definition => {\n                const physicsHair = new PhysicsHair();\n\n                physicsHair.setup(definition.setup.length, definition.setup.regist, definition.setup.mass);\n\n                definition.src.forEach(({ id, ptype, scale, weight }) => {\n                    const type = SRC_TYPE_MAP[ptype];\n\n                    if (type) {\n                        physicsHair.addSrcParam(type, id, scale, weight);\n                    }\n                });\n\n                definition.targets.forEach(({ id, ptype, scale, weight }) => {\n                    const type = TARGET_TYPE_MAP[ptype];\n\n                    if (type) {\n                        physicsHair.addTargetParam(type, id, scale, weight);\n                    }\n                });\n\n                return physicsHair;\n            });\n        }\n    }\n\n    update(elapsed: DOMHighResTimeStamp) {\n        this.physicsHairs.forEach(physicsHair => physicsHair.update(this.coreModel, elapsed));\n    }\n}\n","import { clamp } from '@/utils';\n\nclass Live2DPartsParam {\n    paramIndex = -1;\n    partsIndex = -1;\n    link: Live2DPartsParam[] = [];\n\n    constructor(readonly id: string) {}\n\n    initIndex(model: Live2DModelWebGL) {\n        this.paramIndex = model.getParamIndex('VISIBLE:' + this.id);\n        this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\n        model.setParamFloat(this.paramIndex, 1);\n    }\n}\n\nexport class Live2DPose {\n    opacityAnimDuration: DOMHighResTimeStamp = 500;\n\n    partsGroups: Live2DPartsParam[][] = [];\n\n    constructor(readonly coreModel: Live2DModelWebGL, json: Cubism2Spec.PoseJSON) {\n        if (json.parts_visible) {\n            this.partsGroups = json.parts_visible.map(({ group }) =>\n                group.map(({ id, link }) => {\n                    const parts = new Live2DPartsParam(id);\n\n                    if (link) {\n                        parts.link = link.map(l => new Live2DPartsParam(l));\n                    }\n\n                    return parts;\n                }),\n            );\n\n            this.init();\n        }\n    }\n\n    init() {\n        this.partsGroups.forEach(group => {\n            group.forEach(parts => {\n                parts.initIndex(this.coreModel);\n\n                if (parts.paramIndex >= 0) {\n                    const visible = this.coreModel.getParamFloat(parts.paramIndex) !== 0;\n                    this.coreModel.setPartsOpacity(parts.partsIndex, visible ? 1 : 0);\n                    this.coreModel.setParamFloat(parts.paramIndex, visible ? 1 : 0);\n\n                    if (parts.link.length > 0) {\n                        parts.link.forEach(p => p.initIndex(this.coreModel));\n                    }\n                }\n            });\n        });\n    }\n\n    normalizePartsOpacityGroup(partsGroup: Live2DPartsParam[], dt: DOMHighResTimeStamp) {\n        const model = this.coreModel;\n        const phi = 0.5;\n        const maxBackOpacity = 0.15;\n        let visibleOpacity = 1;\n\n        let visibleIndex = partsGroup.findIndex(\n            ({ paramIndex, partsIndex }) => partsIndex >= 0 && model.getParamFloat(paramIndex) !== 0,\n        );\n\n        if (visibleIndex >= 0) {\n            const originalOpacity = model.getPartsOpacity(partsGroup[visibleIndex]!.partsIndex);\n\n            visibleOpacity = clamp(originalOpacity + dt / this.opacityAnimDuration, 0, 1);\n        } else {\n            visibleIndex = 0;\n            visibleOpacity = 1;\n        }\n\n        partsGroup.forEach(({ partsIndex }, index) => {\n            if (partsIndex >= 0) {\n                if (visibleIndex == index) {\n                    model.setPartsOpacity(partsIndex, visibleOpacity);\n                } else {\n                    let opacity = model.getPartsOpacity(partsIndex);\n\n                    // I can't understand this part, so just leave it original\n                    let a1;\n                    if (visibleOpacity < phi) {\n                        a1 = (visibleOpacity * (phi - 1)) / phi + 1;\n                    } else {\n                        a1 = ((1 - visibleOpacity) * phi) / (1 - phi);\n                    }\n                    let backOp = (1 - a1) * (1 - visibleOpacity);\n                    if (backOp > maxBackOpacity) {\n                        a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\n                    }\n                    if (opacity > a1) {\n                        opacity = a1;\n                    }\n\n                    model.setPartsOpacity(partsIndex, opacity);\n                }\n            }\n        });\n    }\n\n    copyOpacity(partsGroup: Live2DPartsParam[]) {\n        const model = this.coreModel;\n\n        partsGroup.forEach(({ partsIndex, link }) => {\n            if (partsIndex >= 0 && link) {\n                const opacity = model.getPartsOpacity(partsIndex);\n\n                link.forEach(({ partsIndex }) => {\n                    if (partsIndex >= 0) {\n                        model.setPartsOpacity(partsIndex, opacity);\n                    }\n                });\n            }\n        });\n    }\n\n    update(dt: DOMHighResTimeStamp) {\n        this.partsGroups.forEach(partGroup => {\n            this.normalizePartsOpacityGroup(partGroup, dt);\n            this.copyOpacity(partGroup);\n        });\n    }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismMatrix44 } from '../math/cubismmatrix44';\nimport { CubismModel } from '../model/cubismmodel';\n\n/**\n * モデル描画を処理するレンダラ\n *\n * サブクラスに環境依存の描画命令を記述する。\n */\nexport abstract class CubismRenderer {\n  /**\n   * レンダラの初期化処理を実行する\n   * 引数に渡したモデルからレンダラの初期化処理に必要な情報を取り出すことができる\n   * @param model モデルのインスタンス\n   */\n  public initialize(model: CubismModel): void {\n    this._model = model;\n  }\n\n  /**\n   * モデルを描画する\n   */\n  public drawModel(): void {\n    if (this.getModel() == null) return;\n\n    this.doDrawModel();\n  }\n\n  /**\n   * Model-View-Projection 行列をセットする\n   * 配列は複製されるので、元の配列は外で破棄して良い\n   * @param matrix44 Model-View-Projection 行列\n   */\n  public setMvpMatrix(matrix44: CubismMatrix44): void {\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n  }\n\n  /**\n   * Model-View-Projection 行列を取得する\n   * @return Model-View-Projection 行列\n   */\n  public getMvpMatrix(): CubismMatrix44 {\n    return this._mvpMatrix4x4;\n  }\n\n  /**\n   * モデルの色をセットする\n   * 各色0.0~1.0の間で指定する（1.0が標準の状態）\n   * @param red 赤チャンネルの値\n   * @param green 緑チャンネルの値\n   * @param blue 青チャンネルの値\n   * @param alpha αチャンネルの値\n   */\n  public setModelColor(\n    red: number,\n    green: number,\n    blue: number,\n    alpha: number,\n  ): void {\n    if (red < 0.0) {\n      red = 0.0;\n    } else if (red > 1.0) {\n      red = 1.0;\n    }\n\n    if (green < 0.0) {\n      green = 0.0;\n    } else if (green > 1.0) {\n      green = 1.0;\n    }\n\n    if (blue < 0.0) {\n      blue = 0.0;\n    } else if (blue > 1.0) {\n      blue = 1.0;\n    }\n\n    if (alpha < 0.0) {\n      alpha = 0.0;\n    } else if (alpha > 1.0) {\n      alpha = 1.0;\n    }\n\n    this._modelColor.R = red;\n    this._modelColor.G = green;\n    this._modelColor.B = blue;\n    this._modelColor.A = alpha;\n  }\n\n  /**\n   * モデルの色を取得する\n   * 各色0.0~1.0の間で指定する(1.0が標準の状態)\n   *\n   * @return RGBAのカラー情報\n   */\n  public getModelColor(): CubismTextureColor {\n    return Object.assign({}, this._modelColor);\n  }\n\n  /**\n   * 乗算済みαの有効・無効をセットする\n   * 有効にするならtrue、無効にするならfalseをセットする\n   */\n  public setIsPremultipliedAlpha(enable: boolean): void {\n    this._isPremultipliedAlpha = enable;\n  }\n\n  /**\n   * 乗算済みαの有効・無効を取得する\n   * @return true 乗算済みのα有効\n   * @return false 乗算済みのα無効\n   */\n  public isPremultipliedAlpha(): boolean {\n    return this._isPremultipliedAlpha;\n  }\n\n  /**\n   * カリング（片面描画）の有効・無効をセットする。\n   * 有効にするならtrue、無効にするならfalseをセットする\n   */\n  public setIsCulling(culling: boolean): void {\n    this._isCulling = culling;\n  }\n\n  /**\n   * カリング（片面描画）の有効・無効を取得する。\n   * @return true カリング有効\n   * @return false カリング無効\n   */\n  public isCulling(): boolean {\n    return this._isCulling;\n  }\n\n  /**\n   * テクスチャの異方性フィルタリングのパラメータをセットする\n   * パラメータ値の影響度はレンダラの実装に依存する\n   * @param n パラメータの値\n   */\n  public setAnisotropy(n: number): void {\n    this._anisortopy = n;\n  }\n\n  /**\n   * テクスチャの異方性フィルタリングのパラメータをセットする\n   * @return 異方性フィルタリングのパラメータ\n   */\n  public getAnisotropy(): number {\n    return this._anisortopy;\n  }\n\n  /**\n   * レンダリングするモデルを取得する\n   * @return レンダリングするモデル\n   */\n  public getModel(): CubismModel {\n    return this._model;\n  }\n\n  /**\n   * コンストラクタ\n   */\n  protected constructor() {\n    this._isCulling = false;\n    this._isPremultipliedAlpha = false;\n    this._anisortopy = 0.0;\n    this._modelColor = new CubismTextureColor();\n\n    // 単位行列に初期化\n    this._mvpMatrix4x4 = new CubismMatrix44();\n    this._mvpMatrix4x4.loadIdentity();\n  }\n\n  /**\n   * モデル描画の実装\n   */\n  public abstract doDrawModel(): void;\n\n  /**\n   * 描画オブジェクト（アートメッシュ）を描画する\n   * ポリゴンメッシュとテクスチャ番号をセットで渡す。\n   * @param textureNo 描画するテクスチャ番号\n   * @param indexCount 描画オブジェクトのインデックス値\n   * @param vertexCount ポリゴンメッシュの頂点数\n   * @param indexArray ポリゴンメッシュ頂点のインデックス配列\n   * @param vertexArray ポリゴンメッシュの頂点配列\n   * @param uvArray uv配列\n   * @param opacity 不透明度\n   * @param colorBlendMode カラーブレンディングのタイプ\n   * @param invertedMask マスク使用時のマスクの反転使用\n   */\n  public abstract drawMesh(\n    textureNo: number,\n    indexCount: number,\n    vertexCount: number,\n    indexArray: Uint16Array,\n    vertexArray: Float32Array,\n    uvArray: Float32Array,\n    opacity: number,\n    colorBlendMode: CubismBlendMode,\n    invertedMask: boolean,\n  ): void;\n\n  /**\n   * レンダラが保持する静的なリソースを開放する\n   */\n  public static staticRelease: Function;\n\n  protected _mvpMatrix4x4: CubismMatrix44; // Model-View-Projection 行列\n  protected _modelColor: CubismTextureColor; // モデル自体のカラー（RGBA）\n  protected _isCulling: boolean; // カリングが有効ならtrue\n  protected _isPremultipliedAlpha: boolean; // 乗算済みαならtrue\n  protected _anisortopy: any; // テクスチャの異方性フィルタリングのパラメータ\n  protected _model!: CubismModel; // レンダリング対象のモデル\n}\n\nexport enum CubismBlendMode {\n  CubismBlendMode_Normal = 0, // 通常\n  CubismBlendMode_Additive = 1, // 加算\n  CubismBlendMode_Multiplicative = 2 // 乗算\n}\n\n/**\n * テクスチャの色をRGBAで扱うためのクラス\n */\nexport class CubismTextureColor {\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    this.R = 1.0;\n    this.G = 1.0;\n    this.B = 1.0;\n    this.A = 1.0;\n  }\n\n  R: number; // 赤チャンネル\n  G: number; // 緑チャンネル\n  B: number; // 青チャンネル\n  A: number; // αチャンネル\n}\n","import { Cubism2InternalModel } from '@/cubism2/Cubism2InternalModel';\nimport { Cubism2ModelSettings } from '@/cubism2/Cubism2ModelSettings';\nimport { Live2DPhysics } from '@/cubism2/Live2DPhysics';\nimport { Live2DPose } from '@/cubism2/Live2DPose';\nimport { Live2DFactory, Live2DFactoryOptions } from '@/factory/Live2DFactory';\n\nLive2DFactory.registerRuntime({\n    version: 2,\n\n    test(source: any): boolean {\n        return source instanceof Cubism2ModelSettings || Cubism2ModelSettings.isValidJSON(source);\n    },\n\n    ready(): Promise<void> {\n        return Promise.resolve();\n    },\n\n    isValidMoc(modelData: ArrayBuffer): boolean {\n        if (modelData.byteLength < 3) {\n            return false;\n        }\n\n        const view = new Int8Array(modelData, 0, 3);\n\n        return String.fromCharCode(...view) === 'moc';\n    },\n\n    createModelSettings(json: object): Cubism2ModelSettings {\n        return new Cubism2ModelSettings(json as Cubism2Spec.ModelJSON & { url: string });\n    },\n\n    createCoreModel(data: ArrayBuffer): Live2DModelWebGL {\n        const model = Live2DModelWebGL.loadModel(data);\n\n        const error = Live2D.getError();\n        if (error) throw error;\n\n        return model;\n    },\n\n    createInternalModel(coreModel: Live2DModelWebGL, settings: Cubism2ModelSettings, options?: Live2DFactoryOptions): Cubism2InternalModel {\n        return new Cubism2InternalModel(coreModel, settings, options);\n    },\n\n    createPose(coreModel: Live2DModelWebGL, data: any): Live2DPose {\n        return new Live2DPose(coreModel, data);\n    },\n\n    createPhysics(coreModel: Live2DModelWebGL, data: any): Live2DPhysics {\n        return new Live2DPhysics(coreModel, data);\n    },\n});\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * 2次元ベクトル型\n *\n * 2次元ベクトル型の機能を提供する。\n */\nexport class CubismVector2 {\n  x: number;\n  y: number;\n\n  /**\n   * コンストラクタ\n   */\n  public constructor(x?: number, y?: number) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  /**\n   * ベクトルの加算\n   *\n   * @param vector2 加算するベクトル値\n   * @return 加算結果 ベクトル値\n   */\n  public add(vector2: CubismVector2): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの減算\n   *\n   * @param vector2 減算するベクトル値\n   * @return 減算結果 ベクトル値\n   */\n  public substract(vector2: CubismVector2): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの乗算\n   *\n   * @param vector2 乗算するベクトル値\n   * @return 乗算結果 ベクトル値\n   */\n  public multiply(vector2: CubismVector2): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの乗算(スカラー)\n   *\n   * @param scalar 乗算するスカラー値\n   * @return 乗算結果 ベクトル値\n   */\n  public multiplyByScaler(scalar: number): CubismVector2 {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n\n  /**\n   * ベクトルの除算\n   *\n   * @param vector2 除算するベクトル値\n   * @return 除算結果 ベクトル値\n   */\n  public division(vector2: CubismVector2): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの除算(スカラー)\n   *\n   * @param scalar 除算するスカラー値\n   * @return 除算結果 ベクトル値\n   */\n  public divisionByScalar(scalar: number): CubismVector2 {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n\n  /**\n   * ベクトルの長さを取得する\n   *\n   * @return ベクトルの長さ\n   */\n  public getLength(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  /**\n   * ベクトルの距離の取得\n   *\n   * @param a 点\n   * @return ベクトルの距離\n   */\n  public getDistanceWith(a: CubismVector2): number {\n    return Math.sqrt(\n      (this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y),\n    );\n  }\n\n  /**\n   * ドット積の計算\n   *\n   * @param a 値\n   * @return 結果\n   */\n  public dot(a: CubismVector2): number {\n    return this.x * a.x + this.y * a.y;\n  }\n\n  /**\n   * 正規化の適用\n   */\n  public normalize(): void {\n    const length: number = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n\n  /**\n   * 等しさの確認（等しいか？）\n   *\n   * 値が等しいか？\n   *\n   * @param rhs 確認する値\n   * @return true 値は等しい\n   * @return false 値は等しくない\n   */\n  public isEqual(rhs: CubismVector2): boolean {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n\n  /**\n   * 等しさの確認（等しくないか？）\n   *\n   * 値が等しくないか？\n   *\n   * @param rhs 確認する値\n   * @return true 値は等しくない\n   * @return false 値は等しい\n   */\n  public isNotEqual(rhs: CubismVector2): boolean {\n    return !this.isEqual(rhs);\n  }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismVector2 } from './cubismvector2';\n\n  /**\n   * 数値計算などに使用するユーティリティクラス\n   */\n  export class CubismMath {\n    /**\n     * 第一引数の値を最小値と最大値の範囲に収めた値を返す\n     *\n     * @param value 収められる値\n     * @param min   範囲の最小値\n     * @param max   範囲の最大値\n     * @return 最小値と最大値の範囲に収めた値\n     */\n    static range(value: number, min: number, max: number): number {\n      if (value < min) {\n        value = min;\n      } else if (value > max) {\n        value = max;\n      }\n\n      return value;\n    }\n\n    /**\n     * サイン関数の値を求める\n     *\n     * @param x 角度値（ラジアン）\n     * @return サイン関数sin(x)の値\n     */\n    static sin(x: number): number {\n      return Math.sin(x);\n    }\n\n    /**\n     * コサイン関数の値を求める\n     *\n     * @param x 角度値(ラジアン)\n     * @return コサイン関数cos(x)の値\n     */\n    static cos(x: number): number {\n      return Math.cos(x);\n    }\n\n    /**\n     * 値の絶対値を求める\n     *\n     * @param x 絶対値を求める値\n     * @return 値の絶対値\n     */\n    static abs(x: number): number {\n      return Math.abs(x);\n    }\n\n    /**\n     * 平方根(ルート)を求める\n     * @param x -> 平方根を求める値\n     * @return 値の平方根\n     */\n    static sqrt(x: number): number {\n      return Math.sqrt(x);\n    }\n\n    /**\n     * イージング処理されたサインを求める\n     * フェードイン・アウト時のイージングに利用できる\n     *\n     * @param value イージングを行う値\n     * @return イージング処理されたサイン値\n     */\n    static getEasingSine(value: number): number {\n      if (value < 0.0) {\n        return 0.0;\n      } else if (value > 1.0) {\n        return 1.0;\n      }\n\n      return 0.5 - 0.5 * this.cos(value * Math.PI);\n    }\n\n    /**\n     * 大きい方の値を返す\n     *\n     * @param left 左辺の値\n     * @param right 右辺の値\n     * @return 大きい方の値\n     */\n    static max(left: number, right: number): number {\n      return left > right ? left : right;\n    }\n\n    /**\n     * 小さい方の値を返す\n     *\n     * @param left  左辺の値\n     * @param right 右辺の値\n     * @return 小さい方の値\n     */\n    static min(left: number, right: number): number {\n      return left > right ? right : left;\n    }\n\n    /**\n     * 角度値をラジアン値に変換する\n     *\n     * @param degrees   角度値\n     * @return 角度値から変換したラジアン値\n     */\n    static degreesToRadian(degrees: number): number {\n      return (degrees / 180.0) * Math.PI;\n    }\n\n    /**\n     * ラジアン値を角度値に変換する\n     *\n     * @param radian    ラジアン値\n     * @return ラジアン値から変換した角度値\n     */\n    static radianToDegrees(radian: number): number {\n      return (radian * 180.0) / Math.PI;\n    }\n\n    /**\n     * ２つのベクトルからラジアン値を求める\n     *\n     * @param from  始点ベクトル\n     * @param to    終点ベクトル\n     * @return ラジアン値から求めた方向ベクトル\n     */\n    static directionToRadian(from: CubismVector2, to: CubismVector2): number {\n      const q1: number = Math.atan2(to.y, to.x);\n      const q2: number = Math.atan2(from.y, from.x);\n\n      let ret: number = q1 - q2;\n\n      while (ret < -Math.PI) {\n        ret += Math.PI * 2.0;\n      }\n\n      while (ret > Math.PI) {\n        ret -= Math.PI * 2.0;\n      }\n\n      return ret;\n    }\n\n    /**\n     * ２つのベクトルから角度値を求める\n     *\n     * @param from  始点ベクトル\n     * @param to    終点ベクトル\n     * @return 角度値から求めた方向ベクトル\n     */\n    static directionToDegrees(from: CubismVector2, to: CubismVector2): number {\n      const radian: number = this.directionToRadian(from, to);\n      let degree: number = this.radianToDegrees(radian);\n\n      if (to.x - from.x > 0.0) {\n        degree = -degree;\n      }\n\n      return degree;\n    }\n\n    /**\n     * ラジアン値を方向ベクトルに変換する。\n     *\n     * @param totalAngle    ラジアン値\n     * @return ラジアン値から変換した方向ベクトル\n     */\n\n    static radianToDirection(totalAngle: number): CubismVector2 {\n      const ret: CubismVector2 = new CubismVector2();\n\n      ret.x = this.sin(totalAngle);\n      ret.y = this.cos(totalAngle);\n\n      return ret;\n    }\n\n    /**\n     * コンストラクタ\n     */\n    private constructor() {}\n  }\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * 4x4の行列\n *\n * 4x4行列の便利クラス。\n */\nexport class CubismMatrix44 {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._tr = new Float32Array(16); // 4 * 4のサイズ\n    this.loadIdentity();\n  }\n\n  /**\n   * 受け取った２つの行列の乗算を行う。\n   *\n   * @param a 行列a\n   * @param b 行列b\n   * @return 乗算結果の行列\n   */\n  public static multiply(\n    a: Float32Array,\n    b: Float32Array,\n    dst: Float32Array,\n  ): void {\n    const c: Float32Array = new Float32Array([\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n    ]);\n\n    const n = 4;\n\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n\n  /**\n   * 単位行列に初期化する\n   */\n  public loadIdentity(): void {\n    const c: Float32Array = new Float32Array([\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n    ]);\n\n    this.setMatrix(c);\n  }\n\n  /**\n   * 行列を設定\n   *\n   * @param tr 16個の浮動小数点数で表される4x4の行列\n   */\n  public setMatrix(tr: Float32Array): void {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n\n  /**\n   * 行列を浮動小数点数の配列で取得\n   *\n   * @return 16個の浮動小数点数で表される4x4の行列\n   */\n  public getArray(): Float32Array {\n    return this._tr;\n  }\n\n  /**\n   * X軸の拡大率を取得\n   * @return X軸の拡大率\n   */\n  public getScaleX(): number {\n    return this._tr[0];\n  }\n\n  /**\n   * Y軸の拡大率を取得する\n   *\n   * @return Y軸の拡大率\n   */\n  public getScaleY(): number {\n    return this._tr[5];\n  }\n\n  /**\n   * X軸の移動量を取得\n   * @return X軸の移動量\n   */\n  public getTranslateX(): number {\n    return this._tr[12];\n  }\n\n  /**\n   * Y軸の移動量を取得\n   * @return Y軸の移動量\n   */\n  public getTranslateY(): number {\n    return this._tr[13];\n  }\n\n  /**\n   * X軸の値を現在の行列で計算\n   *\n   * @param src X軸の値\n   * @return 現在の行列で計算されたX軸の値\n   */\n  public transformX(src: number): number {\n    return this._tr[0] * src + this._tr[12];\n  }\n\n  /**\n   * Y軸の値を現在の行列で計算\n   *\n   * @param src Y軸の値\n   * @return 現在の行列で計算されたY軸の値\n   */\n  public transformY(src: number): number {\n    return this._tr[5] * src + this._tr[13];\n  }\n\n  /**\n   * X軸の値を現在の行列で逆計算\n   */\n  public invertTransformX(src: number): number {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n\n  /**\n   * Y軸の値を現在の行列で逆計算\n   */\n  public invertTransformY(src: number): number {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n\n  /**\n   * 現在の行列の位置を起点にして移動\n   *\n   * 現在の行列の位置を起点にして相対的に移動する。\n   *\n   * @param x X軸の移動量\n   * @param y Y軸の移動量\n   */\n  public translateRelative(x: number, y: number): void {\n    const tr1: Float32Array = new Float32Array([\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      x,\n      y,\n      0.0,\n      1.0,\n    ]);\n\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n\n  /**\n   * 現在の行列の位置を移動\n   *\n   * 現在の行列の位置を指定した位置へ移動する\n   *\n   * @param x X軸の移動量\n   * @param y y軸の移動量\n   */\n  public translate(x: number, y: number): void {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n\n  /**\n   * 現在の行列のX軸の位置を指定した位置へ移動する\n   *\n   * @param x X軸の移動量\n   */\n  public translateX(x: number): void {\n    this._tr[12] = x;\n  }\n\n  /**\n   * 現在の行列のY軸の位置を指定した位置へ移動する\n   *\n   * @param y Y軸の移動量\n   */\n  public translateY(y: number): void {\n    this._tr[13] = y;\n  }\n\n  /**\n   * 現在の行列の拡大率を相対的に設定する\n   *\n   * @param x X軸の拡大率\n   * @param y Y軸の拡大率\n   */\n  public scaleRelative(x: number, y: number): void {\n    const tr1: Float32Array = new Float32Array([\n      x,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      y,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n    ]);\n\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n\n  /**\n   * 現在の行列の拡大率を指定した倍率に設定する\n   *\n   * @param x X軸の拡大率\n   * @param y Y軸の拡大率\n   */\n  public scale(x: number, y: number): void {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n\n  /**\n   * 現在の行列に行列を乗算\n   *\n   * @param m 行列\n   */\n  public multiplyByMatrix(m: CubismMatrix44): void {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n\n  /**\n   * オブジェクトのコピーを生成する\n   */\n  public clone(): CubismMatrix44 {\n    const cloneMatrix: CubismMatrix44 = new CubismMatrix44();\n\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n\n    return cloneMatrix;\n  }\n\n  protected _tr: Float32Array; // 4x4行列データ\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismRenderer } from './rendering/cubismrenderer';\nimport { CubismLogInfo, CubismLogWarning } from './utils/cubismdebug';\n\n// ファイルスコープの変数を初期化\n\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option: CubismStartupOption | undefined = undefined;\n\n/**\n * Framework内で使う定数の宣言\n */\nexport namespace Constant {\n  export const vertexOffset = 0; // メッシュ頂点のオフセット値\n  export const vertexStep = 2; // メッシュ頂点のステップ値\n}\n\n/**\n * Live2D Cubism SDK Original Workflow SDKのエントリポイント\n * 利用開始時はCubismFramework.initialize()を呼び、CubismFramework.dispose()で終了する。\n */\nexport class CubismFramework {\n  /**\n   * Cubism FrameworkのAPIを使用可能にする。\n   *  APIを実行する前に必ずこの関数を実行すること。\n   *  一度準備が完了して以降は、再び実行しても内部処理がスキップされます。\n   *\n   * @param    option      Optionクラスのインスタンス\n   *\n   * @return   準備処理が完了したらtrueが返ります。\n   */\n  public static startUp(option?: CubismStartupOption): boolean {\n    if (s_isStarted) {\n      CubismLogInfo('CubismFramework.startUp() is already done.');\n      return s_isStarted;\n    }\n\n    if ((Live2DCubismCore as any)._isStarted) {\n      s_isStarted = true;\n      return true;\n    }\n\n    (Live2DCubismCore as any)._isStarted = true;\n\n    s_option = option;\n\n    if (s_option) {\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n\n    s_isStarted = true;\n\n    // Live2D Cubism Coreバージョン情報を表示\n    if (s_isStarted) {\n      const version: number = Live2DCubismCore.Version.csmGetVersion();\n      const major: number = (version & 0xff000000) >> 24;\n      const minor: number = (version & 0x00ff0000) >> 16;\n      const patch: number = version & 0x0000ffff;\n      const versionNumber: number = version;\n\n      CubismLogInfo(\n        `Live2D Cubism Core version: {0}.{1}.{2} ({3})`,\n        ('00' + major).slice(-2),\n        ('00' + minor).slice(-2),\n        ('0000' + patch).slice(-4),\n        versionNumber,\n      );\n    }\n\n    CubismLogInfo('CubismFramework.startUp() is complete.');\n\n    return s_isStarted;\n  }\n\n  /**\n   * StartUp()で初期化したCubismFrameworkの各パラメータをクリアします。\n   * Dispose()したCubismFrameworkを再利用する際に利用してください。\n   */\n  public static cleanUp(): void {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = undefined;\n  }\n\n  /**\n   * Cubism Framework内のリソースを初期化してモデルを表示可能な状態にします。<br>\n   *     再度Initialize()するには先にDispose()を実行する必要があります。\n   */\n  public static initialize(): void {\n    if (!s_isStarted) {\n      CubismLogWarning('CubismFramework is not started.');\n      return;\n    }\n\n    // --- s_isInitializedによる連続初期化ガード ---\n    // 連続してリソース確保が行われないようにする。\n    // 再度Initialize()するには先にDispose()を実行する必要がある。\n    if (s_isInitialized) {\n      CubismLogWarning(\n        'CubismFramework.initialize() skipped, already initialized.',\n      );\n      return;\n    }\n\n    s_isInitialized = true;\n\n    CubismLogInfo('CubismFramework.initialize() is complete.');\n  }\n\n  /**\n   * Cubism Framework内の全てのリソースを解放します。\n   *      ただし、外部で確保されたリソースについては解放しません。\n   *      外部で適切に破棄する必要があります。\n   */\n  public static dispose(): void {\n    if (!s_isStarted) {\n      CubismLogWarning('CubismFramework is not started.');\n      return;\n    }\n\n    // --- s_isInitializedによる未初期化解放ガード ---\n    // dispose()するには先にinitialize()を実行する必要がある。\n    if (!s_isInitialized) {\n      // false...リソース未確保の場合\n      CubismLogWarning('CubismFramework.dispose() skipped, not initialized.');\n      return;\n    }\n\n    // レンダラの静的リソース（シェーダプログラム他）を解放する\n    CubismRenderer.staticRelease();\n\n    s_isInitialized = false;\n\n    CubismLogInfo('CubismFramework.dispose() is complete.');\n  }\n\n  /**\n   * Cubism FrameworkのAPIを使用する準備が完了したかどうか\n   * @return APIを使用する準備が完了していればtrueが返ります。\n   */\n  public static isStarted(): boolean {\n    return s_isStarted;\n  }\n\n  /**\n   * Cubism Frameworkのリソース初期化がすでに行われているかどうか\n   * @return リソース確保が完了していればtrueが返ります\n   */\n  public static isInitialized(): boolean {\n    return s_isInitialized;\n  }\n\n  /**\n   * Core APIにバインドしたログ関数を実行する\n   *\n   * @praram message ログメッセージ\n   */\n  public static coreLogFunction(message: string): void {\n    // Return if logging not possible.\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n\n  /**\n   * 現在のログ出力レベル設定の値を返す。\n   *\n   * @return  現在のログ出力レベル設定の値\n   */\n  public static getLoggingLevel(): LogLevel {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n\n  /**\n   * 静的クラスとして使用する\n   * インスタンス化させない\n   */\n  private constructor() {}\n}\n\nexport interface CubismStartupOption {\n  logFunction: Live2DCubismCore.csmLogFunction; // ログ出力の関数オブジェクト\n  loggingLevel: LogLevel; // ログ出力レベルの設定\n}\n\n/**\n * ログ出力のレベル\n */\nexport enum LogLevel {\n  LogLevel_Verbose = 0, // 詳細ログ\n  LogLevel_Debug, // デバッグログ\n  LogLevel_Info, // Infoログ\n  LogLevel_Warning, // 警告ログ\n  LogLevel_Error, // エラーログ\n  LogLevel_Off // ログ出力無効\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismFramework, LogLevel } from '../live2dcubismframework';\n\nexport const CSM_ASSERT = process.env.NODE_ENV === 'production' ? () => {} : (expr: any) => console.assert(expr);\n\nexport function CubismLogVerbose(fmt: string, ...args: any[]) {\n  CubismDebug.print(LogLevel.LogLevel_Verbose, '[CSM][V]' + fmt + '\\n', args);\n}\n\nexport function CubismLogDebug(fmt: string, ...args: any[]) {\n  CubismDebug.print(LogLevel.LogLevel_Debug, '[CSM][D]' + fmt + '\\n', args);\n}\n\nexport function CubismLogInfo(fmt: string, ...args: any[]) {\n  CubismDebug.print(LogLevel.LogLevel_Info, '[CSM][I]' + fmt + '\\n', args);\n}\n\nexport function CubismLogWarning(fmt: string, ...args: any[]) {\n  CubismDebug.print(LogLevel.LogLevel_Warning, '[CSM][W]' + fmt + '\\n', args);\n}\n\nexport function CubismLogError(fmt: string, ...args: any[]) {\n  CubismDebug.print(LogLevel.LogLevel_Error, '[CSM][E]' + fmt + '\\n', args);\n}\n\n/**\n * デバッグ用のユーティリティクラス。\n * ログの出力、バイトのダンプなど\n */\nexport class CubismDebug {\n  /**\n   * ログを出力する。第一引数にログレベルを設定する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param format 書式付き文字列\n   * @param args 可変長引数\n   */\n  public static print(\n    logLevel: LogLevel,\n    format: string,\n    args?: any[],\n  ): void {\n    // オプションで設定されたログ出力レベルを下回る場合はログに出さない\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n\n    const logPrint: Live2DCubismCore.csmLogFunction = CubismFramework.coreLogFunction;\n\n    if (!logPrint) return;\n\n    const buffer: string = format.replace(/{(\\d+)}/g, (m, k) => {\n      return args![k];\n    });\n    logPrint(buffer);\n  }\n\n  /**\n   * データから指定した長さだけダンプ出力する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param data ダンプするデータ\n   * @param length ダンプする長さ\n   */\n  public static dumpBytes(\n    logLevel: LogLevel,\n    data: Uint8Array,\n    length: number,\n  ): void {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0) this.print(logLevel, '\\n');\n      else if (i % 8 == 0 && i > 0) this.print(logLevel, '  ');\n      this.print(logLevel, '{0} ', [data[i] & 0xff]);\n    }\n\n    this.print(logLevel, '\\n');\n  }\n\n  /**\n   * private コンストラクタ\n   */\n  private constructor() {}\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismMath } from '../math/cubismmath';\nimport { CubismModel } from '../model/cubismmodel';\nimport { CSM_ASSERT } from '../utils/cubismdebug';\nimport { CubismMotionQueueEntry } from './cubismmotionqueueentry';\n\n/**\n * モーションの抽象基底クラス\n *\n * モーションの抽象基底クラス。MotionQueueManagerによってモーションの再生を管理する。\n */\nexport abstract class ACubismMotion {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._fadeInSeconds = -1.0;\n    this._fadeOutSeconds = -1.0;\n    this._weight = 1.0;\n    this._offsetSeconds = 0.0; // 再生の開始時刻\n    this._firedEventValues = [];\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    this._weight = 0.0;\n  }\n\n  /**\n   * モデルのパラメータ\n   * @param model 対象のモデル\n   * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   */\n  public updateParameters(\n    model: CubismModel,\n    motionQueueEntry: CubismMotionQueueEntry,\n    userTimeSeconds: number,\n  ): void {\n    if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n      return;\n    }\n\n    if (!motionQueueEntry.isStarted()) {\n      motionQueueEntry.setIsStarted(true);\n      motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds); // モーションの開始時刻を記録\n      motionQueueEntry.setFadeInStartTime(userTimeSeconds); // フェードインの開始時刻\n\n      const duration: number = this.getDuration();\n\n      if (motionQueueEntry.getEndTime() < 0) {\n        // 開始していないうちに終了設定している場合がある。\n        motionQueueEntry.setEndTime(\n          duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration,\n        );\n        // duration == -1 の場合はループする\n      }\n    }\n\n    let fadeWeight: number = this._weight; // 現在の値と掛け合わせる割合\n\n    //---- フェードイン・アウトの処理 ----\n    // 単純なサイン関数でイージングする\n    const fadeIn: number =\n      this._fadeInSeconds == 0.0\n        ? 1.0\n        : CubismMath.getEasingSine(\n        (userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n        this._fadeInSeconds,\n        );\n\n    const fadeOut: number =\n      this._fadeOutSeconds == 0.0 || motionQueueEntry.getEndTime() < 0.0\n        ? 1.0\n        : CubismMath.getEasingSine(\n        (motionQueueEntry.getEndTime() - userTimeSeconds) /\n        this._fadeOutSeconds,\n        );\n\n    fadeWeight = fadeWeight * fadeIn * fadeOut;\n\n    motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n\n    CSM_ASSERT(0.0 <= fadeWeight && fadeWeight <= 1.0);\n\n    //---- 全てのパラメータIDをループする ----\n    this.doUpdateParameters(\n      model,\n      userTimeSeconds,\n      fadeWeight,\n      motionQueueEntry,\n    );\n\n    // 後処理\n    // 終了時刻を過ぎたら終了フラグを立てる(CubismMotionQueueManager)\n    if (\n      motionQueueEntry.getEndTime() > 0 &&\n      motionQueueEntry.getEndTime() < userTimeSeconds\n    ) {\n      motionQueueEntry.setIsFinished(true); // 終了\n    }\n  }\n\n  /**\n   * フェードインの時間を設定する\n   * @param fadeInSeconds フェードインにかかる時間[秒]\n   */\n  public setFadeInTime(fadeInSeconds: number): void {\n    this._fadeInSeconds = fadeInSeconds;\n  }\n\n  /**\n   * フェードアウトの時間を設定する\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   */\n  public setFadeOutTime(fadeOutSeconds: number): void {\n    this._fadeOutSeconds = fadeOutSeconds;\n  }\n\n  /**\n   * フェードアウトにかかる時間の取得\n   * @return フェードアウトにかかる時間[秒]\n   */\n  public getFadeOutTime(): number {\n    return this._fadeOutSeconds;\n  }\n\n  /**\n   * フェードインにかかる時間の取得\n   * @return フェードインにかかる時間[秒]\n   */\n  public getFadeInTime(): number {\n    return this._fadeInSeconds;\n  }\n\n  /**\n   * モーション適用の重みの設定\n   * @param weight 重み（0.0 - 1.0）\n   */\n  public setWeight(weight: number): void {\n    this._weight = weight;\n  }\n\n  /**\n   * モーション適用の重みの取得\n   * @return 重み（0.0 - 1.0）\n   */\n  public getWeight(): number {\n    return this._weight;\n  }\n\n  /**\n   * モーションの長さの取得\n   * @return モーションの長さ[秒]\n   *\n   * @note ループの時は「-1」。\n   *       ループでない場合は、オーバーライドする。\n   *       正の値の時は取得される時間で終了する。\n   *       「-1」の時は外部から停止命令がない限り終わらない処理となる。\n   */\n  public getDuration(): number {\n    return -1.0;\n  }\n\n  /**\n   * モーションのループ1回分の長さの取得\n   * @return モーションのループ一回分の長さ[秒]\n   *\n   * @note ループしない場合は、getDuration()と同じ値を返す\n   *       ループ一回分の長さが定義できない場合(プログラム的に動き続けるサブクラスなど)の場合は「-1」を返す\n   */\n  public getLoopDuration(): number {\n    return -1.0;\n  }\n\n  /**\n   * モーション再生の開始時刻の設定\n   * @param offsetSeconds モーション再生の開始時刻[秒]\n   */\n  public setOffsetTime(offsetSeconds: number): void {\n    this._offsetSeconds = offsetSeconds;\n  }\n\n  /**\n   * モデルのパラメータ更新\n   *\n   * イベント発火のチェック。\n   * 入力する時間は呼ばれるモーションタイミングを０とした秒数で行う。\n   *\n   * @param beforeCheckTimeSeconds 前回のイベントチェック時間[秒]\n   * @param motionTimeSeconds 今回の再生時間[秒]\n   */\n  public getFiredEvent(\n    beforeCheckTimeSeconds: number,\n    motionTimeSeconds: number,\n  ): string[] {\n    return this._firedEventValues;\n  }\n\n  /**\n   * モーションを更新して、モデルにパラメータ値を反映する\n   * @param model 対象のモデル\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   * @param weight モーションの重み\n   * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\n   * @return true モデルへパラメータ値の反映あり\n   * @return false モデルへのパラメータ値の反映なし（モーションの変化なし）\n   */\n  public abstract doUpdateParameters(\n    model: CubismModel,\n    userTimeSeconds: number,\n    weight: number,\n    motionQueueEntry: CubismMotionQueueEntry,\n  ): void;\n\n  /**\n   * モーション再生終了コールバックの登録\n   *\n   * モーション再生終了コールバックを登録する。\n   * isFinishedフラグを設定するタイミングで呼び出される。\n   * 以下の状態の際には呼び出されない:\n   *   1. 再生中のモーションが「ループ」として設定されているとき\n   *   2. コールバックが登録されていない時\n   *\n   * @param onFinishedMotionHandler モーション再生終了コールバック関数\n   */\n  public setFinishedMotionHandler(\n    onFinishedMotionHandler?: (self: ACubismMotion) => void,\n  ) {\n    this._onFinishedMotion = onFinishedMotionHandler;\n  };\n\n  /**\n   * モーション再生終了コールバックの取得\n   *\n   * モーション再生終了コールバックを取得する。\n   *\n   * @return 登録されているモーション再生終了コールバック関数\n   */\n  public getFinishedMotionHandler() {\n    return this._onFinishedMotion;\n  };\n\n  public _fadeInSeconds: number; // フェードインにかかる時間[秒]\n  public _fadeOutSeconds: number; // フェードアウトにかかる時間[秒]\n  public _weight: number; // モーションの重み\n  public _offsetSeconds: number; // モーション再生の開始時間[秒]\n\n  public _firedEventValues: string[];\n\n  // モーション再生終了コールバック関数\n  public _onFinishedMotion?: (self: ACubismMotion) => void;\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from '../model/cubismmodel';\nimport { ACubismMotion } from './acubismmotion';\nimport { CubismMotionQueueEntry } from './cubismmotionqueueentry';\n\n// exp3.jsonのキーとデフォルト\nconst DefaultFadeTime = 1.0;\n\n/**\n * 表情のモーション\n *\n * 表情のモーションクラス。\n */\nexport class CubismExpressionMotion extends ACubismMotion {\n  /**\n   * インスタンスを作成する。\n   * @param json expファイルが読み込まれているバッファ\n   * @param size バッファのサイズ\n   * @return 作成されたインスタンス\n   */\n  public static create(json: CubismSpec.ExpressionJSON): CubismExpressionMotion {\n    const expression: CubismExpressionMotion = new CubismExpressionMotion();\n\n    const fadeInTime = json.FadeInTime;\n    const fadeOutTime = json.FadeOutTime;\n\n    expression.setFadeInTime(fadeInTime !== undefined ? fadeInTime : DefaultFadeTime); // フェードイン\n    expression.setFadeOutTime(fadeOutTime !== undefined ? fadeOutTime : DefaultFadeTime); // フェードアウト\n\n    // 各パラメータについて\n    const parameters = json.Parameters || [];\n\n    for (let i = 0; i < parameters.length; ++i) {\n      const param = parameters[i];\n      const parameterId: string = param.Id; // パラメータID\n\n      const value: number = param.Value; // 値\n\n      // 計算方法の設定\n      let blendType: ExpressionBlendType;\n\n      switch (param.Blend) {\n        case 'Multiply':\n          blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n          break;\n\n        case 'Overwrite':\n          blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n          break;\n\n        case 'Add':\n        // その他 仕様にない値を設定した時は加算モードにすることで復旧\n        default:\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n          break;\n      }\n\n      // 設定オブジェクトを作成してリストに追加する\n      const item: ExpressionParameter = {\n        parameterId: parameterId,\n        blendType: blendType,\n        value: value,\n      };\n\n      expression._parameters.push(item);\n    }\n\n    return expression;\n  }\n\n  /**\n   * モデルのパラメータの更新の実行\n   * @param model 対象のモデル\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   * @param weight モーションの重み\n   * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\n   */\n  public doUpdateParameters(\n    model: CubismModel,\n    userTimeSeconds: number,\n    weight: number,\n    motionQueueEntry: CubismMotionQueueEntry,\n  ): void {\n    for (let i = 0; i < this._parameters.length; ++i) {\n      const parameter: ExpressionParameter = this._parameters[i];\n\n      switch (parameter.blendType) {\n        case ExpressionBlendType.ExpressionBlendType_Add: {\n          model.addParameterValueById(\n            parameter.parameterId,\n            parameter.value,\n            weight,\n          );\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Multiply: {\n          model.multiplyParameterValueById(\n            parameter.parameterId,\n            parameter.value,\n            weight,\n          );\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n          model.setParameterValueById(\n            parameter.parameterId,\n            parameter.value,\n            weight,\n          );\n          break;\n        }\n        default:\n          // 仕様にない値を設定した時はすでに加算モードになっている\n          break;\n      }\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    super();\n\n    this._parameters = [];\n  }\n\n  _parameters: ExpressionParameter[]; // 表情のパラメータ情報リスト\n}\n\n/**\n * 表情パラメータ値の計算方式\n */\nexport enum ExpressionBlendType {\n  ExpressionBlendType_Add = 0, // 加算\n  ExpressionBlendType_Multiply = 1, // 乗算\n  ExpressionBlendType_Overwrite = 2 // 上書き\n}\n\n/**\n * 表情のパラメータ情報\n */\nexport interface ExpressionParameter {\n  parameterId: string; // パラメータID\n  blendType: ExpressionBlendType; // パラメータの演算種類\n  value: number; // 値\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { ACubismMotion } from './acubismmotion';\nimport { CubismMotionQueueEntryHandle } from './cubismmotionqueuemanager';\n\n/**\n * CubismMotionQueueManagerで再生している各モーションの管理クラス。\n */\nexport class CubismMotionQueueEntry {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._autoDelete = false;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1.0;\n    this._fadeInStartTimeSeconds = 0.0;\n    this._endTimeSeconds = -1.0;\n    this._stateTimeSeconds = 0.0;\n    this._stateWeight = 0.0;\n    this._lastEventCheckSeconds = 0.0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0.0;\n    this._isTriggeredFadeOut = false;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    if (this._autoDelete && this._motion) {\n      this._motion.release();\n    }\n  }\n\n  /**\n   * フェードアウト時間と開始判定の設定\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   */\n  public setFadeOut(fadeOutSeconds: number): void {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n\n  /**\n   * フェードアウトの開始\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   */\n  public startFadeOut(fadeOutSeconds: number, userTimeSeconds: number): void {\n    const newEndTimeSeconds: number = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n\n    if (\n      this._endTimeSeconds < 0.0 ||\n      newEndTimeSeconds < this._endTimeSeconds\n    ) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n\n  /**\n   * モーションの終了の確認\n   *\n   * @return true モーションが終了した\n   * @return false 終了していない\n   */\n  public isFinished(): boolean {\n    return this._finished;\n  }\n\n  /**\n   * モーションの開始の確認\n   * @return true モーションが開始した\n   * @return false 開始していない\n   */\n  public isStarted(): boolean {\n    return this._started;\n  }\n\n  /**\n   * モーションの開始時刻の取得\n   * @return モーションの開始時刻[秒]\n   */\n  public getStartTime(): number {\n    return this._startTimeSeconds;\n  }\n\n  /**\n   * フェードインの開始時刻の取得\n   * @return フェードインの開始時刻[秒]\n   */\n  public getFadeInStartTime(): number {\n    return this._fadeInStartTimeSeconds;\n  }\n\n  /**\n   * フェードインの終了時刻の取得\n   * @return フェードインの終了時刻の取得\n   */\n  public getEndTime(): number {\n    return this._endTimeSeconds;\n  }\n\n  /**\n   * モーションの開始時刻の設定\n   * @param startTime モーションの開始時刻\n   */\n  public setStartTime(startTime: number): void {\n    this._startTimeSeconds = startTime;\n  }\n\n  /**\n   * フェードインの開始時刻の設定\n   * @param startTime フェードインの開始時刻[秒]\n   */\n  public setFadeInStartTime(startTime: number): void {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n\n  /**\n   * フェードインの終了時刻の設定\n   * @param endTime フェードインの終了時刻[秒]\n   */\n  public setEndTime(endTime: number): void {\n    this._endTimeSeconds = endTime;\n  }\n\n  /**\n   * モーションの終了の設定\n   * @param f trueならモーションの終了\n   */\n  public setIsFinished(f: boolean): void {\n    this._finished = f;\n  }\n\n  /**\n   * モーション開始の設定\n   * @param f trueならモーションの開始\n   */\n  public setIsStarted(f: boolean): void {\n    this._started = f;\n  }\n\n  /**\n   * モーションの有効性の確認\n   * @return true モーションは有効\n   * @return false モーションは無効\n   */\n  public isAvailable(): boolean {\n    return this._available;\n  }\n\n  /**\n   * モーションの有効性の設定\n   * @param v trueならモーションは有効\n   */\n  public setIsAvailable(v: boolean): void {\n    this._available = v;\n  }\n\n  /**\n   * モーションの状態の設定\n   * @param timeSeconds 現在時刻[秒]\n   * @param weight モーション尾重み\n   */\n  public setState(timeSeconds: number, weight: number): void {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n\n  /**\n   * モーションの現在時刻の取得\n   * @return モーションの現在時刻[秒]\n   */\n  public getStateTime(): number {\n    return this._stateTimeSeconds;\n  }\n\n  /**\n   * モーションの重みの取得\n   * @return モーションの重み\n   */\n  public getStateWeight(): number {\n    return this._stateWeight;\n  }\n\n  /**\n   * 最後にイベントの発火をチェックした時間を取得\n   *\n   * @return 最後にイベントの発火をチェックした時間[秒]\n   */\n  public getLastCheckEventSeconds(): number {\n    return this._lastEventCheckSeconds;\n  }\n\n  /**\n   * 最後にイベントをチェックした時間を設定\n   * @param checkSeconds 最後にイベントをチェックした時間[秒]\n   */\n  public setLastCheckEventSeconds(checkSeconds: number): void {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n\n  /**\n   * フェードアウト開始判定の取得\n   * @return フェードアウト開始するかどうか\n   */\n  public isTriggeredFadeOut(): boolean {\n    return this._isTriggeredFadeOut && this._endTimeSeconds < 0.0;\n  }\n\n  /**\n   * フェードアウト時間の取得\n   * @return フェードアウト時間[秒]\n   */\n  public getFadeOutSeconds(): number {\n    return this._fadeOutSeconds;\n  }\n\n  _autoDelete: boolean; // 自動削除\n  _motion!: ACubismMotion; // モーション\n\n  _available: boolean; // 有効化フラグ\n  _finished: boolean; // 終了フラグ\n  _started: boolean; // 開始フラグ\n  _startTimeSeconds: number; // モーション再生開始時刻[秒]\n  _fadeInStartTimeSeconds: number; // フェードイン開始時刻（ループの時は初回のみ）[秒]\n  _endTimeSeconds: number; // 終了予定時刻[秒]\n  _stateTimeSeconds: number; // 時刻の状態[秒]\n  _stateWeight: number; // 重みの状態\n  _lastEventCheckSeconds: number; // 最終のMotion側のチェックした時間\n  private _fadeOutSeconds: number; // フェードアウト時間[秒]\n  private _isTriggeredFadeOut: boolean; // フェードアウト開始フラグ\n\n  _motionQueueEntryHandle: CubismMotionQueueEntryHandle; // インスタンスごとに一意の値を持つ識別番号\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from '../model/cubismmodel';\nimport { ACubismMotion } from './acubismmotion';\nimport { CubismMotionQueueEntry } from './cubismmotionqueueentry';\n\n/**\n * モーション再生の管理\n *\n * モーション再生の管理用クラス。CubismMotionモーションなどACubismMotionのサブクラスを再生するために使用する。\n *\n * @note 再生中に別のモーションが StartMotion()された場合は、新しいモーションに滑らかに変化し旧モーションは中断する。\n *       表情用モーション、体用モーションなどを分けてモーション化した場合など、\n *       複数のモーションを同時に再生させる場合は、複数のCubismMotionQueueManagerインスタンスを使用する。\n */\nexport class CubismMotionQueueManager {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._userTimeSeconds = 0.0;\n    this._eventCustomData = null;\n    this._motions = [];\n  }\n\n  /**\n   * デストラクタ\n   */\n  public release(): void {\n    for (let i = 0; i < this._motions.length; ++i) {\n      if (this._motions[i]) {\n        this._motions[i].release();\n      }\n    }\n\n    (this as Partial<this>)._motions = undefined;\n  }\n\n  /**\n   * 指定したモーションの開始\n   *\n   * 指定したモーションを開始する。同じタイプのモーションが既にある場合は、既存のモーションに終了フラグを立て、フェードアウトを開始させる。\n   *\n   * @param   motion          開始するモーション\n   * @param   autoDelete      再生が終了したモーションのインスタンスを削除するなら true\n   * @param   userTimeSeconds デルタ時間の積算値[秒]\n   * @return                      開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するIsFinished()の引数で使用する。開始できない時は「-1」\n   */\n  public startMotion(\n    motion: ACubismMotion,\n    autoDelete: boolean,\n    userTimeSeconds: number,\n  ): CubismMotionQueueEntryHandle {\n    if (motion == null) {\n      return InvalidMotionQueueEntryHandleValue;\n    }\n\n    let motionQueueEntry: CubismMotionQueueEntry;\n\n    // 既にモーションがあれば終了フラグを立てる\n    for (let i = 0; i < this._motions.length; ++i) {\n      motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n\n      motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime()); // フェードアウト設定\n    }\n\n    motionQueueEntry = new CubismMotionQueueEntry(); // 終了時に破棄する\n    motionQueueEntry._autoDelete = autoDelete;\n    motionQueueEntry._motion = motion;\n\n    this._motions.push(motionQueueEntry);\n\n    return motionQueueEntry._motionQueueEntryHandle;\n  }\n\n  /**\n   * 全てのモーションの終了の確認\n   * @return true 全て終了している\n   * @return false 終了していない\n   */\n  public isFinished(): boolean {\n    // ------- 処理を行う -------\n    // 既にモーションがあれば終了フラグを立てる\n\n    let i = 0;\n\n    while (i < this._motions.length) {\n      const motionQueueEntry: CubismMotionQueueEntry = this._motions[i];\n\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1); // 削除\n        continue;\n      }\n\n      const motion: ACubismMotion = motionQueueEntry._motion;\n\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1); // 削除\n        continue;\n      }\n\n      // ----- 終了済みの処理があれば削除する ------\n      if (!motionQueueEntry.isFinished()) {\n        return false;\n      }\n\n      i++;\n    }\n\n    return true;\n  }\n\n  /**\n   * 指定したモーションの終了の確認\n   * @param motionQueueEntryNumber モーションの識別番号\n   * @return true 全て終了している\n   * @return false 終了していない\n   */\n  public isFinishedByHandle(\n    motionQueueEntryNumber: CubismMotionQueueEntryHandle,\n  ): boolean {\n    // 既にモーションがあれば終了フラグを立てる\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry: CubismMotionQueueEntry = this._motions[i];\n\n      if (motionQueueEntry == null) {\n        continue;\n      }\n\n      if (\n        motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber &&\n        !motionQueueEntry.isFinished()\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * 全てのモーションを停止する\n   */\n  public stopAllMotions(): void {\n    // ------- 処理を行う -------\n    // 既にモーションがあれば終了フラグを立てる\n\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry: CubismMotionQueueEntry = this._motions[i];\n\n      if (motionQueueEntry != null) {\n        // ----- 終了済みの処理があれば削除する ------\n        motionQueueEntry.release();\n      }\n    }\n\n    this._motions = [];\n  }\n\n  /**\n   * 指定したCubismMotionQueueEntryの取得\n\n   * @param   motionQueueEntryNumber  モーションの識別番号\n   * @return  指定したCubismMotionQueueEntry\n   * @return  null   見つからなかった\n   */\n  public getCubismMotionQueueEntry(\n    motionQueueEntryNumber: any,\n  ): CubismMotionQueueEntry | undefined {\n    //------- 処理を行う -------\n    // 既にモーションがあれば終了フラグを立てる\n    return this._motions.find(entry => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n  }\n\n  /**\n   * イベントを受け取るCallbackの登録\n   *\n   * @param callback コールバック関数\n   * @param customData コールバックに返されるデータ\n   */\n  public setEventCallback(\n    callback: CubismMotionEventFunction,\n    customData: any = null,\n  ): void {\n    this._eventCallBack = callback;\n    this._eventCustomData = customData;\n  }\n\n  /**\n   * モーションを更新して、モデルにパラメータ値を反映する。\n   *\n   * @param   model   対象のモデル\n   * @param   userTimeSeconds   デルタ時間の積算値[秒]\n   * @return  true    モデルへパラメータ値の反映あり\n   * @return  false   モデルへパラメータ値の反映なし(モーションの変化なし)\n   */\n  public doUpdateMotion(\n    model: CubismModel,\n    userTimeSeconds: number,\n  ): boolean {\n    let updated = false;\n\n    // ------- 処理を行う --------\n    // 既にモーションがあれば終了フラグを立てる\n\n    let i = 0;\n\n    while (i < this._motions.length) {\n      const motionQueueEntry: CubismMotionQueueEntry = this._motions[i];\n\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1); // 削除\n        continue;\n      }\n\n      const motion: ACubismMotion = motionQueueEntry._motion;\n\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1); // 削除\n        continue;\n      }\n\n      // ------ 値を反映する ------\n      motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n      updated = true;\n\n      // ------ ユーザトリガーイベントを検査する ----\n      const firedList: string[] = motion.getFiredEvent(\n        motionQueueEntry.getLastCheckEventSeconds() -\n        motionQueueEntry.getStartTime(),\n        userTimeSeconds - motionQueueEntry.getStartTime(),\n      );\n\n      for (let i = 0; i < firedList.length; ++i) {\n        this._eventCallBack(this, firedList[i], this._eventCustomData);\n      }\n\n      motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n\n      // ------ 終了済みの処理があれば削除する ------\n      if (motionQueueEntry.isFinished()) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1); // 削除\n      } else {\n        if (motionQueueEntry.isTriggeredFadeOut()) {\n          motionQueueEntry.startFadeOut(\n            motionQueueEntry.getFadeOutSeconds(),\n            userTimeSeconds\n          );\n        }\n        i++;\n      }\n    }\n\n    return updated;\n  }\n\n  _userTimeSeconds: number; // デルタ時間の積算値[秒]\n\n  _motions: CubismMotionQueueEntry[]; // モーション\n  _eventCallBack!: CubismMotionEventFunction; // コールバック関数\n  _eventCustomData: any; // コールバックに戻されるデータ\n}\n\n/**\n * イベントのコールバック関数を定義\n *\n * イベントのコールバックに登録できる関数の型情報\n * @param caller        発火したイベントを再生させたCubismMotionQueueManager\n * @param eventValue    発火したイベントの文字列データ\n * @param customData   コールバックに返される登録時に指定されたデータ\n */\nexport interface CubismMotionEventFunction {\n  (\n    caller: CubismMotionQueueManager,\n    eventValue: string,\n    customData: any,\n  ): void;\n}\n\n/**\n * モーションの識別番号\n *\n * モーションの識別番号の定義\n */\nexport declare type CubismMotionQueueEntryHandle = any;\nexport const InvalidMotionQueueEntryHandleValue: CubismMotionQueueEntryHandle = -1;\n","import { MotionManagerOptions } from '@/cubism-common';\nimport { ExpressionManager } from '@/cubism-common/ExpressionManager';\nimport { Cubism4ModelSettings } from '@/cubism4/Cubism4ModelSettings';\nimport { CubismModel } from '@cubism/model/cubismmodel';\nimport { CubismExpressionMotion } from '@cubism/motion/cubismexpressionmotion';\nimport { CubismMotionQueueManager } from '@cubism/motion/cubismmotionqueuemanager';\n\nexport class Cubism4ExpressionManager extends ExpressionManager<CubismExpressionMotion, CubismSpec.Expression> {\n    readonly queueManager = new CubismMotionQueueManager();\n\n    readonly definitions: CubismSpec.Expression[];\n\n    constructor(settings: Cubism4ModelSettings, options?: MotionManagerOptions) {\n        super(settings, options);\n\n        this.definitions = settings.expressions ?? [];\n\n        this.init();\n    }\n\n    isFinished(): boolean {\n        return this.queueManager.isFinished();\n    }\n\n    getExpressionIndex(name: string): number {\n        return this.definitions.findIndex(def => def.Name === name);\n    }\n\n    getExpressionFile(definition: CubismSpec.Expression): string {\n        return definition.File;\n    }\n\n    createExpression(data: object, definition: CubismSpec.Expression | undefined) {\n        return CubismExpressionMotion.create(data as unknown as CubismSpec.ExpressionJSON);\n    }\n\n    protected _setExpression(motion: CubismExpressionMotion): number {\n        return this.queueManager.startMotion(motion, false, performance.now());\n    }\n\n    protected stopAllExpressions(): void {\n        this.queueManager.stopAllMotions();\n    }\n\n    protected updateParameters(model: CubismModel, now: DOMHighResTimeStamp): boolean {\n        return this.queueManager.doUpdateMotion(model, now);\n    }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * Model3Jsonパーサー\n *\n * model3.jsonファイルをパースして値を取得する\n */\nexport class CubismModelSettingsJson {\n  public constructor(json: CubismSpec.ModelJSON) {\n    this.groups = json.Groups;\n    this.hitAreas = json.HitAreas;\n    this.layout = json.Layout;\n\n    this.moc = json.FileReferences.Moc;\n    this.expressions = json.FileReferences.Expressions;\n    this.motions = json.FileReferences.Motions;\n    this.textures = json.FileReferences.Textures;\n    this.physics = json.FileReferences.Physics;\n    this.pose = json.FileReferences.Pose;\n  }\n\n  public getEyeBlinkParameters(): string[] | undefined {\n    return this.groups?.find(group => group.Name === 'EyeBlink')?.Ids;\n  }\n\n  public getLipSyncParameters(): string[] | undefined {\n    return this.groups?.find(group => group.Name === 'LipSync')?.Ids;\n  }\n\n  groups?: CubismSpec.Group[];\n  moc: string;\n  expressions?: CubismSpec.Expression[];\n  motions?: Record<string, CubismSpec.Motion[]>;\n  textures: string[];\n  physics?: string;\n  pose?: string;\n  hitAreas?: CubismSpec.HitArea[];\n  layout?: CubismSpec.ModelJSON['Layout'];\n}\n","import { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { applyMixins } from '@/utils';\nimport { CubismModelSettingsJson } from '@cubism/settings/cubismmodelsettingsjson';\n\nexport interface Cubism4ModelSettings extends CubismModelSettingsJson {}\n\nexport class Cubism4ModelSettings extends ModelSettings {\n    json!: CubismSpec.ModelJSON;\n\n    moc!: string;\n    textures!: string[];\n\n    static isValidJSON(json: any): json is CubismSpec.ModelJSON {\n        return !!json?.FileReferences\n            && typeof json.FileReferences.Moc === 'string'\n            && json.FileReferences.Textures?.length > 0\n\n            // textures must be an array of strings\n            && json.FileReferences.Textures.every((item: any) => typeof item === 'string');\n    }\n\n    constructor(json: CubismSpec.ModelJSON & { url: string }) {\n        super(json);\n\n        if (!Cubism4ModelSettings.isValidJSON(json)) {\n            throw new TypeError('Invalid JSON.');\n        }\n\n        // this doesn't seem to be allowed in ES6 and above, calling it will cause an error:\n        // \"Class constructor CubismModelSettingsJson cannot be invoked without 'new'\"\n        //\n        // CubismModelSettingsJson.call(this, json);\n\n        Object.assign(this, new CubismModelSettingsJson(json));\n    }\n\n    replaceFiles(replace: (file: string, path: string) => string) {\n        super.replaceFiles(replace);\n\n        if (this.motions) {\n            for (const [group, motions] of Object.entries(this.motions)) {\n                for (let i = 0; i < motions.length; i++) {\n                    motions[i]!.File = replace(motions[i]!.File, `motions.${group}[${i}].File`);\n\n                    if (motions[i]!.Sound !== undefined) {\n                        motions[i]!.Sound = replace(motions[i]!.Sound!, `motions.${group}[${i}].Sound`);\n                    }\n                }\n            }\n        }\n\n        if (this.expressions) {\n            for (let i = 0; i < this.expressions.length; i++) {\n                this.expressions[i]!.File = replace(this.expressions[i]!.File, `expressions[${i}].File`);\n            }\n        }\n    }\n}\n\napplyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * @brief モーションカーブの種類\n *\n * モーションカーブの種類。\n */\nexport enum CubismMotionCurveTarget {\n  CubismMotionCurveTarget_Model, // モデルに対して\n  CubismMotionCurveTarget_Parameter, // パラメータに対して\n  CubismMotionCurveTarget_PartOpacity // パーツの不透明度に対して\n}\n\n/**\n * @brief モーションカーブのセグメントの種類\n *\n * モーションカーブのセグメントの種類。\n */\nexport enum CubismMotionSegmentType {\n  CubismMotionSegmentType_Linear = 0, // リニア\n  CubismMotionSegmentType_Bezier = 1, // ベジェ曲線\n  CubismMotionSegmentType_Stepped = 2, // ステップ\n  CubismMotionSegmentType_InverseStepped = 3 // インバースステップ\n}\n\n/**\n * @brief モーションカーブの制御点\n *\n * モーションカーブの制御点。\n */\nexport class CubismMotionPoint {\n  constructor(time = 0.0, value = 0.0) {\n    this.time = time;\n    this.value = value;\n  }\n\n  time: number; // 時間[秒]\n  value: number; // 値\n}\n\n/**\n * モーションカーブのセグメントの評価関数\n *\n * @param   points      モーションカーブの制御点リスト\n * @param   time        評価する時間[秒]\n */\nexport interface csmMotionSegmentEvaluationFunction {\n  (points: CubismMotionPoint[], time: number): number;\n}\n\n/**\n * @brief モーションカーブのセグメント\n *\n * モーションカーブのセグメント。\n */\nexport class CubismMotionSegment {\n  /**\n   * @brief コンストラクタ\n   *\n   * コンストラクタ。\n   */\n  public constructor() {\n    this.basePointIndex = 0;\n    this.segmentType = 0;\n  }\n\n  evaluate!: csmMotionSegmentEvaluationFunction; // 使用する評価関数\n  basePointIndex: number; // 最初のセグメントへのインデックス\n  segmentType: number; // セグメントの種類\n}\n\n/**\n * @brief モーションカーブ\n *\n * モーションカーブ。\n */\nexport class CubismMotionCurve {\n  public constructor() {\n    this.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n    this.segmentCount = 0;\n    this.baseSegmentIndex = 0;\n    this.fadeInTime = 0.0;\n    this.fadeOutTime = 0.0;\n  }\n\n  type: CubismMotionCurveTarget; // カーブの種類\n  id: string = ''; // カーブのID\n  segmentCount: number; // セグメントの個数\n  baseSegmentIndex: number; // 最初のセグメントのインデックス\n  fadeInTime: number; // フェードインにかかる時間[秒]\n  fadeOutTime: number; // フェードアウトにかかる時間[秒]\n}\n\n/**\n * イベント。\n */\nexport class CubismMotionEvent {\n  fireTime = 0.0;\n  value: string = '';\n}\n\n/**\n * @brief モーションデータ\n *\n * モーションデータ。\n */\nexport class CubismMotionData {\n  public constructor() {\n    this.duration = 0.0;\n    this.loop = false;\n    this.curveCount = 0;\n    this.eventCount = 0;\n    this.fps = 0.0;\n\n    this.curves = [];\n    this.segments = [];\n    this.points = [];\n    this.events = [];\n  }\n\n  duration: number; // モーションの長さ[秒]\n  loop: boolean; // ループするかどうか\n  curveCount: number; // カーブの個数\n  eventCount: number; // UserDataの個数\n  fps: number; // フレームレート\n  curves: CubismMotionCurve[]; // カーブのリスト\n  segments: CubismMotionSegment[]; // セグメントのリスト\n  points: CubismMotionPoint[]; // ポイントのリスト\n  events: CubismMotionEvent[]; // イベントのリスト\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from '../model/cubismmodel';\nimport { CubismModelSettingsJson } from '../settings/cubismmodelsettingsjson';\n\n/**\n * 自動まばたき機能\n *\n * 自動まばたき機能を提供する。\n */\nexport class CubismEyeBlink {\n  /**\n   * インスタンスを作成する\n   * @param modelSetting モデルの設定情報\n   * @return 作成されたインスタンス\n   * @note 引数がNULLの場合、パラメータIDが設定されていない空のインスタンスを作成する。\n   */\n  public static create(\n    modelSetting: CubismModelSettingsJson,\n  ): CubismEyeBlink {\n    return new CubismEyeBlink(modelSetting);\n  }\n\n  /**\n   * まばたきの間隔の設定\n   * @param blinkingInterval まばたきの間隔の時間[秒]\n   */\n  public setBlinkingInterval(blinkingInterval: number): void {\n    this._blinkingIntervalSeconds = blinkingInterval;\n  }\n\n  /**\n   * まばたきのモーションの詳細設定\n   * @param closing   まぶたを閉じる動作の所要時間[秒]\n   * @param closed    まぶたを閉じている動作の所要時間[秒]\n   * @param opening   まぶたを開く動作の所要時間[秒]\n   */\n  public setBlinkingSetting(\n    closing: number,\n    closed: number,\n    opening: number,\n  ): void {\n    this._closingSeconds = closing;\n    this._closedSeconds = closed;\n    this._openingSeconds = opening;\n  }\n\n  /**\n   * まばたきさせるパラメータIDのリストの設定\n   * @param parameterIds パラメータのIDのリスト\n   */\n  public setParameterIds(parameterIds: string[]): void {\n    this._parameterIds = parameterIds;\n  }\n\n  /**\n   * まばたきさせるパラメータIDのリストの取得\n   * @return パラメータIDのリスト\n   */\n  public getParameterIds(): string[] {\n    return this._parameterIds;\n  }\n\n  /**\n   * モデルのパラメータの更新\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */\n  public updateParameters(\n    model: CubismModel,\n    deltaTimeSeconds: number,\n  ): void {\n    this._userTimeSeconds += deltaTimeSeconds;\n    let parameterValue: number;\n    let t = 0.0;\n\n    switch (this._blinkingState) {\n      case EyeState.EyeState_Closing:\n        t =\n          (this._userTimeSeconds - this._stateStartTimeSeconds) /\n          this._closingSeconds;\n\n        if (t >= 1.0) {\n          t = 1.0;\n          this._blinkingState = EyeState.EyeState_Closed;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n\n        parameterValue = 1.0 - t;\n\n        break;\n      case EyeState.EyeState_Closed:\n        t =\n          (this._userTimeSeconds - this._stateStartTimeSeconds) /\n          this._closedSeconds;\n\n        if (t >= 1.0) {\n          this._blinkingState = EyeState.EyeState_Opening;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n\n        parameterValue = 0.0;\n\n        break;\n      case EyeState.EyeState_Opening:\n        t =\n          (this._userTimeSeconds - this._stateStartTimeSeconds) /\n          this._openingSeconds;\n\n        if (t >= 1.0) {\n          t = 1.0;\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        }\n\n        parameterValue = t;\n\n        break;\n      case EyeState.EyeState_Interval:\n        if (this._nextBlinkingTime < this._userTimeSeconds) {\n          this._blinkingState = EyeState.EyeState_Closing;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n\n        parameterValue = 1.0;\n\n        break;\n      case EyeState.EyeState_First:\n      default:\n        this._blinkingState = EyeState.EyeState_Interval;\n        this._nextBlinkingTime = this.determinNextBlinkingTiming();\n\n        parameterValue = 1.0;\n        break;\n    }\n\n    if (!CubismEyeBlink.CloseIfZero) {\n      parameterValue = -parameterValue;\n    }\n\n    for (let i = 0; i < this._parameterIds.length; ++i) {\n      model.setParameterValueById(this._parameterIds[i], parameterValue);\n    }\n  }\n\n  /**\n   * コンストラクタ\n   * @param modelSetting モデルの設定情報\n   */\n  public constructor(modelSetting: CubismModelSettingsJson) {\n    this._blinkingState = EyeState.EyeState_First;\n    this._nextBlinkingTime = 0.0;\n    this._stateStartTimeSeconds = 0.0;\n    this._blinkingIntervalSeconds = 4.0;\n    this._closingSeconds = 0.1;\n    this._closedSeconds = 0.05;\n    this._openingSeconds = 0.15;\n    this._userTimeSeconds = 0.0;\n    this._parameterIds = [];\n\n    if (modelSetting == null) {\n      return;\n    }\n\n    this._parameterIds = modelSetting.getEyeBlinkParameters()?.slice() ?? this._parameterIds;\n  }\n\n  /**\n   * 次の瞬きのタイミングの決定\n   *\n   * @return 次のまばたきを行う時刻[秒]\n   */\n  public determinNextBlinkingTiming(): number {\n    const r: number = Math.random();\n    return (\n      this._userTimeSeconds + r * (2.0 * this._blinkingIntervalSeconds - 1.0)\n    );\n  }\n\n  _blinkingState: number; // 現在の状態\n  _parameterIds: string[]; // 操作対象のパラメータのIDのリスト\n  _nextBlinkingTime: number; // 次のまばたきの時刻[秒]\n  _stateStartTimeSeconds: number; // 現在の状態が開始した時刻[秒]\n  _blinkingIntervalSeconds: number; // まばたきの間隔[秒]\n  _closingSeconds: number; // まぶたを閉じる動作の所要時間[秒]\n  _closedSeconds: number; // まぶたを閉じている動作の所要時間[秒]\n  _openingSeconds: number; // まぶたを開く動作の所要時間[秒]\n  _userTimeSeconds: number; // デルタ時間の積算値[秒]\n\n  /**\n   * IDで指定された目のパラメータが、0のときに閉じるなら true 、1の時に閉じるなら false 。\n   */\n  static readonly CloseIfZero: boolean = true;\n}\n\n/**\n * まばたきの状態\n *\n * まばたきの状態を表す列挙型\n */\nexport enum EyeState {\n  EyeState_First = 0, // 初期状態\n  EyeState_Interval, // まばたきしていない状態\n  EyeState_Closing, // まぶたが閉じていく途中の状態\n  EyeState_Closed, // まぶたが閉じている状態\n  EyeState_Opening // まぶたが開いていく途中の状態\n}\n","export namespace config {\n  export let supportMoreMaskDivisions = true;\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * motion3.jsonのコンテナ。\n */\nexport class CubismMotionJson {\n  /**\n   * コンストラクタ\n   * @param json motion3.jsonが読み込まれているバッファ\n   */\n  public constructor(json: CubismSpec.MotionJSON) {\n    this._json = json;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    (this as any)._json = undefined;\n  }\n\n  /**\n   * モーションの長さを取得する\n   * @return モーションの長さ[秒]\n   */\n  public getMotionDuration(): number {\n    return this._json.Meta.Duration;\n  }\n\n  /**\n   * モーションのループ情報の取得\n   * @return true ループする\n   * @return false ループしない\n   */\n  public isMotionLoop(): boolean {\n    return this._json.Meta.Loop || false;\n  }\n\n  /**\n   * モーションカーブの個数の取得\n   * @return モーションカーブの個数\n   */\n  public getMotionCurveCount(): number {\n    return this._json.Meta.CurveCount;\n  }\n\n  /**\n   * モーションのフレームレートの取得\n   * @return フレームレート[FPS]\n   */\n  public getMotionFps(): number {\n    return this._json.Meta.Fps;\n  }\n\n  /**\n   * モーションのセグメントの総合計の取得\n   * @return モーションのセグメントの取得\n   */\n  public getMotionTotalSegmentCount(): number {\n    return this._json.Meta.TotalSegmentCount;\n  }\n\n  /**\n   * モーションのカーブの制御店の総合計の取得\n   * @return モーションのカーブの制御点の総合計\n   */\n  public getMotionTotalPointCount(): number {\n    return this._json.Meta.TotalPointCount;\n  }\n\n  /**\n   * モーションのフェードイン時間の取得\n   * @return フェードイン時間[秒]\n   */\n  public getMotionFadeInTime(): number | undefined {\n    return this._json.Meta.FadeInTime;\n  }\n\n  /**\n   * モーションのフェードアウト時間の取得\n   * @return フェードアウト時間[秒]\n   */\n  public getMotionFadeOutTime(): number | undefined {\n    return this._json.Meta.FadeOutTime;\n  }\n\n  /**\n   * モーションのカーブの種類の取得\n   * @param curveIndex カーブのインデックス\n   * @return カーブの種類\n   */\n  public getMotionCurveTarget(curveIndex: number): string {\n    return this._json.Curves[curveIndex].Target;\n  }\n\n  /**\n   * モーションのカーブのIDの取得\n   * @param curveIndex カーブのインデックス\n   * @return カーブのID\n   */\n  public getMotionCurveId(curveIndex: number): string {\n    return this._json.Curves[curveIndex].Id;\n  }\n\n  /**\n   * モーションのカーブのフェードイン時間の取得\n   * @param curveIndex カーブのインデックス\n   * @return フェードイン時間[秒]\n   */\n  public getMotionCurveFadeInTime(curveIndex: number): number | undefined {\n    return this._json.Curves[curveIndex].FadeInTime;\n  }\n\n  /**\n   * モーションのカーブのフェードアウト時間の取得\n   * @param curveIndex カーブのインデックス\n   * @return フェードアウト時間[秒]\n   */\n  public getMotionCurveFadeOutTime(curveIndex: number): number | undefined {\n    return this._json.Curves[curveIndex].FadeOutTime;\n  }\n\n  /**\n   * モーションのカーブのセグメントの個数を取得する\n   * @param curveIndex カーブのインデックス\n   * @return モーションのカーブのセグメントの個数\n   */\n  public getMotionCurveSegmentCount(curveIndex: number): number {\n    return this._json.Curves[curveIndex].Segments.length;\n  }\n\n  /**\n   * モーションのカーブのセグメントの値の取得\n   * @param curveIndex カーブのインデックス\n   * @param segmentIndex セグメントのインデックス\n   * @return セグメントの値\n   */\n  public getMotionCurveSegment(\n    curveIndex: number,\n    segmentIndex: number,\n  ): number {\n    return this._json.Curves[curveIndex].Segments[segmentIndex];\n  }\n\n  /**\n   * イベントの個数の取得\n   * @return イベントの個数\n   */\n  public getEventCount(): number {\n    return this._json.Meta.UserDataCount || 0;\n  }\n\n  /**\n   *  イベントの総文字数の取得\n   * @return イベントの総文字数\n   */\n  public getTotalEventValueSize(): number {\n    return this._json.Meta.TotalUserDataSize!;\n  }\n\n  /**\n   * イベントの時間の取得\n   * @param userDataIndex イベントのインデックス\n   * @return イベントの時間[秒]\n   */\n  public getEventTime(userDataIndex: number): number {\n    return this._json.UserData![userDataIndex].Time!;\n  }\n\n  /**\n   * イベントの取得\n   * @param userDataIndex イベントのインデックス\n   * @return イベントの文字列\n   */\n  public getEventValue(userDataIndex: number): string {\n    return this._json.UserData![userDataIndex].Value!;\n  }\n\n  _json: CubismSpec.MotionJSON; // motion3.jsonのデータ\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismMath } from '../math/cubismmath';\nimport { CubismModel } from '../model/cubismmodel';\nimport { CSM_ASSERT, CubismLogDebug } from '../utils/cubismdebug';\nimport { ACubismMotion } from './acubismmotion';\nimport {\n  CubismMotionCurve,\n  CubismMotionCurveTarget,\n  CubismMotionData,\n  CubismMotionEvent,\n  CubismMotionPoint,\n  CubismMotionSegment,\n  CubismMotionSegmentType,\n} from './cubismmotioninternal';\nimport { CubismMotionJson } from './cubismmotionjson';\nimport { CubismMotionQueueEntry } from './cubismmotionqueueentry';\n\nconst EffectNameEyeBlink = 'EyeBlink';\nconst EffectNameLipSync = 'LipSync';\nconst TargetNameModel = 'Model';\nconst TargetNameParameter = 'Parameter';\nconst TargetNamePartOpacity = 'PartOpacity';\n\nfunction lerpPoints(\n  a: CubismMotionPoint,\n  b: CubismMotionPoint,\n  t: number,\n): CubismMotionPoint {\n  const result: CubismMotionPoint = new CubismMotionPoint();\n\n  result.time = a.time + (b.time - a.time) * t;\n  result.value = a.value + (b.value - a.value) * t;\n\n  return result;\n}\n\nfunction linearEvaluate(points: CubismMotionPoint[], time: number): number {\n  let t: number = (time - points[0].time) / (points[1].time - points[0].time);\n\n  if (t < 0.0) {\n    t = 0.0;\n  }\n\n  return points[0].value + (points[1].value - points[0].value) * t;\n}\n\nfunction bezierEvaluate(points: CubismMotionPoint[], time: number): number {\n  let t: number = (time - points[0].time) / (points[3].time - points[0].time);\n\n  if (t < 0.0) {\n    t = 0.0;\n  }\n\n  const p01: CubismMotionPoint = lerpPoints(points[0], points[1], t);\n  const p12: CubismMotionPoint = lerpPoints(points[1], points[2], t);\n  const p23: CubismMotionPoint = lerpPoints(points[2], points[3], t);\n\n  const p012: CubismMotionPoint = lerpPoints(p01, p12, t);\n  const p123: CubismMotionPoint = lerpPoints(p12, p23, t);\n\n  return lerpPoints(p012, p123, t).value;\n}\n\nfunction steppedEvaluate(points: CubismMotionPoint[], time: number): number {\n  return points[0].value;\n}\n\nfunction inverseSteppedEvaluate(\n  points: CubismMotionPoint[],\n  time: number,\n): number {\n  return points[1].value;\n}\n\nfunction evaluateCurve(\n  motionData: CubismMotionData,\n  index: number,\n  time: number,\n): number {\n  // Find segment to evaluate.\n  const curve: CubismMotionCurve = motionData.curves[index];\n\n  let target = -1;\n  const totalSegmentCount: number =\n    curve.baseSegmentIndex + curve.segmentCount;\n  let pointPosition = 0;\n  for (let i: number = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n    // Get first point of next segment.\n    pointPosition =\n      motionData.segments[i].basePointIndex +\n      (motionData.segments[i].segmentType ==\n      CubismMotionSegmentType.CubismMotionSegmentType_Bezier\n        ? 3\n        : 1);\n\n    // Break if time lies within current segment.\n    if (motionData.points[pointPosition].time > time) {\n      target = i;\n      break;\n    }\n  }\n\n  if (target == -1) {\n    return motionData.points[pointPosition].value;\n  }\n\n  const segment: CubismMotionSegment = motionData.segments[target];\n\n  return segment.evaluate(\n    motionData.points.slice(segment.basePointIndex),\n    time,\n  );\n}\n\n/**\n * モーションクラス\n *\n * モーションのクラス。\n */\nexport class CubismMotion extends ACubismMotion {\n  /**\n   * インスタンスを作成する\n   *\n   * @param json motion3.jsonが読み込まれているバッファ\n   * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\n   * @return 作成されたインスタンス\n   */\n  public static create(json: CubismSpec.MotionJSON, onFinishedMotionHandler?: (self: ACubismMotion) => void): CubismMotion {\n    const ret = new CubismMotion();\n\n    ret.parse(json);\n    ret._sourceFrameRate = ret._motionData.fps;\n    ret._loopDurationSeconds = ret._motionData.duration;\n    ret._onFinishedMotion = onFinishedMotionHandler;\n\n    // NOTE: Editorではループありのモーション書き出しは非対応\n    // ret->_loop = (ret->_motionData->Loop > 0);\n    return ret;\n  }\n\n  /**\n   * モデルのパラメータの更新の実行\n   * @param model             対象のモデル\n   * @param userTimeSeconds   現在の時刻[秒]\n   * @param fadeWeight        モーションの重み\n   * @param motionQueueEntry  CubismMotionQueueManagerで管理されているモーション\n   */\n  public doUpdateParameters(\n    model: CubismModel,\n    userTimeSeconds: number,\n    fadeWeight: number,\n    motionQueueEntry: CubismMotionQueueEntry,\n  ): void {\n    if (this._modelCurveIdEyeBlink == null) {\n      this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n    }\n\n    if (this._modelCurveIdLipSync == null) {\n      this._modelCurveIdLipSync = EffectNameLipSync;\n    }\n\n    let timeOffsetSeconds: number =\n      userTimeSeconds - motionQueueEntry.getStartTime();\n\n    if (timeOffsetSeconds < 0.0) {\n      timeOffsetSeconds = 0.0; // エラー回避\n    }\n\n    let lipSyncValue: number = Number.MAX_VALUE;\n    let eyeBlinkValue: number = Number.MAX_VALUE;\n\n    //まばたき、リップシンクのうちモーションの適用を検出するためのビット（maxFlagCount個まで\n    const MaxTargetSize = 64;\n    let lipSyncFlags = 0;\n    let eyeBlinkFlags = 0;\n\n    //瞬き、リップシンクのターゲット数が上限を超えている場合\n    if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\n        'too many eye blink targets : {0}',\n        this._eyeBlinkParameterIds.length,\n      );\n    }\n    if (this._lipSyncParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\n        'too many lip sync targets : {0}',\n        this._lipSyncParameterIds.length,\n      );\n    }\n\n    const tmpFadeIn: number =\n      this._fadeInSeconds <= 0.0\n        ? 1.0\n        : CubismMath.getEasingSine(\n        (userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n        this._fadeInSeconds,\n        );\n\n    const tmpFadeOut: number =\n      this._fadeOutSeconds <= 0.0 || motionQueueEntry.getEndTime() < 0.0\n        ? 1.0\n        : CubismMath.getEasingSine(\n        (motionQueueEntry.getEndTime() - userTimeSeconds) /\n        this._fadeOutSeconds,\n        );\n    let value: number;\n    let c: number, parameterIndex: number;\n\n    // 'Repeat' time as necessary.\n    let time: number = timeOffsetSeconds;\n\n    if (this._isLoop) {\n      while (time > this._motionData.duration) {\n        time -= this._motionData.duration;\n      }\n    }\n\n    const curves: CubismMotionCurve[] = this._motionData.curves;\n\n    // Evaluate model curves.\n    for (\n      c = 0;\n      c < this._motionData.curveCount &&\n      curves[c].type ==\n      CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n      ++c\n    ) {\n      // Evaluate curve and call handler.\n      value = evaluateCurve(this._motionData, c, time);\n\n      if (curves[c].id == this._modelCurveIdEyeBlink) {\n        eyeBlinkValue = value;\n      } else if (curves[c].id == this._modelCurveIdLipSync) {\n        lipSyncValue = value;\n      }\n    }\n\n    let parameterMotionCurveCount = 0;\n\n    for (\n      ;\n      c < this._motionData.curveCount &&\n      curves[c].type ==\n      CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n      ++c\n    ) {\n      parameterMotionCurveCount++;\n\n      // Find parameter index.\n      parameterIndex = model.getParameterIndex(curves[c].id);\n\n      // Skip curve evaluation if no value in sink.\n      if (parameterIndex == -1) {\n        continue;\n      }\n\n      const sourceValue: number = model.getParameterValueByIndex(\n        parameterIndex,\n      );\n\n      // Evaluate curve and apply value.\n      value = evaluateCurve(this._motionData, c, time);\n\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (\n          let i = 0;\n          i < this._eyeBlinkParameterIds.length && i < MaxTargetSize;\n          ++i\n        ) {\n          if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n            value *= eyeBlinkValue;\n            eyeBlinkFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (\n          let i = 0;\n          i < this._lipSyncParameterIds.length && i < MaxTargetSize;\n          ++i\n        ) {\n          if (this._lipSyncParameterIds[i] == curves[c].id) {\n            value += lipSyncValue;\n            lipSyncFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n\n      let v: number;\n\n      // パラメータごとのフェード\n      if (curves[c].fadeInTime < 0.0 && curves[c].fadeOutTime < 0.0) {\n        // モーションのフェードを適用\n        v = sourceValue + (value - sourceValue) * fadeWeight;\n      } else {\n        // パラメータに対してフェードインかフェードアウトが設定してある場合はそちらを適用\n        let fin: number;\n        let fout: number;\n\n        if (curves[c].fadeInTime < 0.0) {\n          fin = tmpFadeIn;\n        } else {\n          fin =\n            curves[c].fadeInTime == 0.0\n              ? 1.0\n              : CubismMath.getEasingSine(\n              (userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n              curves[c].fadeInTime,\n              );\n        }\n\n        if (curves[c].fadeOutTime < 0.0) {\n          fout = tmpFadeOut;\n        } else {\n          fout =\n            curves[c].fadeOutTime == 0.0 ||\n            motionQueueEntry.getEndTime() < 0.0\n              ? 1.0\n              : CubismMath.getEasingSine(\n              (motionQueueEntry.getEndTime() - userTimeSeconds) /\n              curves[c].fadeOutTime,\n              );\n        }\n\n        const paramWeight: number = this._weight * fin * fout;\n\n        // パラメータごとのフェードを適用\n        v = sourceValue + (value - sourceValue) * paramWeight;\n      }\n\n      model.setParameterValueByIndex(parameterIndex, v, 1.0);\n    }\n\n    {\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (\n          let i = 0;\n          i < this._eyeBlinkParameterIds.length && i < MaxTargetSize;\n          ++i\n        ) {\n          const sourceValue: number = model.getParameterValueById(\n            this._eyeBlinkParameterIds[i],\n          );\n\n          // モーションでの上書きがあった時にはまばたきは適用しない\n          if ((eyeBlinkFlags >> i) & 0x01) {\n            continue;\n          }\n\n          const v: number =\n            sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n\n          model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n        }\n      }\n\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (\n          let i = 0;\n          i < this._lipSyncParameterIds.length && i < MaxTargetSize;\n          ++i\n        ) {\n          const sourceValue: number = model.getParameterValueById(\n            this._lipSyncParameterIds[i],\n          );\n\n          // モーションでの上書きがあった時にはリップシンクは適用しない\n          if ((lipSyncFlags >> i) & 0x01) {\n            continue;\n          }\n\n          const v: number =\n            sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n\n          model.setParameterValueById(this._lipSyncParameterIds[i], v);\n        }\n      }\n    }\n\n    for (\n      ;\n      c < this._motionData.curveCount &&\n      curves[c].type ==\n      CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n      ++c\n    ) {\n      // Find parameter index.\n      parameterIndex = model.getParameterIndex(curves[c].id);\n\n      // Skip curve evaluation if no value in sink.\n      if (parameterIndex == -1) {\n        continue;\n      }\n\n      // Evaluate curve and apply value.\n      value = evaluateCurve(this._motionData, c, time);\n\n      model.setParameterValueByIndex(parameterIndex, value);\n    }\n\n    if (timeOffsetSeconds >= this._motionData.duration) {\n      if (this._isLoop) {\n        motionQueueEntry.setStartTime(userTimeSeconds); // 最初の状態へ\n        if (this._isLoopFadeIn) {\n          // ループ内でループ用フェードインが有効の時は、フェードイン設定し直し\n          motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        }\n      } else {\n        if (this._onFinishedMotion) {\n          this._onFinishedMotion(this);\n        }\n\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    this._lastWeight = fadeWeight;\n  }\n\n  /**\n   * ループ情報の設定\n   * @param loop ループ情報\n   */\n  public setIsLoop(loop: boolean): void {\n    this._isLoop = loop;\n  }\n\n  /**\n   * ループ情報の取得\n   * @return true ループする\n   * @return false ループしない\n   */\n  public isLoop(): boolean {\n    return this._isLoop;\n  }\n\n  /**\n   * ループ時のフェードイン情報の設定\n   * @param loopFadeIn  ループ時のフェードイン情報\n   */\n  public setIsLoopFadeIn(loopFadeIn: boolean): void {\n    this._isLoopFadeIn = loopFadeIn;\n  }\n\n  /**\n   * ループ時のフェードイン情報の取得\n   *\n   * @return  true    する\n   * @return  false   しない\n   */\n  public isLoopFadeIn(): boolean {\n    return this._isLoopFadeIn;\n  }\n\n  /**\n   * モーションの長さを取得する。\n   *\n   * @return  モーションの長さ[秒]\n   */\n  public getDuration(): number {\n    return this._isLoop ? -1.0 : this._loopDurationSeconds;\n  }\n\n  /**\n   * モーションのループ時の長さを取得する。\n   *\n   * @return  モーションのループ時の長さ[秒]\n   */\n  public getLoopDuration(): number {\n    return this._loopDurationSeconds;\n  }\n\n  /**\n   * パラメータに対するフェードインの時間を設定する。\n   *\n   * @param parameterId     パラメータID\n   * @param value           フェードインにかかる時間[秒]\n   */\n  public setParameterFadeInTime(\n    parameterId: string,\n    value: number,\n  ): void {\n    const curves: CubismMotionCurve[] = this._motionData.curves;\n\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeInTime = value;\n        return;\n      }\n    }\n  }\n\n  /**\n   * パラメータに対するフェードアウトの時間の設定\n   * @param parameterId     パラメータID\n   * @param value           フェードアウトにかかる時間[秒]\n   */\n  public setParameterFadeOutTime(\n    parameterId: string,\n    value: number,\n  ): void {\n    const curves: CubismMotionCurve[] = this._motionData.curves;\n\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeOutTime = value;\n        return;\n      }\n    }\n  }\n\n  /**\n   * パラメータに対するフェードインの時間の取得\n   * @param    parameterId     パラメータID\n   * @return   フェードインにかかる時間[秒]\n   */\n  public getParameterFadeInTime(parameterId: string): number {\n    const curves: CubismMotionCurve[] = this._motionData.curves;\n\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeInTime;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * パラメータに対するフェードアウトの時間を取得\n   *\n   * @param   parameterId     パラメータID\n   * @return   フェードアウトにかかる時間[秒]\n   */\n  public getParameterFadeOutTime(parameterId: string): number {\n    const curves: CubismMotionCurve[] = this._motionData.curves;\n\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeOutTime;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * 自動エフェクトがかかっているパラメータIDリストの設定\n   * @param eyeBlinkParameterIds    自動まばたきがかかっているパラメータIDのリスト\n   * @param lipSyncParameterIds     リップシンクがかかっているパラメータIDのリスト\n   */\n  public setEffectIds(\n    eyeBlinkParameterIds: string[],\n    lipSyncParameterIds: string[],\n  ): void {\n    this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n    this._lipSyncParameterIds = lipSyncParameterIds;\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    super();\n    this._sourceFrameRate = 30.0;\n    this._loopDurationSeconds = -1.0;\n    this._isLoop = false; // trueから false へデフォルトを変更\n    this._isLoopFadeIn = true; // ループ時にフェードインが有効かどうかのフラグ\n    this._lastWeight = 0.0;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    (this as Partial<this>)._motionData = undefined;\n  }\n\n  /**\n   * motion3.jsonをパースする。\n   *\n   * @param motionJson  motion3.jsonが読み込まれているバッファ\n   */\n  public parse(motionJson: CubismSpec.MotionJSON): void {\n    this._motionData = new CubismMotionData();\n\n    let json: CubismMotionJson = new CubismMotionJson(motionJson);\n\n    this._motionData.duration = json.getMotionDuration();\n    this._motionData.loop = json.isMotionLoop();\n    this._motionData.curveCount = json.getMotionCurveCount();\n    this._motionData.fps = json.getMotionFps();\n    this._motionData.eventCount = json.getEventCount();\n\n    const fadeInSeconds = json.getMotionFadeInTime();\n    const fadeOutSeconds = json.getMotionFadeOutTime();\n\n    if (fadeInSeconds !== undefined) {\n      this._fadeInSeconds = fadeInSeconds < 0.0 ? 1.0 : fadeInSeconds;\n    } else {\n      this._fadeInSeconds = 1.0;\n    }\n\n    if (fadeOutSeconds !== undefined) {\n      this._fadeOutSeconds = fadeOutSeconds < 0.0 ? 1.0 : fadeOutSeconds;\n    } else {\n      this._fadeOutSeconds = 1.0;\n    }\n\n    this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n    this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n    this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n    this._motionData.points = [];\n\n    let totalPointCount = 0;\n    let totalSegmentCount = 0;\n\n    // Curves\n    for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n      const curve = this._motionData.curves[curveCount];\n\n      switch (json.getMotionCurveTarget(curveCount)) {\n        case TargetNameModel:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n          break;\n\n        case TargetNameParameter:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n          break;\n\n        case TargetNamePartOpacity:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n          break;\n      }\n\n      curve.id = json.getMotionCurveId(curveCount);\n\n      curve.baseSegmentIndex = totalSegmentCount;\n\n      const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n      const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n\n      curve.fadeInTime = fadeInTime !== undefined ? fadeInTime : -1.0;\n      curve.fadeOutTime = fadeOutTime !== undefined ? fadeOutTime : -1.0;\n\n      // Segments\n      for (\n        let segmentPosition = 0;\n        segmentPosition < json.getMotionCurveSegmentCount(curveCount);\n      ) {\n        if (segmentPosition == 0) {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n\n          this._motionData.points[totalPointCount] = new CubismMotionPoint(\n            json.getMotionCurveSegment(curveCount, segmentPosition),\n            json.getMotionCurveSegment(curveCount, segmentPosition + 1),\n          );\n\n          totalPointCount += 1;\n          segmentPosition += 2;\n        } else {\n          this._motionData.segments[totalSegmentCount].basePointIndex =\n            totalPointCount - 1;\n        }\n\n        const segment: number = json.getMotionCurveSegment(\n          curveCount,\n          segmentPosition,\n        );\n        switch (segment) {\n          case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n            this._motionData.segments[totalSegmentCount].segmentType =\n              CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n            this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(\n              json.getMotionCurveSegment(curveCount, segmentPosition + 1),\n              json.getMotionCurveSegment(curveCount, segmentPosition + 2),\n            );\n\n            totalPointCount += 1;\n            segmentPosition += 3;\n\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n            this._motionData.segments[totalSegmentCount].segmentType =\n              CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n            this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(\n              json.getMotionCurveSegment(curveCount, segmentPosition + 1),\n              json.getMotionCurveSegment(curveCount, segmentPosition + 2),\n            );\n\n            this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(\n              json.getMotionCurveSegment(curveCount, segmentPosition + 3),\n              json.getMotionCurveSegment(curveCount, segmentPosition + 4),\n            );\n\n            this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(\n              json.getMotionCurveSegment(curveCount, segmentPosition + 5),\n              json.getMotionCurveSegment(curveCount, segmentPosition + 6),\n            );\n\n            totalPointCount += 3;\n            segmentPosition += 7;\n\n            break;\n          }\n\n          case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n            this._motionData.segments[totalSegmentCount].segmentType =\n              CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n            this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(\n              json.getMotionCurveSegment(curveCount, segmentPosition + 1),\n              json.getMotionCurveSegment(curveCount, segmentPosition + 2),\n            );\n\n            totalPointCount += 1;\n            segmentPosition += 3;\n\n            break;\n          }\n\n          case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n            this._motionData.segments[totalSegmentCount].segmentType =\n              CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n            this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(\n              json.getMotionCurveSegment(curveCount, segmentPosition + 1),\n              json.getMotionCurveSegment(curveCount, segmentPosition + 2),\n            );\n\n            totalPointCount += 1;\n            segmentPosition += 3;\n\n            break;\n          }\n          default: {\n            CSM_ASSERT(0);\n            break;\n          }\n        }\n\n        ++curve.segmentCount;\n        ++totalSegmentCount;\n      }\n\n      this._motionData.curves.push(curve);\n    }\n\n    for (\n      let userdatacount = 0;\n      userdatacount < json.getEventCount();\n      ++userdatacount\n    ) {\n      this._motionData.events[userdatacount].fireTime = json.getEventTime(\n        userdatacount,\n      );\n      this._motionData.events[userdatacount].value = json.getEventValue(\n        userdatacount,\n      );\n    }\n\n    json.release();\n  }\n\n  /**\n   * モデルのパラメータ更新\n   *\n   * イベント発火のチェック。\n   * 入力する時間は呼ばれるモーションタイミングを０とした秒数で行う。\n   *\n   * @param beforeCheckTimeSeconds   前回のイベントチェック時間[秒]\n   * @param motionTimeSeconds        今回の再生時間[秒]\n   */\n  public getFiredEvent(\n    beforeCheckTimeSeconds: number,\n    motionTimeSeconds: number,\n  ): string[] {\n    this._firedEventValues.length = 0;\n\n    // イベントの発火チェック\n    for (let u = 0; u < this._motionData.eventCount; ++u) {\n      if (\n        this._motionData.events[u].fireTime > beforeCheckTimeSeconds &&\n        this._motionData.events[u].fireTime <= motionTimeSeconds\n      ) {\n        this._firedEventValues.push(this._motionData.events[u].value);\n      }\n    }\n\n    return this._firedEventValues;\n  }\n\n  public _sourceFrameRate: number; // ロードしたファイルのFPS。記述が無ければデフォルト値15fpsとなる\n  public _loopDurationSeconds: number; // mtnファイルで定義される一連のモーションの長さ\n  public _isLoop: boolean; // ループするか?\n  public _isLoopFadeIn: boolean; // ループ時にフェードインが有効かどうかのフラグ。初期値では有効。\n  public _lastWeight: number; // 最後に設定された重み\n\n  public _motionData!: CubismMotionData; // 実際のモーションデータ本体\n\n  public _eyeBlinkParameterIds: string[] = []; // 自動まばたきを適用するパラメータIDハンドルのリスト。  モデル（モデルセッティング）とパラメータを対応付ける。\n  public _lipSyncParameterIds: string[] = []; // リップシンクを適用するパラメータIDハンドルのリスト。  モデル（モデルセッティング）とパラメータを対応付ける。\n\n  public _modelCurveIdEyeBlink?: string; // モデルが持つ自動まばたき用パラメータIDのハンドル。  モデルとモーションを対応付ける。\n  public _modelCurveIdLipSync?: string; // モデルが持つリップシンク用パラメータIDのハンドル。  モデルとモーションを対応付ける。\n}\n","import { config } from '@/config';\nimport { MotionManager, MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport { Cubism4ExpressionManager } from '@/cubism4/Cubism4ExpressionManager';\nimport { Cubism4ModelSettings } from '@/cubism4/Cubism4ModelSettings';\nimport { CubismModel } from '@cubism/model/cubismmodel';\nimport { ACubismMotion } from '@cubism/motion/acubismmotion';\nimport { CubismMotion } from '@cubism/motion/cubismmotion';\nimport { CubismMotionJson } from '@cubism/motion/cubismmotionjson';\nimport { CubismMotionQueueManager } from '@cubism/motion/cubismmotionqueuemanager';\n\nexport class Cubism4MotionManager extends MotionManager<CubismMotion, CubismSpec.Motion> {\n    readonly definitions: Partial<Record<string, CubismSpec.Motion[]>>;\n\n    readonly groups = { idle: 'Idle' } as const;\n\n    readonly motionDataType = 'json';\n\n    readonly queueManager = new CubismMotionQueueManager();\n\n    readonly settings!: Cubism4ModelSettings;\n\n    expressionManager?: Cubism4ExpressionManager;\n\n    eyeBlinkIds: string[];\n    lipSyncIds: string[];\n\n    constructor(settings: Cubism4ModelSettings, options?: MotionManagerOptions) {\n        super(settings, options);\n\n        this.definitions = settings.motions ?? {};\n        this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n        this.lipSyncIds = settings.getLipSyncParameters() || [];\n\n        this.init(options);\n    }\n\n    protected init(options?: MotionManagerOptions) {\n        super.init(options);\n\n        if (this.settings.expressions) {\n            this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n        }\n\n        this.queueManager.setEventCallback((caller, eventValue, customData) => {\n            this.emit('motion:' + eventValue);\n        });\n    }\n\n    isFinished(): boolean {\n        return this.queueManager.isFinished();\n    }\n\n    protected _startMotion(motion: CubismMotion, onFinish?: (motion: CubismMotion) => void): number {\n        motion.setFinishedMotionHandler(onFinish as (motion: ACubismMotion) => void);\n\n        this.queueManager.stopAllMotions();\n\n        return this.queueManager.startMotion(motion, false, performance.now());\n    }\n\n    protected _stopAllMotions(): void {\n        this.queueManager.stopAllMotions();\n    }\n\n    createMotion(data: object, group: string, definition: CubismSpec.Motion): CubismMotion {\n        const motion = CubismMotion.create(data as unknown as CubismSpec.MotionJSON);\n        const json = new CubismMotionJson(data as unknown as CubismSpec.MotionJSON);\n\n        const defaultFadingDuration = (\n            group === this.groups.idle\n                ? config.idleMotionFadingDuration\n                : config.motionFadingDuration\n        ) / 1000;\n\n        // fading duration priorities: model.json > motion.json > config (default)\n\n        // overwrite the fading duration only when it's not defined in the motion JSON\n        if (json.getMotionFadeInTime() === undefined) {\n            motion.setFadeInTime(definition.FadeInTime! > 0 ? definition.FadeInTime! : defaultFadingDuration);\n        }\n\n        if (json.getMotionFadeOutTime() === undefined) {\n            motion.setFadeOutTime(definition.FadeOutTime! > 0 ? definition.FadeOutTime! : defaultFadingDuration);\n        }\n\n        motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n\n        return motion;\n    }\n\n    getMotionFile(definition: CubismSpec.Motion): string {\n        return definition.File;\n    }\n\n    protected getMotionName(definition: CubismSpec.Motion): string {\n        return definition.File;\n    }\n\n    protected getSoundFile(definition: CubismSpec.Motion): string | undefined {\n        return definition.Sound;\n    }\n\n    protected updateParameters(model: CubismModel, now: DOMHighResTimeStamp): boolean {\n        return this.queueManager.doUpdateMotion(model, now);\n    }\n\n    destroy() {\n        super.destroy();\n\n        this.queueManager.release();\n        (this as Partial<Mutable<this>>).queueManager = undefined;\n    }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from '../model/cubismmodel';\n\n/**\n * 呼吸機能\n *\n * 呼吸機能を提供する。\n */\nexport class CubismBreath {\n  /**\n   * インスタンスの作成\n   */\n  public static create(): CubismBreath {\n    return new CubismBreath();\n  }\n\n  /**\n   * 呼吸のパラメータの紐づけ\n   * @param breathParameters 呼吸を紐づけたいパラメータのリスト\n   */\n  public setParameters(\n    breathParameters: BreathParameterData[],\n  ): void {\n    this._breathParameters = breathParameters;\n  }\n\n  /**\n   * 呼吸に紐づいているパラメータの取得\n   * @return 呼吸に紐づいているパラメータのリスト\n   */\n  public getParameters(): BreathParameterData[] {\n    return this._breathParameters;\n  }\n\n  /**\n   * モデルのパラメータの更新\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */\n  public updateParameters(\n    model: CubismModel,\n    deltaTimeSeconds: number,\n  ): void {\n    this._currentTime += deltaTimeSeconds;\n\n    const t: number = this._currentTime * 2.0 * 3.14159;\n\n    for (let i = 0; i < this._breathParameters.length; ++i) {\n      const data: BreathParameterData = this._breathParameters[i];\n\n      model.addParameterValueById(\n        data.parameterId,\n        data.offset + data.peak * Math.sin(t / data.cycle),\n        data.weight,\n      );\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._currentTime = 0.0;\n  }\n\n  _breathParameters: BreathParameterData[] = []; // 呼吸にひもづいているパラメータのリスト\n  _currentTime: number; // 積算時間[秒]\n}\n\n/**\n * 呼吸のパラメータ情報\n */\nexport class BreathParameterData {\n  /**\n   * コンストラクタ\n   * @param parameterId   呼吸をひもづけるパラメータID\n   * @param offset        呼吸を正弦波としたときの、波のオフセット\n   * @param peak          呼吸を正弦波としたときの、波の高さ\n   * @param cycle         呼吸を正弦波としたときの、波の周期\n   * @param weight        パラメータへの重み\n   */\n  constructor(\n    parameterId?: string,\n    offset?: number,\n    peak?: number,\n    cycle?: number,\n    weight?: number,\n  ) {\n    this.parameterId = parameterId == undefined ? undefined : parameterId;\n    this.offset = offset == undefined ? 0.0 : offset;\n    this.peak = peak == undefined ? 0.0 : peak;\n    this.cycle = cycle == undefined ? 0.0 : cycle;\n    this.weight = weight == undefined ? 0.0 : weight;\n  }\n\n  parameterId?: string; // 呼吸をひもづけるパラメータID\\\n  offset: number; // 呼吸を正弦波としたときの、波のオフセット\n  peak: number; // 呼吸を正弦波としたときの、波の高さ\n  cycle: number; // 呼吸を正弦波としたときの、波の周期\n  weight: number; // パラメータへの重み\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * 矩形形状（座標・長さはfloat値）を定義するクラス\n */\nexport class csmRect {\n  /**\n   * コンストラクタ\n   * @param x 左端X座標\n   * @param y 上端Y座標\n   * @param w 幅\n   * @param h 高さ\n   */\n  public constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n\n  /**\n   * 矩形中央のX座標を取得する\n   */\n  public getCenterX(): number {\n    return this.x + 0.5 * this.width;\n  }\n\n  /**\n   * 矩形中央のY座標を取得する\n   */\n  public getCenterY(): number {\n    return this.y + 0.5 * this.height;\n  }\n\n  /**\n   * 右側のX座標を取得する\n   */\n  public getRight(): number {\n    return this.x + this.width;\n  }\n\n  /**\n   * 下端のY座標を取得する\n   */\n  public getBottom(): number {\n    return this.y + this.height;\n  }\n\n  /**\n   * 矩形に値をセットする\n   * @param r 矩形のインスタンス\n   */\n  public setRect(r: csmRect): void {\n    this.x = r.x;\n    this.y = r.y;\n    this.width = r.width;\n    this.height = r.height;\n  }\n\n  /**\n   * 矩形中央を軸にして縦横を拡縮する\n   * @param w 幅方向に拡縮する量\n   * @param h 高さ方向に拡縮する量\n   */\n  public expand(w: number, h: number) {\n    this.x -= w;\n    this.y -= h;\n    this.width += w * 2.0;\n    this.height += h * 2.0;\n  }\n\n  public x: number; // 左端X座標\n  public y: number; // 上端Y座標\n  public width: number; // 幅\n  public height: number; // 高さ\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Constant } from '../live2dcubismframework';\nimport { CubismMatrix44 } from '../math/cubismmatrix44';\nimport { CubismModel } from '../model/cubismmodel';\nimport { csmRect } from '../type/csmrectf';\nimport { CubismLogError } from '../utils/cubismdebug';\nimport { CubismBlendMode, CubismRenderer, CubismTextureColor } from './cubismrenderer';\nimport { config } from '../config';\n\nconst ColorChannelCount = 4; // 実験時に1チャンネルの場合は1、RGBだけの場合は3、アルファも含める場合は4\n\nconst shaderCount = 10; // シェーダーの数 = マスク生成用 + (通常用 + 加算 + 乗算) * (マスク無の乗算済アルファ対応版 + マスク有の乗算済アルファ対応版 + マスク有反転の乗算済アルファ対応版)\nlet s_instance: CubismShader_WebGL | undefined;\nlet s_viewport: number[];\nlet s_fbo: WebGLFramebuffer;\n\n/**\n * クリッピングマスクの処理を実行するクラス\n */\nexport class CubismClippingManager_WebGL {\n  /**\n   * カラーチャンネル（RGBA）のフラグを取得する\n   * @param channelNo カラーチャンネル（RGBA）の番号（0:R, 1:G, 2:B, 3:A）\n   */\n  public getChannelFlagAsColor(channelNo: number): CubismTextureColor {\n    return this._channelColors[channelNo];\n  }\n\n  /**\n   * テンポラリのレンダーテクスチャのアドレスを取得する\n   * FrameBufferObjectが存在しない場合、新しく生成する\n   *\n   * @return レンダーテクスチャのアドレス\n   */\n  public getMaskRenderTexture(): WebGLFramebuffer | null {\n    let ret: WebGLFramebuffer | null = 0;\n\n    // テンポラリのRenderTextureを取得する\n    if (this._maskTexture && this._maskTexture.texture != 0) {\n      // 前回使ったものを返す\n      this._maskTexture.frameNo = this._currentFrameNo;\n      ret = this._maskTexture.texture;\n    }\n\n    if (ret == 0) {\n      // FrameBufferObjectが存在しない場合、新しく生成する\n\n      // クリッピングバッファサイズを取得\n      const size: number = this._clippingMaskBufferSize;\n\n      this._colorBuffer = this.gl.createTexture();\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n      this.gl.texImage2D(\n        this.gl.TEXTURE_2D,\n        0,\n        this.gl.RGBA,\n        size,\n        size,\n        0,\n        this.gl.RGBA,\n        this.gl.UNSIGNED_BYTE,\n        null,\n      );\n      this.gl.texParameteri(\n        this.gl.TEXTURE_2D,\n        this.gl.TEXTURE_WRAP_S,\n        this.gl.CLAMP_TO_EDGE,\n      );\n      this.gl.texParameteri(\n        this.gl.TEXTURE_2D,\n        this.gl.TEXTURE_WRAP_T,\n        this.gl.CLAMP_TO_EDGE,\n      );\n      this.gl.texParameteri(\n        this.gl.TEXTURE_2D,\n        this.gl.TEXTURE_MIN_FILTER,\n        this.gl.LINEAR,\n      );\n      this.gl.texParameteri(\n        this.gl.TEXTURE_2D,\n        this.gl.TEXTURE_MAG_FILTER,\n        this.gl.LINEAR,\n      );\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n\n      ret = this.gl.createFramebuffer();\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n      this.gl.framebufferTexture2D(\n        this.gl.FRAMEBUFFER,\n        this.gl.COLOR_ATTACHMENT0,\n        this.gl.TEXTURE_2D,\n        this._colorBuffer,\n        0,\n      );\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n\n      this._maskTexture = new CubismRenderTextureResource(\n        this._currentFrameNo,\n        ret,\n      );\n    }\n\n    return ret;\n  }\n\n  /**\n   * WebGLレンダリングコンテキストを設定する\n   * @param gl WebGLレンダリングコンテキスト\n   */\n  public setGL(gl: WebGLRenderingContext): void {\n    this.gl = gl;\n  }\n\n  /**\n   * マスクされる描画オブジェクト群全体を囲む矩形（モデル座標系）を計算する\n   * @param model モデルのインスタンス\n   * @param clippingContext クリッピングマスクのコンテキスト\n   */\n  public calcClippedDrawTotalBounds(\n    model: CubismModel,\n    clippingContext: CubismClippingContext,\n  ): void {\n    // 被クリッピングマスク（マスクされる描画オブジェクト）の全体の矩形\n    let clippedDrawTotalMinX: number = Number.MAX_VALUE;\n    let clippedDrawTotalMinY: number = Number.MAX_VALUE;\n    let clippedDrawTotalMaxX: number = Number.MIN_VALUE;\n    let clippedDrawTotalMaxY: number = Number.MIN_VALUE;\n\n    // このマスクが実際に必要か判定する\n    // このクリッピングを利用する「描画オブジェクト」がひとつでも使用可能であればマスクを生成する必要がある\n    const clippedDrawCount: number =\n      clippingContext._clippedDrawableIndexList.length;\n\n    for (\n      let clippedDrawableIndex = 0;\n      clippedDrawableIndex < clippedDrawCount;\n      clippedDrawableIndex++\n    ) {\n      // マスクを使用する描画オブジェクトの描画される矩形を求める\n      const drawableIndex: number =\n        clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n\n      const drawableVertexCount: number = model.getDrawableVertexCount(\n        drawableIndex,\n      );\n      const drawableVertexes: Float32Array = model.getDrawableVertices(\n        drawableIndex,\n      );\n\n      let minX: number = Number.MAX_VALUE;\n      let minY: number = Number.MAX_VALUE;\n      let maxX: number = Number.MIN_VALUE;\n      let maxY: number = Number.MIN_VALUE;\n\n      const loop: number = drawableVertexCount * Constant.vertexStep;\n      for (\n        let pi: number = Constant.vertexOffset;\n        pi < loop;\n        pi += Constant.vertexStep\n      ) {\n        const x: number = drawableVertexes[pi];\n        const y: number = drawableVertexes[pi + 1];\n\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n      }\n\n      // 有効な点が一つも取れなかったのでスキップ\n      if (minX == Number.MAX_VALUE) {\n        continue;\n      }\n\n      // 全体の矩形に反映\n      if (minX < clippedDrawTotalMinX) {\n        clippedDrawTotalMinX = minX;\n      }\n      if (minY < clippedDrawTotalMinY) {\n        clippedDrawTotalMinY = minY;\n      }\n      if (maxX > clippedDrawTotalMaxX) {\n        clippedDrawTotalMaxX = maxX;\n      }\n      if (maxY > clippedDrawTotalMaxY) {\n        clippedDrawTotalMaxY = maxY;\n      }\n\n      if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n        clippingContext._allClippedDrawRect.x = 0.0;\n        clippingContext._allClippedDrawRect.y = 0.0;\n        clippingContext._allClippedDrawRect.width = 0.0;\n        clippingContext._allClippedDrawRect.height = 0.0;\n        clippingContext._isUsing = false;\n      } else {\n        clippingContext._isUsing = true;\n        const w: number = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n        const h: number = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n        clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.width = w;\n        clippingContext._allClippedDrawRect.height = h;\n      }\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._maskRenderTexture = null;\n    this._colorBuffer = null;\n    this._currentFrameNo = 0;\n    this._clippingMaskBufferSize = 256;\n    this._clippingContextListForMask = [];\n    this._clippingContextListForDraw = [];\n    this._channelColors = [];\n    this._tmpBoundsOnModel = new csmRect();\n    this._tmpMatrix = new CubismMatrix44();\n    this._tmpMatrixForMask = new CubismMatrix44();\n    this._tmpMatrixForDraw = new CubismMatrix44();\n\n    let tmp: CubismTextureColor = new CubismTextureColor();\n    tmp.R = 1.0;\n    tmp.G = 0.0;\n    tmp.B = 0.0;\n    tmp.A = 0.0;\n    this._channelColors.push(tmp);\n\n    tmp = new CubismTextureColor();\n    tmp.R = 0.0;\n    tmp.G = 1.0;\n    tmp.B = 0.0;\n    tmp.A = 0.0;\n    this._channelColors.push(tmp);\n\n    tmp = new CubismTextureColor();\n    tmp.R = 0.0;\n    tmp.G = 0.0;\n    tmp.B = 1.0;\n    tmp.A = 0.0;\n    this._channelColors.push(tmp);\n\n    tmp = new CubismTextureColor();\n    tmp.R = 0.0;\n    tmp.G = 0.0;\n    tmp.B = 0.0;\n    tmp.A = 1.0;\n    this._channelColors.push(tmp);\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    const self = this as Partial<this>;\n\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      if (this._clippingContextListForMask[i]) {\n        this._clippingContextListForMask[i]?.release();\n      }\n    }\n    self._clippingContextListForMask = undefined;\n\n    // _clippingContextListForDrawは_clippingContextListForMaskにあるインスタンスを指している。上記の処理により要素ごとのDELETEは不要。\n    self._clippingContextListForDraw = undefined;\n\n    if (this._maskTexture) {\n      this.gl?.deleteFramebuffer(this._maskTexture.texture);\n      self._maskTexture = undefined;\n    }\n\n    self._channelColors = undefined;\n\n    // テクスチャ解放\n    this.gl?.deleteTexture(this._colorBuffer);\n    this._colorBuffer = null;\n  }\n\n  /**\n   * マネージャの初期化処理\n   * クリッピングマスクを使う描画オブジェクトの登録を行う\n   * @param model モデルのインスタンス\n   * @param drawableCount 描画オブジェクトの数\n   * @param drawableMasks 描画オブジェクトをマスクする描画オブジェクトのインデックスのリスト\n   * @param drawableCounts 描画オブジェクトをマスクする描画オブジェクトの数\n   */\n  public initialize(\n    model: CubismModel,\n    drawableCount: number,\n    drawableMasks: Int32Array[],\n    drawableMaskCounts: Int32Array,\n  ): void {\n    // クリッピングマスクを使う描画オブジェクトをすべて登録する\n    // クリッピングマスクは、通常数個程度に限定して使うものとする\n    for (let i = 0; i < drawableCount; i++) {\n      if (drawableMaskCounts[i] <= 0) {\n        // クリッピングマスクが使用されていないアートメッシュ（多くの場合使用しない）\n        this._clippingContextListForDraw.push(null);\n        continue;\n      }\n\n      // 既にあるClipContextと同じかチェックする\n      let clippingContext = this.findSameClip(\n        drawableMasks[i],\n        drawableMaskCounts[i],\n      );\n      if (clippingContext == null) {\n        // 同一のマスクが存在していない場合は生成する\n        clippingContext = new CubismClippingContext(\n          this,\n          drawableMasks[i],\n          drawableMaskCounts[i],\n        );\n        this._clippingContextListForMask.push(clippingContext);\n      }\n\n      clippingContext.addClippedDrawable(i);\n\n      this._clippingContextListForDraw.push(clippingContext);\n    }\n  }\n\n  /**\n   * クリッピングコンテキストを作成する。モデル描画時に実行する。\n   * @param model モデルのインスタンス\n   * @param renderer レンダラのインスタンス\n   */\n  public setupClippingContext(\n    model: CubismModel,\n    renderer: CubismRenderer_WebGL,\n  ): void {\n    this._currentFrameNo++;\n\n    // 全てのクリッピングを用意する\n    // 同じクリップ（複数の場合はまとめて一つのクリップ）を使う場合は1度だけ設定する\n    let usingClipCount = 0;\n    for (\n      let clipIndex = 0;\n      clipIndex < this._clippingContextListForMask.length;\n      clipIndex++\n    ) {\n      // 1つのクリッピングマスクに関して\n      const cc = this._clippingContextListForMask[clipIndex];\n\n      // このクリップを利用する描画オブジェクト群全体を囲む矩形を計算\n      this.calcClippedDrawTotalBounds(model, cc);\n\n      if (cc._isUsing) {\n        usingClipCount++; // 使用中としてカウント\n      }\n    }\n\n    // マスク作成処理\n    if (usingClipCount > 0) {\n      // 生成したFrameBufferと同じサイズでビューポートを設定\n      this.gl.viewport(\n        0,\n        0,\n        this._clippingMaskBufferSize,\n        this._clippingMaskBufferSize,\n      );\n\n      // マスクをactiveにする\n      this._maskRenderTexture = this.getMaskRenderTexture();\n\n      // モデル描画時にDrawMeshNowに渡される変換(モデルtoワールド座標変換)\n      const modelToWorldF: CubismMatrix44 = renderer.getMvpMatrix();\n\n      renderer.preDraw(); // バッファをクリアする\n\n      // 各マスクのレイアウトを決定していく\n      this.setupLayoutBounds(usingClipCount);\n\n      // ---------- マスク描画処理 ----------\n      // マスク用RenderTextureをactiveにセット\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n\n      // マスクをクリアする\n      // (仮仕様) 1が無効（描かれない）領域、0が有効（描かれる）領域。（シェーダーCd*Csで0に近い値をかけてマスクを作る。1をかけると何も起こらない）\n      this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n      // 実際にマスクを生成する\n      // 全てのマスクをどのようにレイアウトして描くかを決定し、ClipContext, ClippedDrawContextに記憶する\n      for (\n        let clipIndex = 0;\n        clipIndex < this._clippingContextListForMask.length;\n        clipIndex++\n      ) {\n        // --- 実際に1つのマスクを描く ---\n        const clipContext: CubismClippingContext = this._clippingContextListForMask[clipIndex];\n        const allClipedDrawRect: csmRect = clipContext._allClippedDrawRect; // このマスクを使う、すべての描画オブジェクトの論理座標上の囲み矩形\n        const layoutBoundsOnTex01: csmRect = clipContext._layoutBounds; // この中にマスクを収める\n\n        // モデル座標上の矩形を、適宜マージンを付けて使う\n        const MARGIN = 0.05;\n        this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n        this._tmpBoundsOnModel.expand(\n          allClipedDrawRect.width * MARGIN,\n          allClipedDrawRect.height * MARGIN,\n        );\n        //########## 本来は割り当てられた領域の全体を使わず必要最低限のサイズがよい\n\n        // シェーダ用の計算式を求める。回転を考慮しない場合は以下のとおり\n        // movePeriod' = movePeriod * scaleX + offX\t\t  [[ movePeriod' = (movePeriod - tmpBoundsOnModel.movePeriod)*scale + layoutBoundsOnTex01.movePeriod ]]\n        const scaleX: number = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n        const scaleY: number = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n\n        // マスク生成時に使う行列を求める\n        {\n          // シェーダに渡す行列を求める <<<<<<<<<<<<<<<<<<<<<<<< 要最適化（逆順に計算すればシンプルにできる）\n          this._tmpMatrix.loadIdentity();\n          {\n            // layout0..1 を -1..1に変換\n            this._tmpMatrix.translateRelative(-1.0, -1.0);\n            this._tmpMatrix.scaleRelative(2.0, 2.0);\n          }\n          {\n            // view to layout0..1\n            this._tmpMatrix.translateRelative(\n              layoutBoundsOnTex01.x,\n              layoutBoundsOnTex01.y,\n            );\n            this._tmpMatrix.scaleRelative(scaleX, scaleY); // new = [translate][scale]\n            this._tmpMatrix.translateRelative(\n              -this._tmpBoundsOnModel.x,\n              -this._tmpBoundsOnModel.y,\n            );\n            // new = [translate][scale][translate]\n          }\n          // tmpMatrixForMaskが計算結果\n          this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        }\n\n        //--------- draw時の mask 参照用行列を計算\n        {\n          // シェーダに渡す行列を求める <<<<<<<<<<<<<<<<<<<<<<<< 要最適化（逆順に計算すればシンプルにできる）\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(\n              layoutBoundsOnTex01.x,\n              layoutBoundsOnTex01.y,\n            );\n            this._tmpMatrix.scaleRelative(scaleX, scaleY); // new = [translate][scale]\n            this._tmpMatrix.translateRelative(\n              -this._tmpBoundsOnModel.x,\n              -this._tmpBoundsOnModel.y,\n            );\n            // new = [translate][scale][translate]\n          }\n          this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n        }\n        clipContext._matrixForMask.setMatrix(\n          this._tmpMatrixForMask.getArray(),\n        );\n        clipContext._matrixForDraw.setMatrix(\n          this._tmpMatrixForDraw.getArray(),\n        );\n\n        const clipDrawCount: number = clipContext._clippingIdCount;\n        for (let i = 0; i < clipDrawCount; i++) {\n          const clipDrawIndex: number = clipContext._clippingIdList[i];\n\n          // 頂点情報が更新されておらず、信頼性がない場合は描画をパスする\n          if (\n            !model.getDrawableDynamicFlagVertexPositionsDidChange(\n              clipDrawIndex,\n            )\n          ) {\n            continue;\n          }\n\n          renderer.setIsCulling(\n            model.getDrawableCulling(clipDrawIndex) != false,\n          );\n\n          // 今回専用の変換を適用して描く\n          // チャンネルも切り替える必要がある(A,R,G,B)\n          renderer.setClippingContextBufferForMask(clipContext);\n          renderer.drawMesh(\n            model.getDrawableTextureIndices(clipDrawIndex),\n            model.getDrawableVertexIndexCount(clipDrawIndex),\n            model.getDrawableVertexCount(clipDrawIndex),\n            model.getDrawableVertexIndices(clipDrawIndex),\n            model.getDrawableVertices(clipDrawIndex),\n            model.getDrawableVertexUvs(clipDrawIndex),\n            model.getDrawableOpacity(clipDrawIndex),\n            CubismBlendMode.CubismBlendMode_Normal, // クリッピングは通常描画を強制\n            false, // マスク生成時はクリッピングの反転使用は全く関係がない\n          );\n        }\n      }\n\n      // --- 後処理 ---\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo); // 描画対象を戻す\n      renderer.setClippingContextBufferForMask(null);\n\n      this.gl.viewport(\n        s_viewport[0],\n        s_viewport[1],\n        s_viewport[2],\n        s_viewport[3],\n      );\n    }\n  }\n\n  /**\n   * 既にマスクを作っているかを確認\n   * 作っている様であれば該当するクリッピングマスクのインスタンスを返す\n   * 作っていなければNULLを返す\n   * @param drawableMasks 描画オブジェクトをマスクする描画オブジェクトのリスト\n   * @param drawableMaskCounts 描画オブジェクトをマスクする描画オブジェクトの数\n   * @return 該当するクリッピングマスクが存在すればインスタンスを返し、なければNULLを返す\n   */\n  public findSameClip(\n    drawableMasks: Int32Array,\n    drawableMaskCounts: number,\n  ): CubismClippingContext | null {\n    // 作成済みClippingContextと一致するか確認\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      const clippingContext: CubismClippingContext = this._clippingContextListForMask[i];\n      const count: number = clippingContext._clippingIdCount;\n\n      // 個数が違う場合は別物\n      if (count != drawableMaskCounts) {\n        continue;\n      }\n\n      let sameCount = 0;\n\n      // 同じIDを持つか確認。配列の数が同じなので、一致した個数が同じなら同じ物を持つとする\n      for (let j = 0; j < count; j++) {\n        const clipId: number = clippingContext._clippingIdList[j];\n\n        for (let k = 0; k < count; k++) {\n          if (drawableMasks[k] == clipId) {\n            sameCount++;\n            break;\n          }\n        }\n      }\n\n      if (sameCount == count) {\n        return clippingContext;\n      }\n    }\n\n    return null; // 見つからなかった\n  }\n\n  /**\n   * クリッピングコンテキストを配置するレイアウト\n   * 一つのレンダーテクスチャを極力いっぱいに使ってマスクをレイアウトする\n   * マスクグループの数が4以下ならRGBA各チャンネルに一つずつマスクを配置し、5以上6以下ならRGBAを2,2,1,1と配置する。\n   *\n   * @param usingClipCount 配置するクリッピングコンテキストの数\n   */\n  public setupLayoutBounds(usingClipCount: number): void {\n    // ひとつのRenderTextureを極力いっぱいに使ってマスクをレイアウトする\n    // マスクグループの数が4以下ならRGBA各チャンネルに1つずつマスクを配置し、5以上6以下ならRGBAを2,2,1,1と配置する\n\n    // RGBAを順番に使っていく\n    let div: number = usingClipCount / ColorChannelCount; // 1チャンネルに配置する基本のマスク\n    let mod: number = usingClipCount % ColorChannelCount; // 余り、この番号のチャンネルまでに一つずつ配分する\n\n    // 小数点は切り捨てる\n    div = ~~div;\n    mod = ~~mod;\n\n    // RGBAそれぞれのチャンネルを用意していく（0:R, 1:G, 2:B, 3:A）\n    let curClipIndex = 0; // 順番に設定していく\n\n    for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n      // このチャンネルにレイアウトする数\n      const layoutCount: number = div + (channelNo < mod ? 1 : 0);\n\n      // 分割方法を決定する\n      if (layoutCount == 0) {\n        // 何もしない\n      } else if (layoutCount == 1) {\n        // 全てをそのまま使う\n        const clipContext: CubismClippingContext = this._clippingContextListForMask[curClipIndex++];\n        clipContext._layoutChannelNo = channelNo;\n        clipContext._layoutBounds.x = 0.0;\n        clipContext._layoutBounds.y = 0.0;\n        clipContext._layoutBounds.width = 1.0;\n        clipContext._layoutBounds.height = 1.0;\n      } else if (layoutCount == 2) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos: number = i % 2;\n\n          // 小数点は切り捨てる\n          xpos = ~~xpos;\n\n          const cc: CubismClippingContext = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = 0.0;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 1.0;\n          // UVを2つに分解して使う\n        }\n      } else if (layoutCount <= 4) {\n        // 4分割して使う\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos: number = i % 2;\n          let ypos: number = i / 2;\n\n          // 小数点は切り捨てる\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = ypos * 0.5;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 0.5;\n        }\n      } else if (layoutCount <= 9) {\n        // 9分割して使う\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 3;\n          let ypos = i / 3;\n\n          // 小数点は切り捨てる\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n\n          const cc: CubismClippingContext = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n\n          cc._layoutBounds.x = xpos / 3.0;\n          cc._layoutBounds.y = ypos / 3.0;\n          cc._layoutBounds.width = 1.0 / 3.0;\n          cc._layoutBounds.height = 1.0 / 3.0;\n        }\n      } else if (config.supportMoreMaskDivisions && layoutCount <= 16) {\n        // support 4x4 division\n        // https://docs.live2d.com/cubism-sdk-manual/ow-sdk-mask-premake-web/?locale=en_us\n\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 4;\n          let ypos = i / 4;\n\n          // 小数点は切り捨てる\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n\n          const cc: CubismClippingContext = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n\n          cc._layoutBounds.x = xpos / 4.0;\n          cc._layoutBounds.y = ypos / 4.0;\n          cc._layoutBounds.width = 1.0 / 4.0;\n          cc._layoutBounds.height = 1.0 / 4.0;\n        }\n      } else {\n        CubismLogError('not supported mask count : {0}', layoutCount);\n      }\n    }\n  }\n\n  /**\n   * カラーバッファを取得する\n   * @return カラーバッファ\n   */\n  public getColorBuffer(): WebGLTexture | null {\n    return this._colorBuffer;\n  }\n\n  /**\n   * 画面描画に使用するクリッピングマスクのリストを取得する\n   * @return 画面描画に使用するクリッピングマスクのリスト\n   */\n  public getClippingContextListForDraw(): (CubismClippingContext | null)[] {\n    return this._clippingContextListForDraw;\n  }\n\n  /**\n   * クリッピングマスクバッファのサイズを設定する\n   * @param size クリッピングマスクバッファのサイズ\n   */\n  public setClippingMaskBufferSize(size: number): void {\n    this._clippingMaskBufferSize = size;\n  }\n\n  /**\n   * クリッピングマスクバッファのサイズを取得する\n   * @return クリッピングマスクバッファのサイズ\n   */\n  public getClippingMaskBufferSize(): number {\n    return this._clippingMaskBufferSize;\n  }\n\n  public _maskRenderTexture: WebGLFramebuffer | null; // マスク用レンダーテクスチャのアドレス\n  public _colorBuffer: WebGLTexture | null; // マスク用カラーバッファーのアドレス\n  public _currentFrameNo: number; // マスクテクスチャに与えるフレーム番号\n\n  public _channelColors: CubismTextureColor[];\n  public _maskTexture?: CubismRenderTextureResource; // マスク用のテクスチャリソースのリスト\n  public _clippingContextListForMask: CubismClippingContext[]; // マスク用クリッピングコンテキストのリスト\n  public _clippingContextListForDraw: (CubismClippingContext | null)[]; // 描画用クリッピングコンテキストのリスト\n  public _clippingMaskBufferSize: number; // クリッピングマスクのバッファサイズ（初期値:256）\n\n  private _tmpMatrix: CubismMatrix44; // マスク計算用の行列\n  private _tmpMatrixForMask: CubismMatrix44; // マスク計算用の行列\n  private _tmpMatrixForDraw: CubismMatrix44; // マスク計算用の行列\n  private _tmpBoundsOnModel: csmRect; // マスク配置計算用の矩形\n\n  gl!: WebGLRenderingContext; // WebGLレンダリングコンテキスト\n}\n\n/**\n * レンダーテクスチャのリソースを定義する構造体\n * クリッピングマスクで使用する\n */\nexport class CubismRenderTextureResource {\n  /**\n   * 引数付きコンストラクタ\n   * @param frameNo レンダラーのフレーム番号\n   * @param texture テクスチャのアドレス\n   */\n  public constructor(frameNo: number, texture: WebGLFramebuffer | null) {\n    this.frameNo = frameNo;\n    this.texture = texture;\n  }\n\n  public frameNo: number; // レンダラのフレーム番号\n  public texture: WebGLFramebuffer | null; // テクスチャのアドレス\n}\n\n/**\n * クリッピングマスクのコンテキスト\n */\nexport class CubismClippingContext {\n  /**\n   * 引数付きコンストラクタ\n   */\n  public constructor(\n    manager: CubismClippingManager_WebGL,\n    clippingDrawableIndices: Int32Array,\n    clipCount: number,\n  ) {\n    this._owner = manager;\n\n    // クリップしている（＝マスク用の）Drawableのインデックスリスト\n    this._clippingIdList = clippingDrawableIndices;\n\n    // マスクの数\n    this._clippingIdCount = clipCount;\n\n    this._allClippedDrawRect = new csmRect();\n    this._layoutBounds = new csmRect();\n\n    this._clippedDrawableIndexList = [];\n\n    this._matrixForMask = new CubismMatrix44();\n    this._matrixForDraw = new CubismMatrix44();\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    const self = this as Partial<this>;\n    self._layoutBounds = undefined;\n    self._allClippedDrawRect = undefined;\n    self._clippedDrawableIndexList = undefined;\n  }\n\n  /**\n   * このマスクにクリップされる描画オブジェクトを追加する\n   *\n   * @param drawableIndex クリッピング対象に追加する描画オブジェクトのインデックス\n   */\n  public addClippedDrawable(drawableIndex: number) {\n    this._clippedDrawableIndexList.push(drawableIndex);\n  }\n\n  /**\n   * このマスクを管理するマネージャのインスタンスを取得する\n   * @return クリッピングマネージャのインスタンス\n   */\n  public getClippingManager(): CubismClippingManager_WebGL {\n    return this._owner;\n  }\n\n  public setGl(gl: WebGLRenderingContext): void {\n    this._owner.setGL(gl);\n  }\n\n  public _isUsing: boolean = false; // 現在の描画状態でマスクの準備が必要ならtrue\n  public readonly _clippingIdList: Int32Array; // クリッピングマスクのIDリスト\n  public _clippingIdCount: number; // クリッピングマスクの数\n  public _layoutChannelNo!: number; // RGBAのいずれのチャンネルにこのクリップを配置するか（0:R, 1:G, 2:B, 3:A）\n  public _layoutBounds: csmRect; // マスク用チャンネルのどの領域にマスクを入れるか（View座標-1~1, UVは0~1に直す）\n  public _allClippedDrawRect: csmRect; // このクリッピングで、クリッピングされるすべての描画オブジェクトの囲み矩形（毎回更新）\n  public _matrixForMask: CubismMatrix44; // マスクの位置計算結果を保持する行列\n  public _matrixForDraw: CubismMatrix44; // 描画オブジェクトの位置計算結果を保持する行列\n  public _clippedDrawableIndexList: number[]; // このマスクにクリップされる描画オブジェクトのリスト\n\n  private _owner: CubismClippingManager_WebGL; // このマスクを管理しているマネージャのインスタンス\n}\n\n/**\n * WebGL用のシェーダープログラムを生成・破棄するクラス\n * シングルトンなクラスであり、CubismShader_WebGL.getInstanceからアクセスする。\n */\nexport class CubismShader_WebGL {\n  /**\n   * インスタンスを取得する（シングルトン）\n   * @return インスタンス\n   */\n  public static getInstance(): CubismShader_WebGL {\n    if (s_instance == null) {\n      s_instance = new CubismShader_WebGL();\n\n      return s_instance;\n    }\n    return s_instance;\n  }\n\n  /**\n   * インスタンスを開放する（シングルトン）\n   */\n  public static deleteInstance(): void {\n    if (s_instance) {\n      s_instance.release();\n      s_instance = undefined;\n    }\n  }\n\n  /**\n   * privateなコンストラクタ\n   */\n  private constructor() {\n    this._shaderSets = [];\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    this.releaseShaderProgram();\n  }\n\n  /**\n   * シェーダープログラムの一連のセットアップを実行する\n   * @param renderer レンダラのインスタンス\n   * @param textureId GPUのテクスチャID\n   * @param vertexCount ポリゴンメッシュの頂点数\n   * @param vertexArray ポリゴンメッシュの頂点配列\n   * @param indexArray インデックスバッファの頂点配列\n   * @param uvArray uv配列\n   * @param opacity 不透明度\n   * @param colorBlendMode カラーブレンディングのタイプ\n   * @param baseColor ベースカラー\n   * @param isPremultipliedAlpha 乗算済みアルファかどうか\n   * @param matrix4x4 Model-View-Projection行列\n   * @param invertedMask マスクを反転して使用するフラグ\n   */\n  public setupShaderProgram(\n    renderer: CubismRenderer_WebGL,\n    textureId: WebGLTexture | null,\n    vertexCount: number,\n    vertexArray: Float32Array,\n    indexArray: Uint16Array,\n    uvArray: Float32Array,\n    bufferData: {\n      vertex: WebGLBuffer | null;\n      uv: WebGLBuffer | null;\n      index: WebGLBuffer | null;\n    },\n    opacity: number,\n    colorBlendMode: CubismBlendMode,\n    baseColor: CubismTextureColor,\n    isPremultipliedAlpha: boolean,\n    matrix4x4: CubismMatrix44,\n    invertedMask: boolean,\n  ): void {\n    if (!isPremultipliedAlpha) {\n      CubismLogError('NoPremultipliedAlpha is not allowed');\n    }\n\n    if (this._shaderSets.length == 0) {\n      this.generateShaders();\n    }\n\n    // Blending\n    let SRC_COLOR: number;\n    let DST_COLOR: number;\n    let SRC_ALPHA: number;\n    let DST_ALPHA: number;\n\n    const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n\n    if (clippingContextBufferForMask != null) {\n      // マスク生成時\n      const shaderSet: CubismShaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n      this.gl.useProgram(shaderSet.shaderProgram);\n\n      // テクスチャ設定\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n\n      // 頂点配列の設定(VBO)\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(\n        this.gl.ARRAY_BUFFER,\n        vertexArray,\n        this.gl.DYNAMIC_DRAW,\n      );\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(\n        shaderSet.attributePositionLocation,\n        2,\n        this.gl.FLOAT,\n        false,\n        0,\n        0,\n      );\n\n      // テクスチャ頂点の設定\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(\n        shaderSet.attributeTexCoordLocation,\n        2,\n        this.gl.FLOAT,\n        false,\n        0,\n        0,\n      );\n\n      // チャンネル\n      const channelNo: number = clippingContextBufferForMask._layoutChannelNo;\n      const colorChannel: CubismTextureColor = clippingContextBufferForMask\n        .getClippingManager()\n        .getChannelFlagAsColor(channelNo);\n      this.gl.uniform4f(\n        shaderSet.uniformChannelFlagLocation,\n        colorChannel.R,\n        colorChannel.G,\n        colorChannel.B,\n        colorChannel.A,\n      );\n\n      this.gl.uniformMatrix4fv(\n        shaderSet.uniformClipMatrixLocation,\n        false,\n        clippingContextBufferForMask._matrixForMask.getArray(),\n      );\n\n      const rect: csmRect = clippingContextBufferForMask._layoutBounds;\n\n      this.gl.uniform4f(\n        shaderSet.uniformBaseColorLocation,\n        rect.x * 2.0 - 1.0,\n        rect.y * 2.0 - 1.0,\n        rect.getRight() * 2.0 - 1.0,\n        rect.getBottom() * 2.0 - 1.0,\n      );\n\n      SRC_COLOR = this.gl.ZERO;\n      DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n      SRC_ALPHA = this.gl.ZERO;\n      DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n    } // マスク生成以外の場合\n    else {\n      const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n      const masked = clippingContextBufferForDraw != null; // この描画オブジェクトはマスク対象か\n      const offset: number = masked ? (invertedMask ? 2 : 1) : 0;\n\n      let shaderSet;\n\n      switch (colorBlendMode) {\n        case CubismBlendMode.CubismBlendMode_Normal:\n        default:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ONE;\n          DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n          break;\n\n        case CubismBlendMode.CubismBlendMode_Additive:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n\n        case CubismBlendMode.CubismBlendMode_Multiplicative:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.DST_COLOR;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n      }\n\n      this.gl.useProgram(shaderSet.shaderProgram);\n\n      // 頂点配列の設定\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(\n        this.gl.ARRAY_BUFFER,\n        vertexArray,\n        this.gl.DYNAMIC_DRAW,\n      );\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(\n        shaderSet.attributePositionLocation,\n        2,\n        this.gl.FLOAT,\n        false,\n        0,\n        0,\n      );\n\n      // テクスチャ頂点の設定\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(\n        shaderSet.attributeTexCoordLocation,\n        2,\n        this.gl.FLOAT,\n        false,\n        0,\n        0,\n      );\n\n      // この描画オブジェクトはマスク対象か\n      if (clippingContextBufferForDraw != null) {\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        const tex = clippingContextBufferForDraw\n          .getClippingManager()\n          .getColorBuffer();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n        this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n\n        // view座標をClippingContextの座標に変換するための行列を設定\n        this.gl.uniformMatrix4fv(\n          shaderSet.uniformClipMatrixLocation,\n          false,\n          clippingContextBufferForDraw._matrixForDraw.getArray(),\n        );\n\n        // 使用するカラーチャンネルを設定\n        const channelNo: number = clippingContextBufferForDraw._layoutChannelNo;\n        const colorChannel: CubismTextureColor = clippingContextBufferForDraw\n          .getClippingManager()\n          .getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(\n          shaderSet.uniformChannelFlagLocation,\n          colorChannel.R,\n          colorChannel.G,\n          colorChannel.B,\n          colorChannel.A,\n        );\n      }\n\n      // テクスチャ設定\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n\n      // 座標変換\n      this.gl.uniformMatrix4fv(\n        shaderSet.uniformMatrixLocation,\n        false,\n        matrix4x4.getArray(),\n      );\n\n      this.gl.uniform4f(\n        shaderSet.uniformBaseColorLocation,\n        baseColor.R,\n        baseColor.G,\n        baseColor.B,\n        baseColor.A,\n      );\n    }\n\n    // IBOを作成し、データを転送\n    if (bufferData.index == null) {\n      bufferData.index = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n    this.gl.bufferData(\n      this.gl.ELEMENT_ARRAY_BUFFER,\n      indexArray,\n      this.gl.DYNAMIC_DRAW,\n    );\n    this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n  }\n\n  /**\n   * シェーダープログラムを解放する\n   */\n  public releaseShaderProgram(): void {\n    for (let i = 0; i < this._shaderSets.length; i++) {\n      this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n      this._shaderSets[i].shaderProgram = 0;\n    }\n\n    this._shaderSets = [];\n  }\n\n  /**\n   * シェーダープログラムを初期化する\n   * @param vertShaderSrc 頂点シェーダのソース\n   * @param fragShaderSrc フラグメントシェーダのソース\n   */\n  public generateShaders(): void {\n    for (let i = 0; i < shaderCount; i++) {\n      this._shaderSets.push({} as any);\n    }\n\n    this._shaderSets[0].shaderProgram = this.loadShaderProgram(\n      vertexShaderSrcSetupMask,\n      fragmentShaderSrcsetupMask,\n    );\n\n    this._shaderSets[1].shaderProgram = this.loadShaderProgram(\n      vertexShaderSrc,\n      fragmentShaderSrcPremultipliedAlpha,\n    );\n    this._shaderSets[2].shaderProgram = this.loadShaderProgram(\n      vertexShaderSrcMasked,\n      fragmentShaderSrcMaskPremultipliedAlpha,\n    );\n    this._shaderSets[3].shaderProgram = this.loadShaderProgram(\n      vertexShaderSrcMasked,\n      fragmentShaderSrcMaskInvertedPremultipliedAlpha,\n    );\n\n    // 加算も通常と同じシェーダーを利用する\n    this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n\n    // 乗算も通常と同じシェーダーを利用する\n    this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n\n    // SetupMask\n    this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[0].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[0].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[0].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[0].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[0].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[0].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 通常（PremultipliedAlpha）\n    this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[1].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[1].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[1].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[1].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[1].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 通常（クリッピング、PremultipliedAlpha）\n    this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[2].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[2].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[2].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(\n      this._shaderSets[2].shaderProgram,\n      's_texture1',\n    );\n    this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[2].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[2].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[2].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[2].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 通常（クリッピング・反転, PremultipliedAlpha）\n    this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[3].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[3].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[3].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(\n      this._shaderSets[3].shaderProgram,\n      's_texture1',\n    );\n    this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[3].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[3].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[3].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[3].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 加算（PremultipliedAlpha）\n    this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[4].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[4].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[4].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[4].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[4].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 加算（クリッピング、PremultipliedAlpha）\n    this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[5].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[5].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[5].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(\n      this._shaderSets[5].shaderProgram,\n      's_texture1',\n    );\n    this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[5].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[5].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[5].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[5].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 加算（クリッピング・反転、PremultipliedAlpha）\n    this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[6].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[6].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[6].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(\n      this._shaderSets[6].shaderProgram,\n      's_texture1',\n    );\n    this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[6].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[6].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[6].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[6].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 乗算（PremultipliedAlpha）\n    this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[7].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[7].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[7].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[7].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[7].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 乗算（クリッピング、PremultipliedAlpha）\n    this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[8].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[8].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[8].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(\n      this._shaderSets[8].shaderProgram,\n      's_texture1',\n    );\n    this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[8].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[8].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[8].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[8].shaderProgram,\n      'u_baseColor',\n    );\n\n    // 乗算（クリッピング・反転、PremultipliedAlpha）\n    this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(\n      this._shaderSets[9].shaderProgram,\n      'a_position',\n    );\n    this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(\n      this._shaderSets[9].shaderProgram,\n      'a_texCoord',\n    );\n    this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(\n      this._shaderSets[9].shaderProgram,\n      's_texture0',\n    );\n    this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(\n      this._shaderSets[9].shaderProgram,\n      's_texture1',\n    );\n    this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[9].shaderProgram,\n      'u_matrix',\n    );\n    this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(\n      this._shaderSets[9].shaderProgram,\n      'u_clipMatrix',\n    );\n    this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(\n      this._shaderSets[9].shaderProgram,\n      'u_channelFlag',\n    );\n    this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(\n      this._shaderSets[9].shaderProgram,\n      'u_baseColor',\n    );\n  }\n\n  /**\n   * シェーダプログラムをロードしてアドレスを返す\n   * @param vertexShaderSource    頂点シェーダのソース\n   * @param fragmentShaderSource  フラグメントシェーダのソース\n   * @return シェーダプログラムのアドレス\n   */\n  public loadShaderProgram(\n    vertexShaderSource: string,\n    fragmentShaderSource: string,\n  ): WebGLProgram {\n    // Create Shader Program\n    let shaderProgram = this.gl.createProgram()!;\n\n    let vertShader = this.compileShaderSource(\n      this.gl.VERTEX_SHADER,\n      vertexShaderSource,\n    );\n\n    if (!vertShader) {\n      CubismLogError('Vertex shader compile error!');\n      return 0;\n    }\n\n    let fragShader = this.compileShaderSource(\n      this.gl.FRAGMENT_SHADER,\n      fragmentShaderSource,\n    );\n    if (!fragShader) {\n      CubismLogError('Vertex shader compile error!');\n      return 0;\n    }\n\n    // Attach vertex shader to program\n    this.gl.attachShader(shaderProgram, vertShader);\n\n    // Attach fragment shader to program\n    this.gl.attachShader(shaderProgram, fragShader);\n\n    // link program\n    this.gl.linkProgram(shaderProgram);\n    const linkStatus = this.gl.getProgramParameter(\n      shaderProgram,\n      this.gl.LINK_STATUS,\n    );\n\n    // リンクに失敗したらシェーダーを削除\n    if (!linkStatus) {\n      CubismLogError('Failed to link program: {0}', shaderProgram);\n\n      this.gl.deleteShader(vertShader);\n\n      this.gl.deleteShader(fragShader);\n\n      if (shaderProgram) {\n        this.gl.deleteProgram(shaderProgram);\n      }\n\n      return 0;\n    }\n\n    // Release vertex and fragment shaders.\n    this.gl.deleteShader(vertShader);\n    this.gl.deleteShader(fragShader);\n\n    return shaderProgram;\n  }\n\n  /**\n   * シェーダープログラムをコンパイルする\n   * @param shaderType シェーダタイプ(Vertex/Fragment)\n   * @param shaderSource シェーダソースコード\n   *\n   * @return コンパイルされたシェーダープログラム\n   */\n  public compileShaderSource(\n    shaderType: GLenum,\n    shaderSource: string,\n  ): WebGLProgram | null {\n    const source: string = shaderSource;\n\n    const shader = this.gl.createShader(shaderType)!;\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!shader) {\n      const log = this.gl.getShaderInfoLog(shader);\n      CubismLogError('Shader compile log: {0} ', log);\n    }\n\n    const status: any = this.gl.getShaderParameter(\n      shader,\n      this.gl.COMPILE_STATUS,\n    );\n    if (!status) {\n      this.gl.deleteShader(shader);\n      return null;\n    }\n\n    return shader;\n  }\n\n  public setGl(gl: WebGLRenderingContext): void {\n    this.gl = gl;\n  }\n\n  _shaderSets: CubismShaderSet[]; // ロードしたシェーダープログラムを保持する変数\n  gl!: WebGLRenderingContext; // webglコンテキスト\n}\n\n/**\n * CubismShader_WebGLのインナークラス\n */\nexport interface CubismShaderSet {\n  shaderProgram: WebGLProgram; // シェーダープログラムのアドレス\n  attributePositionLocation: GLuint; // シェーダープログラムに渡す変数のアドレス（Position）\n  attributeTexCoordLocation: GLuint; // シェーダープログラムに渡す変数のアドレス（TexCoord）\n  uniformMatrixLocation: WebGLUniformLocation | null; // シェーダープログラムに渡す変数のアドレス（Matrix）\n  uniformClipMatrixLocation: WebGLUniformLocation | null; // シェーダープログラムに渡す変数のアドレス（ClipMatrix）\n  samplerTexture0Location: WebGLUniformLocation | null; // シェーダープログラムに渡す変数のアドレス（Texture0）\n  samplerTexture1Location: WebGLUniformLocation | null; // シェーダープログラムに渡す変数のアドレス（Texture1）\n  uniformBaseColorLocation: WebGLUniformLocation | null; // シェーダープログラムに渡す変数のアドレス（BaseColor）\n  uniformChannelFlagLocation: WebGLUniformLocation | null; // シェーダープログラムに渡す変数のアドレス（ChannelFlag）\n}\n\nexport enum ShaderNames {\n  // SetupMask\n  ShaderNames_SetupMask,\n\n  // Normal\n  ShaderNames_NormalPremultipliedAlpha,\n  ShaderNames_NormalMaskedPremultipliedAlpha,\n  ShaderNames_NomralMaskedInvertedPremultipliedAlpha,\n\n  // Add\n  ShaderNames_AddPremultipliedAlpha,\n  ShaderNames_AddMaskedPremultipliedAlpha,\n  ShaderNames_AddMaskedPremultipliedAlphaInverted,\n\n  // Mult\n  ShaderNames_MultPremultipliedAlpha,\n  ShaderNames_MultMaskedPremultipliedAlpha,\n  ShaderNames_MultMaskedPremultipliedAlphaInverted\n}\n\nexport const vertexShaderSrcSetupMask =\n  'attribute vec4     a_position;' +\n  'attribute vec2     a_texCoord;' +\n  'varying vec2       v_texCoord;' +\n  'varying vec4       v_myPos;' +\n  'uniform mat4       u_clipMatrix;' +\n  'void main()' +\n  '{' +\n  '   gl_Position = u_clipMatrix * a_position;' +\n  '   v_myPos = u_clipMatrix * a_position;' +\n  '   v_texCoord = a_texCoord;' +\n  '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n  '}';\nexport const fragmentShaderSrcsetupMask =\n  'precision mediump float;' +\n  'varying vec2       v_texCoord;' +\n  'varying vec4       v_myPos;' +\n  'uniform vec4       u_baseColor;' +\n  'uniform vec4       u_channelFlag;' +\n  'uniform sampler2D  s_texture0;' +\n  'void main()' +\n  '{' +\n  '   float isInside = ' +\n  '       step(u_baseColor.x, v_myPos.x/v_myPos.w)' +\n  '       * step(u_baseColor.y, v_myPos.y/v_myPos.w)' +\n  '       * step(v_myPos.x/v_myPos.w, u_baseColor.z)' +\n  '       * step(v_myPos.y/v_myPos.w, u_baseColor.w);' +\n  '   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;' +\n  '}';\n\n//----- バーテックスシェーダプログラム -----\n// Normal & Add & Mult 共通\nexport const vertexShaderSrc =\n  'attribute vec4     a_position;' + //v.vertex\n  'attribute vec2     a_texCoord;' + //v.texcoord\n  'varying vec2       v_texCoord;' + //v2f.texcoord\n  'uniform mat4       u_matrix;' +\n  'void main()' +\n  '{' +\n  '   gl_Position = u_matrix * a_position;' +\n  '   v_texCoord = a_texCoord;' +\n  '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n  '}';\n\n// Normal & Add & Mult 共通（クリッピングされたものの描画用）\nexport const vertexShaderSrcMasked =\n  'attribute vec4     a_position;' +\n  'attribute vec2     a_texCoord;' +\n  'varying vec2       v_texCoord;' +\n  'varying vec4       v_clipPos;' +\n  'uniform mat4       u_matrix;' +\n  'uniform mat4       u_clipMatrix;' +\n  'void main()' +\n  '{' +\n  '   gl_Position = u_matrix * a_position;' +\n  '   v_clipPos = u_clipMatrix * a_position;' +\n  '   v_texCoord = a_texCoord;' +\n  '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n  '}';\n\n//----- フラグメントシェーダプログラム -----\n// Normal & Add & Mult 共通 （PremultipliedAlpha）\nexport const fragmentShaderSrcPremultipliedAlpha =\n  'precision mediump float;' +\n  'varying vec2       v_texCoord;' + //v2f.texcoord\n  'uniform vec4       u_baseColor;' +\n  'uniform sampler2D  s_texture0;' + //_MainTex\n  'void main()' +\n  '{' +\n  '   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;' +\n  '}';\n\n// Normal （クリッピングされたものの描画用、PremultipliedAlpha兼用）\nexport const fragmentShaderSrcMaskPremultipliedAlpha =\n  'precision mediump float;' +\n  'varying vec2       v_texCoord;' +\n  'varying vec4       v_clipPos;' +\n  'uniform vec4       u_baseColor;' +\n  'uniform vec4       u_channelFlag;' +\n  'uniform sampler2D  s_texture0;' +\n  'uniform sampler2D  s_texture1;' +\n  'void main()' +\n  '{' +\n  '   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;' +\n  '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\n  '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\n  '   col_formask = col_formask * maskVal;' +\n  '   gl_FragColor = col_formask;' +\n  '}';\n\n// Normal & Add & Mult 共通（クリッピングされて反転使用の描画用、PremultipliedAlphaの場合）\nexport const fragmentShaderSrcMaskInvertedPremultipliedAlpha =\n  'precision mediump float;' +\n  'varying vec2 v_texCoord;' +\n  'varying vec4 v_clipPos;' +\n  'uniform sampler2D s_texture0;' +\n  'uniform sampler2D s_texture1;' +\n  'uniform vec4 u_channelFlag;' +\n  'uniform vec4 u_baseColor;' +\n  'void main()' +\n  '{' +\n  'vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;' +\n  'vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\n  'float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\n  'col_formask = col_formask * (1.0 - maskVal);' +\n  'gl_FragColor = col_formask;' +\n  '}';\n\n/**\n * WebGL用の描画命令を実装したクラス\n */\nexport class CubismRenderer_WebGL extends CubismRenderer {\n  /**\n   * レンダラの初期化処理を実行する\n   * 引数に渡したモデルからレンダラの初期化処理に必要な情報を取り出すことができる\n   *\n   * @param model モデルのインスタンス\n   */\n  public initialize(model: CubismModel): void {\n    if (model.isUsingMasking()) {\n      this._clippingManager = new CubismClippingManager_WebGL(); // クリッピングマスク・バッファ前処理方式を初期化\n      this._clippingManager.initialize(\n        model,\n        model.getDrawableCount(),\n        model.getDrawableMasks(),\n        model.getDrawableMaskCounts(),\n      );\n    }\n\n    for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n      this._sortedDrawableIndexList[i] = 0;\n    }\n\n    super.initialize(model); // 親クラスの処理を呼ぶ\n  }\n\n  /**\n   * WebGLテクスチャのバインド処理\n   * CubismRendererにテクスチャを設定し、CubismRenderer内でその画像を参照するためのIndex値を戻り値とする\n   * @param modelTextureNo セットするモデルテクスチャの番号\n   * @param glTextureNo WebGLテクスチャの番号\n   */\n  public bindTexture(modelTextureNo: number, glTexture: WebGLTexture): void {\n    this._textures[modelTextureNo] = glTexture;\n  }\n\n  /**\n   * WebGLにバインドされたテクスチャのリストを取得する\n   * @return テクスチャのリスト\n   */\n  public getBindedTextures(): Record<number, WebGLTexture> {\n    return this._textures;\n  }\n\n  /**\n   * クリッピングマスクバッファのサイズを設定する\n   * マスク用のFrameBufferを破棄、再作成する為処理コストは高い\n   * @param size クリッピングマスクバッファのサイズ\n   */\n  public setClippingMaskBufferSize(size: number) {\n    // FrameBufferのサイズを変更するためにインスタンスを破棄・再作成する\n    this._clippingManager.release();\n\n    this._clippingManager = new CubismClippingManager_WebGL();\n\n    this._clippingManager.setClippingMaskBufferSize(size);\n\n    this._clippingManager.initialize(\n      this.getModel(),\n      this.getModel().getDrawableCount(),\n      this.getModel().getDrawableMasks(),\n      this.getModel().getDrawableMaskCounts(),\n    );\n  }\n\n  /**\n   * クリッピングマスクバッファのサイズを取得する\n   * @return クリッピングマスクバッファのサイズ\n   */\n  public getClippingMaskBufferSize(): number {\n    return this._clippingManager.getClippingMaskBufferSize();\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    super();\n    this._clippingContextBufferForMask = null;\n    this._clippingContextBufferForDraw = null;\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this.firstDraw = true;\n    this._textures = {};\n    this._sortedDrawableIndexList = [];\n    this._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null,\n    };\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    const self = this as Partial<this>;\n\n    this._clippingManager.release();\n    self._clippingManager = undefined;\n\n    this.gl?.deleteBuffer(this._bufferData.vertex);\n    this._bufferData.vertex = null;\n    this.gl?.deleteBuffer(this._bufferData.uv);\n    this._bufferData.uv = null;\n    this.gl?.deleteBuffer(this._bufferData.index);\n    this._bufferData.index = null;\n    self._bufferData = undefined;\n\n    self._textures = undefined;\n  }\n\n  /**\n   * モデルを描画する実際の処理\n   */\n  public doDrawModel(): void {\n    // 上記クリッピング処理内でも一度PreDrawを呼ぶので注意!!\n    this.preDraw();\n\n    //------------ クリッピングマスク・バッファ前処理方式の場合 ------------\n    if (this._clippingManager != null) {\n      this._clippingManager.setupClippingContext(this.getModel(), this);\n    }\n\n    const drawableCount: number = this.getModel().getDrawableCount();\n    const renderOrder: Int32Array = this.getModel().getDrawableRenderOrders();\n\n    // インデックスを描画順でソート\n    for (let i = 0; i < drawableCount; ++i) {\n      const order: number = renderOrder[i];\n      this._sortedDrawableIndexList[order] = i;\n    }\n\n    // 描画\n    for (let i = 0; i < drawableCount; ++i) {\n      const drawableIndex: number = this._sortedDrawableIndexList[i];\n\n      // Drawableが表示状態でなければ処理をパスする\n      if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n        continue;\n      }\n\n      // クリッピングマスクをセットする\n      this.setClippingContextBufferForDraw(\n        this._clippingManager != null\n          ? this._clippingManager.getClippingContextListForDraw()[drawableIndex]\n          : null,\n      );\n\n      this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n\n      this.drawMesh(\n        this.getModel().getDrawableTextureIndices(drawableIndex),\n        this.getModel().getDrawableVertexIndexCount(drawableIndex),\n        this.getModel().getDrawableVertexCount(drawableIndex),\n        this.getModel().getDrawableVertexIndices(drawableIndex),\n        this.getModel().getDrawableVertices(drawableIndex),\n        this.getModel().getDrawableVertexUvs(drawableIndex),\n        this.getModel().getDrawableOpacity(drawableIndex),\n        this.getModel().getDrawableBlendMode(drawableIndex),\n        this.getModel().getDrawableInvertedMaskBit(drawableIndex),\n      );\n    }\n  }\n\n  /**\n   * [オーバーライド]\n   * 描画オブジェクト（アートメッシュ）を描画する。\n   * ポリゴンメッシュとテクスチャ番号をセットで渡す。\n   * @param textureNo 描画するテクスチャ番号\n   * @param indexCount 描画オブジェクトのインデックス値\n   * @param vertexCount ポリゴンメッシュの頂点数\n   * @param indexArray ポリゴンメッシュのインデックス配列\n   * @param vertexArray ポリゴンメッシュの頂点配列\n   * @param uvArray uv配列\n   * @param opacity 不透明度\n   * @param colorBlendMode カラー合成タイプ\n   * @param invertedMask マスク使用時のマスクの反転使用\n   */\n  public drawMesh(\n    textureNo: number,\n    indexCount: number,\n    vertexCount: number,\n    indexArray: Uint16Array,\n    vertexArray: Float32Array,\n    uvArray: Float32Array,\n    opacity: number,\n    colorBlendMode: CubismBlendMode,\n    invertedMask: boolean,\n  ): void {\n    // 裏面描画の有効・無効\n    if (this.isCulling()) {\n      this.gl.enable(this.gl.CULL_FACE);\n    } else {\n      this.gl.disable(this.gl.CULL_FACE);\n    }\n\n    this.gl.frontFace(this.gl.CCW); // Cubism SDK OpenGLはマスク・アートメッシュ共にCCWが表面\n\n    const modelColorRGBA: CubismTextureColor = this.getModelColor();\n\n    if (this.getClippingContextBufferForMask() == null) {\n      // マスク生成時以外\n      modelColorRGBA.A *= opacity;\n      if (this.isPremultipliedAlpha()) {\n        modelColorRGBA.R *= modelColorRGBA.A;\n        modelColorRGBA.G *= modelColorRGBA.A;\n        modelColorRGBA.B *= modelColorRGBA.A;\n      }\n    }\n\n    let drawtexture: WebGLTexture | null = null; // シェーダに渡すテクスチャ\n\n    // テクスチャマップからバインド済みテクスチャＩＤを取得\n    // バインドされていなければダミーのテクスチャIDをセットする\n    if (this._textures[textureNo] != null) {\n      drawtexture = this._textures[textureNo];\n    }\n\n    CubismShader_WebGL.getInstance().setupShaderProgram(\n      this,\n      drawtexture,\n      vertexCount,\n      vertexArray,\n      indexArray,\n      uvArray,\n      this._bufferData,\n      opacity,\n      colorBlendMode,\n      modelColorRGBA,\n      this.isPremultipliedAlpha(),\n      this.getMvpMatrix(),\n      invertedMask,\n    );\n\n    // ポリゴンメッシュを描画する\n    this.gl.drawElements(\n      this.gl.TRIANGLES,\n      indexCount,\n      this.gl.UNSIGNED_SHORT,\n      0,\n    );\n\n    // 後処理\n    this.gl.useProgram(null);\n    this.setClippingContextBufferForDraw(null);\n    this.setClippingContextBufferForMask(null);\n  }\n\n  /**\n   * レンダラが保持する静的なリソースを解放する\n   * WebGLの静的なシェーダープログラムを解放する\n   */\n  public static doStaticRelease(): void {\n    CubismShader_WebGL.deleteInstance();\n  }\n\n  /**\n   * レンダーステートを設定する\n   * @param fbo アプリケーション側で指定しているフレームバッファ\n   * @param viewport ビューポート\n   */\n  public setRenderState(fbo: WebGLFramebuffer, viewport: number[]): void {\n    s_fbo = fbo;\n    s_viewport = viewport;\n  }\n\n  /**\n   * 描画開始時の追加処理\n   * モデルを描画する前にクリッピングマスクに必要な処理を実装している\n   */\n  public preDraw(): void {\n    if (this.firstDraw) {\n      this.firstDraw = false;\n\n      // 拡張機能を有効にする\n      this._anisortopy =\n        this.gl.getExtension('EXT_texture_filter_anisotropic') ||\n        this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic') ||\n        this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic');\n    }\n\n    this.gl.disable(this.gl.SCISSOR_TEST);\n    this.gl.disable(this.gl.STENCIL_TEST);\n    this.gl.disable(this.gl.DEPTH_TEST);\n\n    // カリング（1.0beta3）\n    this.gl.frontFace(this.gl.CW);\n\n    this.gl.enable(this.gl.BLEND);\n    this.gl.colorMask(true, true, true, true);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null); // 前にバッファがバインドされていたら破棄する必要がある\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n\n  /**\n   * マスクテクスチャに描画するクリッピングコンテキストをセットする\n   */\n  public setClippingContextBufferForMask(clip: CubismClippingContext | null) {\n    this._clippingContextBufferForMask = clip;\n  }\n\n  /**\n   * マスクテクスチャに描画するクリッピングコンテキストを取得する\n   * @return マスクテクスチャに描画するクリッピングコンテキスト\n   */\n  public getClippingContextBufferForMask(): CubismClippingContext | null {\n    return this._clippingContextBufferForMask;\n  }\n\n  /**\n   * 画面上に描画するクリッピングコンテキストをセットする\n   */\n  public setClippingContextBufferForDraw(clip: CubismClippingContext | null): void {\n    this._clippingContextBufferForDraw = clip;\n  }\n\n  /**\n   * 画面上に描画するクリッピングコンテキストを取得する\n   * @return 画面上に描画するクリッピングコンテキスト\n   */\n  public getClippingContextBufferForDraw(): CubismClippingContext | null {\n    return this._clippingContextBufferForDraw;\n  }\n\n  /**\n   * glの設定\n   */\n  public startUp(gl: WebGLRenderingContext): void {\n    this.gl = gl;\n    this._clippingManager.setGL(gl);\n    CubismShader_WebGL.getInstance().setGl(gl);\n  }\n\n  _textures: Record<number, WebGLTexture>; // モデルが参照するテクスチャとレンダラでバインドしているテクスチャとのマップ\n  _sortedDrawableIndexList: number[]; // 描画オブジェクトのインデックスを描画順に並べたリスト\n  _clippingManager: CubismClippingManager_WebGL; // クリッピングマスク管理オブジェクト\n  _clippingContextBufferForMask: CubismClippingContext | null; // マスクテクスチャに描画するためのクリッピングコンテキスト\n  _clippingContextBufferForDraw: CubismClippingContext | null; // 画面上描画するためのクリッピングコンテキスト\n  firstDraw: boolean;\n  _bufferData: {\n    vertex: WebGLBuffer | null;\n    uv: WebGLBuffer | null;\n    index: WebGLBuffer | null;\n  }; // 頂点バッファデータ\n  gl!: WebGLRenderingContext; // webglコンテキスト\n}\n\n/**\n * レンダラが保持する静的なリソースを開放する\n */\nCubismRenderer.staticRelease = (): void => {\n  CubismRenderer_WebGL.doStaticRelease();\n};\n","import { InternalModelOptions } from '@/cubism-common';\nimport { CommonHitArea, CommonLayout, InternalModel } from '@/cubism-common/InternalModel';\nimport { Cubism4ModelSettings } from '@/cubism4/Cubism4ModelSettings';\nimport { Cubism4MotionManager } from '@/cubism4/Cubism4MotionManager';\nimport {\n    ParamAngleX,\n    ParamAngleY,\n    ParamAngleZ,\n    ParamBodyAngleX,\n    ParamBreath,\n    ParamEyeBallX,\n    ParamEyeBallY,\n} from '@cubism/cubismdefaultparameterid';\nimport { BreathParameterData, CubismBreath } from '@cubism/effect/cubismbreath';\nimport { CubismEyeBlink } from '@cubism/effect/cubismeyeblink';\nimport { CubismPose } from '@cubism/effect/cubismpose';\nimport { CubismMatrix44 } from '@cubism/math/cubismmatrix44';\nimport { CubismModel } from '@cubism/model/cubismmodel';\nimport { CubismModelUserData } from '@cubism/model/cubismmodeluserdata';\nimport { CubismPhysics } from '@cubism/physics/cubismphysics';\nimport { CubismRenderer_WebGL, CubismShader_WebGL } from '@cubism/rendering/cubismrenderer_webgl';\nimport { Matrix } from '@pixi/math';\nimport mapKeys from 'lodash/mapKeys';\n\nconst tempMatrix = new CubismMatrix44();\n\nexport class Cubism4InternalModel extends InternalModel {\n    settings: Cubism4ModelSettings;\n    coreModel: CubismModel;\n    motionManager: Cubism4MotionManager;\n\n    lipSync = true;\n\n    breath = CubismBreath.create();\n    eyeBlink?: CubismEyeBlink;\n    pose?: CubismPose;\n    physics?: CubismPhysics;\n\n    // what's this for?\n    userData?: CubismModelUserData;\n\n    renderer = new CubismRenderer_WebGL();\n\n    idParamAngleX = ParamAngleX;\n    idParamAngleY = ParamAngleY;\n    idParamAngleZ = ParamAngleZ;\n    idParamEyeBallX = ParamEyeBallX;\n    idParamEyeBallY = ParamEyeBallY;\n    idParamBodyAngleX = ParamBodyAngleX;\n    idParamBreath = ParamBreath;\n\n    /**\n     * The model's internal scale, defined in the moc3 file.\n     */\n    readonly pixelsPerUnit: number = 1;\n\n    /**\n     * Matrix that scales by {@link pixelsPerUnit}, and moves the origin from top-left to center.\n     *\n     * FIXME: This shouldn't be named as \"centering\"...\n     */\n    protected centeringTransform = new Matrix();\n\n    constructor(coreModel: CubismModel, settings: Cubism4ModelSettings, options?: InternalModelOptions) {\n        super();\n\n        this.coreModel = coreModel;\n        this.settings = settings;\n        this.motionManager = new Cubism4MotionManager(settings, options);\n\n        this.init();\n    }\n\n    protected init() {\n        super.init();\n\n        if (this.settings.getEyeBlinkParameters()?.length! > 0) {\n            this.eyeBlink = CubismEyeBlink.create(this.settings);\n        }\n\n        this.breath.setParameters([\n            new BreathParameterData(this.idParamAngleX, 0.0, 15.0, 6.5345, 0.5),\n            new BreathParameterData(this.idParamAngleY, 0.0, 8.0, 3.5345, 0.5),\n            new BreathParameterData(this.idParamAngleZ, 0.0, 10.0, 5.5345, 0.5),\n            new BreathParameterData(this.idParamBodyAngleX, 0.0, 4.0, 15.5345, 0.5),\n            new BreathParameterData(this.idParamBreath, 0.0, 0.5, 3.2345, 0.5),\n        ]);\n\n        this.renderer.initialize(this.coreModel);\n        this.renderer.setIsPremultipliedAlpha(true);\n    }\n\n    protected getSize(): [number, number] {\n        return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n    }\n\n    protected getLayout(): CommonLayout {\n        // un-capitalize each key to satisfy the common layout format\n        // e.g. CenterX -> centerX\n        return mapKeys({ ...this.settings.layout }, (_, key) => key.charAt(0).toLowerCase() + key.slice(1));\n    }\n\n    protected setupLayout() {\n        super.setupLayout();\n\n        (this as Mutable<this>).pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n\n        // move the origin from top left to center\n        this.centeringTransform\n            .scale(this.pixelsPerUnit, this.pixelsPerUnit)\n            .translate(this.originalWidth / 2, this.originalHeight / 2);\n    }\n\n    updateWebGLContext(gl: WebGLRenderingContext, glContextID: number): void {\n        // reset resources that were bound to previous WebGL context\n        this.renderer.firstDraw = true;\n        this.renderer._bufferData = {\n            vertex: null,\n            uv: null,\n            index: null,\n        };\n        this.renderer.startUp(gl);\n        this.renderer._clippingManager._currentFrameNo = glContextID;\n        this.renderer._clippingManager._maskTexture = undefined;\n        CubismShader_WebGL.getInstance()._shaderSets = [];\n    }\n\n    bindTexture(index: number, texture: WebGLTexture): void {\n        this.renderer.bindTexture(index, texture);\n    }\n\n    protected getHitAreaDefs(): CommonHitArea[] {\n        return this.settings.hitAreas?.map(hitArea => ({\n            id: hitArea.Id,\n            name: hitArea.Name,\n            index: this.coreModel.getDrawableIndex(hitArea.Id),\n        })) ?? [];\n    }\n\n    getDrawableIDs(): string[] {\n        return this.coreModel.getDrawableIds();\n    }\n\n    getDrawableIndex(id: string): number {\n        return this.coreModel.getDrawableIndex(id);\n    }\n\n    getDrawableVertices(drawIndex: number | string): Float32Array {\n        if (typeof drawIndex === 'string') {\n            drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n\n            if (drawIndex === -1) throw new TypeError('Unable to find drawable ID: ' + drawIndex);\n        }\n\n        const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n\n        for (let i = 0; i < arr.length; i += 2) {\n            arr[i] = arr[i]! * this.pixelsPerUnit + this.originalWidth / 2;\n            arr[i + 1] = -arr[i + 1]! * this.pixelsPerUnit + this.originalHeight / 2;\n        }\n\n        return arr;\n    }\n\n    updateTransform(transform: Matrix) {\n        this.drawingMatrix\n            .copyFrom(this.centeringTransform)\n            .prepend(this.localTransform)\n            .prepend(transform);\n    }\n\n    public update(dt: DOMHighResTimeStamp, now: DOMHighResTimeStamp): void {\n        super.update(dt, now);\n\n        // cubism4 uses seconds\n        dt /= 1000;\n        now /= 1000;\n\n        const model = this.coreModel;\n\n        this.emit('beforeMotionUpdate');\n\n        const motionUpdated = this.motionManager.update(this.coreModel, now);\n\n        this.emit('afterMotionUpdate');\n\n        model.saveParameters();\n\n        this.motionManager.expressionManager?.update(model, now);\n\n        if (!motionUpdated) {\n            this.eyeBlink?.updateParameters(model, dt);\n        }\n\n        this.updateFocus();\n\n        // revert the timestamps to be milliseconds\n        this.updateNaturalMovements(dt * 1000, now * 1000);\n\n        // TODO: Add lip sync API\n        // if (this.lipSync) {\n        //     const value = 0; // 0 ~ 1\n        //\n        //     for (let i = 0; i < this.lipSyncIds.length; ++i) {\n        //         model.addParameterValueById(this.lipSyncIds[i], value, 0.8);\n        //     }\n        // }\n\n        this.physics?.evaluate(model, dt);\n        this.pose?.updateParameters(model, dt);\n\n        this.emit('beforeModelUpdate');\n\n        model.update();\n        model.loadParameters();\n    }\n\n    updateFocus() {\n        this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x); // -1 ~ 1\n        this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n        this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30); // -30 ~ 30\n        this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n        this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n        this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10); // -10 ~ 10\n    }\n\n    updateNaturalMovements(dt: DOMHighResTimeStamp, now: DOMHighResTimeStamp) {\n        this.breath?.updateParameters(this.coreModel, dt / 1000);\n    }\n\n    draw(gl: WebGLRenderingContext): void {\n        const matrix = this.drawingMatrix;\n        const array = tempMatrix.getArray();\n\n        // set given 3x3 matrix into a 4x4 matrix, with Y inverted\n        array[0] = matrix.a;\n        array[1] = matrix.b;\n        array[4] = -matrix.c;\n        array[5] = -matrix.d;\n        array[12] = matrix.tx;\n        array[13] = matrix.ty;\n\n        this.renderer.setMvpMatrix(tempMatrix);\n        this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n        this.renderer.drawModel();\n    }\n\n    destroy() {\n        super.destroy();\n\n        this.renderer.release();\n        this.coreModel.release();\n\n        (this as Partial<this>).renderer = undefined;\n        (this as Partial<this>).coreModel = undefined;\n    }\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * @brief パラメータIDのデフォルト値を保持する定数<br>\n *         デフォルト値の仕様は以下のマニュアルに基づく<br>\n *         https://docs.live2d.com/cubism-editor-manual/standard-parametor-list/\n */\n  // パーツID\nexport const HitAreaPrefix = 'HitArea';\nexport const HitAreaHead = 'Head';\nexport const HitAreaBody = 'Body';\nexport const PartsIdCore = 'Parts01Core';\nexport const PartsArmPrefix = 'Parts01Arm_';\nexport const PartsArmLPrefix = 'Parts01ArmL_';\nexport const PartsArmRPrefix = 'Parts01ArmR_';\n\n// パラメータID\nexport const ParamAngleX = 'ParamAngleX';\nexport const ParamAngleY = 'ParamAngleY';\nexport const ParamAngleZ = 'ParamAngleZ';\nexport const ParamEyeLOpen = 'ParamEyeLOpen';\nexport const ParamEyeLSmile = 'ParamEyeLSmile';\nexport const ParamEyeROpen = 'ParamEyeROpen';\nexport const ParamEyeRSmile = 'ParamEyeRSmile';\nexport const ParamEyeBallX = 'ParamEyeBallX';\nexport const ParamEyeBallY = 'ParamEyeBallY';\nexport const ParamEyeBallForm = 'ParamEyeBallForm';\nexport const ParamBrowLY = 'ParamBrowLY';\nexport const ParamBrowRY = 'ParamBrowRY';\nexport const ParamBrowLX = 'ParamBrowLX';\nexport const ParamBrowRX = 'ParamBrowRX';\nexport const ParamBrowLAngle = 'ParamBrowLAngle';\nexport const ParamBrowRAngle = 'ParamBrowRAngle';\nexport const ParamBrowLForm = 'ParamBrowLForm';\nexport const ParamBrowRForm = 'ParamBrowRForm';\nexport const ParamMouthForm = 'ParamMouthForm';\nexport const ParamMouthOpenY = 'ParamMouthOpenY';\nexport const ParamCheek = 'ParamCheek';\nexport const ParamBodyAngleX = 'ParamBodyAngleX';\nexport const ParamBodyAngleY = 'ParamBodyAngleY';\nexport const ParamBodyAngleZ = 'ParamBodyAngleZ';\nexport const ParamBreath = 'ParamBreath';\nexport const ParamArmLA = 'ParamArmLA';\nexport const ParamArmRA = 'ParamArmRA';\nexport const ParamArmLB = 'ParamArmLB';\nexport const ParamArmRB = 'ParamArmRB';\nexport const ParamHandL = 'ParamHandL';\nexport const ParamHandR = 'ParamHandR';\nexport const ParamHairFront = 'ParamHairFront';\nexport const ParamHairSide = 'ParamHairSide';\nexport const ParamHairBack = 'ParamHairBack';\nexport const ParamHairFluffy = 'ParamHairFluffy';\nexport const ParamShoulderY = 'ParamShoulderY';\nexport const ParamBustX = 'ParamBustX';\nexport const ParamBustY = 'ParamBustY';\nexport const ParamBaseX = 'ParamBaseX';\nexport const ParamBaseY = 'ParamBaseY';\nexport const ParamNONE = 'NONE:';\n","import { logger } from '@/utils';\nimport { CubismFramework, CubismStartupOption, LogLevel } from '@cubism/live2dcubismframework';\n\nlet startupPromise: Promise<void>;\nlet startupRetries = 20;\n\n/**\n * Promises the Cubism 4 runtime has been started up.\n * @return Promise that resolves if the startup has succeeded, rejects if failed.\n */\nexport function cubism4Ready(): Promise<void> {\n    if (CubismFramework.isStarted()) {\n        return Promise.resolve();\n    }\n\n    startupPromise ??= new Promise<void>(((resolve, reject) => {\n        function startUpWithRetry() {\n            try {\n                startUpCubism4();\n                resolve();\n            } catch (e) {\n                startupRetries--;\n\n                if (startupRetries < 0) {\n                    const err = new Error('Failed to start up Cubism 4 framework.');\n\n                    (err as any).cause = e;\n\n                    reject(err);\n                    return;\n                }\n\n                logger.log('Cubism4', 'Startup failed, retrying 10ms later...');\n\n                setTimeout(startUpWithRetry, 10);\n            }\n        }\n\n        startUpWithRetry();\n    }));\n\n    return startupPromise;\n}\n\n/**\n * Starts up the Cubism 4 runtime.\n */\nexport function startUpCubism4(options?: CubismStartupOption) {\n    options = Object.assign({\n        logFunction: console.log,\n        loggingLevel: LogLevel.LogLevel_Verbose,\n    }, options);\n\n    CubismFramework.startUp(options);\n    CubismFramework.initialize();\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from '../model/cubismmodel';\n\nconst Epsilon = 0.001;\nconst DefaultFadeInSeconds = 0.5;\n\n/**\n * パーツの不透明度の設定\n *\n * パーツの不透明度の管理と設定を行う。\n */\nexport class CubismPose {\n  /**\n   * インスタンスの作成\n   * @param pose3json pose3.jsonのデータ\n   * @return 作成されたインスタンス\n   */\n  public static create(pose3json: CubismSpec.PoseJSON): CubismPose {\n    const ret: CubismPose = new CubismPose();\n\n    // フェード時間の指定\n    if (typeof pose3json.FadeInTime === 'number') {\n      ret._fadeTimeSeconds = pose3json.FadeInTime;\n\n      if (ret._fadeTimeSeconds <= 0.0) {\n        ret._fadeTimeSeconds = DefaultFadeInSeconds;\n      }\n    }\n\n    // パーツグループ\n    const poseListInfo = pose3json.Groups;\n    const poseCount: number = poseListInfo.length;\n\n    for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n      const idListInfo = poseListInfo[poseIndex];\n      const idCount: number = idListInfo.length;\n      let groupCount = 0;\n\n      for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n        const partInfo = idListInfo[groupIndex];\n        const partData: PartData = new PartData();\n\n        partData.partId = partInfo.Id;\n\n        const linkListInfo = partInfo.Link;\n\n        // リンクするパーツの設定\n        if (linkListInfo) {\n          const linkCount: number = linkListInfo.length;\n\n          for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n            const linkPart: PartData = new PartData();\n\n            linkPart.partId = linkListInfo[linkIndex];\n\n            partData.link.push(linkPart);\n          }\n        }\n\n        ret._partGroups.push(partData);\n\n        ++groupCount;\n      }\n\n      ret._partGroupCounts.push(groupCount);\n    }\n\n    return ret;\n  }\n\n  /**\n   * モデルのパラメータの更新\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */\n  public updateParameters(\n    model: CubismModel,\n    deltaTimeSeconds: number,\n  ): void {\n    // 前回のモデルと同じでない場合は初期化が必要\n    if (model != this._lastModel) {\n      // パラメータインデックスの初期化\n      this.reset(model);\n    }\n\n    this._lastModel = model;\n\n    // 設定から時間を変更すると、経過時間がマイナスになる事があるので、経過時間0として対応\n    if (deltaTimeSeconds < 0.0) {\n      deltaTimeSeconds = 0.0;\n    }\n\n    let beginIndex = 0;\n\n    for (let i = 0; i < this._partGroupCounts.length; i++) {\n      const partGroupCount: number = this._partGroupCounts[i];\n\n      this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n\n      beginIndex += partGroupCount;\n    }\n\n    this.copyPartOpacities(model);\n  }\n\n  /**\n   * 表示を初期化\n   * @param model 対象のモデル\n   * @note 不透明度の初期値が0でないパラメータは、不透明度を１に設定する\n   */\n  public reset(model: CubismModel): void {\n    let beginIndex = 0;\n\n    for (let i = 0; i < this._partGroupCounts.length; ++i) {\n      const groupCount: number = this._partGroupCounts[i];\n\n      for (let j: number = beginIndex; j < beginIndex + groupCount; ++j) {\n        this._partGroups[j].initialize(model);\n\n        const partsIndex: number = this._partGroups[j].partIndex;\n        const paramIndex: number = this._partGroups[j].parameterIndex;\n\n        if (partsIndex < 0) {\n          continue;\n        }\n\n        model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1.0 : 0.0);\n        model.setParameterValueByIndex(\n          paramIndex,\n          j == beginIndex ? 1.0 : 0.0,\n        );\n\n        for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n          this._partGroups\n            [j]\n            .link[k]\n            .initialize(model);\n        }\n      }\n\n      beginIndex += groupCount;\n    }\n  }\n\n  /**\n   * パーツの不透明度をコピー\n   *\n   * @param model 対象のモデル\n   */\n  public copyPartOpacities(model: CubismModel): void {\n    for (\n      let groupIndex = 0;\n      groupIndex < this._partGroups.length;\n      ++groupIndex\n    ) {\n      const partData: PartData = this._partGroups[groupIndex];\n\n      if (partData.link.length == 0) {\n        continue; // 連動するパラメータはない\n      }\n\n      const partIndex: number = this._partGroups[groupIndex].partIndex;\n      const opacity: number = model.getPartOpacityByIndex(partIndex);\n\n      for (\n        let linkIndex = 0;\n        linkIndex < partData.link.length;\n        ++linkIndex\n      ) {\n        const linkPart: PartData = partData.link[linkIndex];\n        const linkPartIndex: number = linkPart.partIndex;\n\n        if (linkPartIndex < 0) {\n          continue;\n        }\n\n        model.setPartOpacityByIndex(linkPartIndex, opacity);\n      }\n    }\n  }\n\n  /**\n   * パーツのフェード操作を行う。\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   * @param beginIndex フェード操作を行うパーツグループの先頭インデックス\n   * @param partGroupCount フェード操作を行うパーツグループの個数\n   */\n  public doFade(\n    model: CubismModel,\n    deltaTimeSeconds: number,\n    beginIndex: number,\n    partGroupCount: number,\n  ): void {\n    let visiblePartIndex = -1;\n    let newOpacity = 1.0;\n\n    const phi = 0.5;\n    const backOpacityThreshold = 0.15;\n\n    // 現在、表示状態になっているパーツを取得\n    for (let i: number = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partIndex: number = this._partGroups[i].partIndex;\n      const paramIndex: number = this._partGroups[i].parameterIndex;\n\n      if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n        if (visiblePartIndex >= 0) {\n          break;\n        }\n\n        visiblePartIndex = i;\n        newOpacity = model.getPartOpacityByIndex(partIndex);\n\n        // 新しい不透明度を計算\n        newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n\n        if (newOpacity > 1.0) {\n          newOpacity = 1.0;\n        }\n      }\n    }\n\n    if (visiblePartIndex < 0) {\n      visiblePartIndex = 0;\n      newOpacity = 1.0;\n    }\n\n    // 表示パーツ、非表示パーツの不透明度を設定する\n    for (let i: number = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partsIndex: number = this._partGroups[i].partIndex;\n\n      // 表示パーツの設定\n      if (visiblePartIndex == i) {\n        model.setPartOpacityByIndex(partsIndex, newOpacity); // 先に設定\n      }\n      // 非表示パーツの設定\n      else {\n        let opacity: number = model.getPartOpacityByIndex(partsIndex);\n        let a1: number; // 計算によって求められる不透明度\n\n        if (newOpacity < phi) {\n          a1 = (newOpacity * (phi - 1)) / phi + 1.0; // (0,1),(phi,phi)を通る直線式\n        } else {\n          a1 = ((1 - newOpacity) * phi) / (1.0 - phi); // (1,0),(phi,phi)を通る直線式\n        }\n\n        // 背景の見える割合を制限する場合\n        const backOpacity: number = (1.0 - a1) * (1.0 - newOpacity);\n\n        if (backOpacity > backOpacityThreshold) {\n          a1 = 1.0 - backOpacityThreshold / (1.0 - newOpacity);\n        }\n\n        if (opacity > a1) {\n          opacity = a1; // 計算の不透明度よりも大きければ（濃ければ）不透明度を上げる\n        }\n\n        model.setPartOpacityByIndex(partsIndex, opacity);\n      }\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._fadeTimeSeconds = DefaultFadeInSeconds;\n    this._lastModel = undefined;\n    this._partGroups = [];\n    this._partGroupCounts = [];\n  }\n\n  _partGroups: PartData[]; // パーツグループ\n  _partGroupCounts: number[]; // それぞれのパーツグループの個数\n  _fadeTimeSeconds: number; // フェード時間[秒]\n  _lastModel?: CubismModel; // 前回操作したモデル\n}\n\n/**\n * パーツにまつわるデータを管理\n */\nexport class PartData {\n  /**\n   * コンストラクタ\n   */\n  constructor(v?: PartData) {\n    this.parameterIndex = 0;\n    this.partIndex = 0;\n    this.partId = '';\n    this.link = [];\n\n    if (v != undefined) {\n      this.assignment(v);\n    }\n  }\n\n  /**\n   * =演算子のオーバーロード\n   */\n  public assignment(v: PartData): PartData {\n    this.partId = v.partId;\n    this.link = v.link.map(link => link.clone());\n\n    return this;\n  }\n\n  /**\n   * 初期化\n   * @param model 初期化に使用するモデル\n   */\n  public initialize(model: CubismModel): void {\n    this.parameterIndex = model.getParameterIndex(this.partId);\n    this.partIndex = model.getPartIndex(this.partId);\n\n    model.setParameterValueByIndex(this.parameterIndex, 1);\n  }\n\n  /**\n   * オブジェクトのコピーを生成する\n   */\n  public clone(): PartData {\n    const clonePartData: PartData = new PartData();\n\n    clonePartData.partId = this.partId;\n    clonePartData.parameterIndex = this.parameterIndex;\n    clonePartData.partIndex = this.partIndex;\n    clonePartData.link = this.link.map(link => link.clone());\n\n    return clonePartData;\n  }\n\n  partId: string; // パーツID\n  parameterIndex: number; // パラメータのインデックス\n  partIndex: number; // パーツのインデックス\n  link: PartData[]; // 連動するパラメータ\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismBlendMode } from '../rendering/cubismrenderer';\nimport { CSM_ASSERT } from '../utils/cubismdebug';\n\n/**\n * モデル\n *\n * Mocデータから生成されるモデルのクラス。\n */\nexport class CubismModel {\n  /**\n   * モデルのパラメータの更新\n   */\n  public update(): void {\n    // Update model\n    this._model.update();\n\n    this._model.drawables.resetDynamicFlags();\n  }\n\n  /**\n   * キャンバスの幅を取得する\n   */\n  public getCanvasWidth(): number {\n    if (this._model == null) {\n      return 0.0;\n    }\n\n    return (\n      this._model.canvasinfo.CanvasWidth /\n      this._model.canvasinfo.PixelsPerUnit\n    );\n  }\n\n  /**\n   * キャンバスの高さを取得する\n   */\n  public getCanvasHeight(): number {\n    if (this._model == null) {\n      return 0.0;\n    }\n\n    return (\n      this._model.canvasinfo.CanvasHeight /\n      this._model.canvasinfo.PixelsPerUnit\n    );\n  }\n\n  /**\n   * パラメータを保存する\n   */\n  public saveParameters(): void {\n    const parameterCount: number = this._model.parameters.count;\n    const savedParameterCount: number = this._savedParameters.length;\n\n    for (let i = 0; i < parameterCount; ++i) {\n      if (i < savedParameterCount) {\n        this._savedParameters[i] = this._parameterValues[i];\n      } else {\n        this._savedParameters.push(this._parameterValues[i]);\n      }\n    }\n  }\n\n  /**\n   * モデルを取得\n   */\n  public getModel(): Live2DCubismCore.Model {\n    return this._model;\n  }\n\n  /**\n   * パーツのインデックスを取得\n   * @param partId パーツのID\n   * @return パーツのインデックス\n   */\n  public getPartIndex(partId: string): number {\n    let partIndex: number;\n    const partCount: number = this._model.parts.count;\n\n    for (partIndex = 0; partIndex < partCount; ++partIndex) {\n      if (partId == this._partIds[partIndex]) {\n        return partIndex;\n      }\n    }\n\n    // モデルに存在していない場合、非存在パーツIDリスト内にあるかを検索し、そのインデックスを返す\n    if (partId in this._notExistPartId) {\n      return this._notExistPartId[partId];\n    }\n\n    // 非存在パーツIDリストにない場合、新しく要素を追加する\n    partIndex = partCount + this._notExistPartId.length;\n    this._notExistPartId[partId] = partIndex;\n    this._notExistPartOpacities[partIndex] = 0;\n\n    return partIndex;\n  }\n\n  /**\n   * パーツの個数の取得\n   * @return パーツの個数\n   */\n  public getPartCount(): number {\n    return this._model.parts.count;\n  }\n\n  /**\n   * パーツの不透明度の設定(Index)\n   * @param partIndex パーツのインデックス\n   * @param opacity 不透明度\n   */\n  public setPartOpacityByIndex(partIndex: number, opacity: number): void {\n    if (partIndex in this._notExistPartOpacities) {\n      this._notExistPartOpacities[partIndex] = opacity;\n      return;\n    }\n\n    // インデックスの範囲内検知\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n\n    this._partOpacities[partIndex] = opacity;\n  }\n\n  /**\n   * パーツの不透明度の設定(Id)\n   * @param partId パーツのID\n   * @param opacity パーツの不透明度\n   */\n  public setPartOpacityById(partId: string, opacity: number): void {\n    // 高速化のためにPartIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\n    const index: number = this.getPartIndex(partId);\n\n    if (index < 0) {\n      return; // パーツがないのでスキップ\n    }\n\n    this.setPartOpacityByIndex(index, opacity);\n  }\n\n  /**\n   * パーツの不透明度の取得(index)\n   * @param partIndex パーツのインデックス\n   * @return パーツの不透明度\n   */\n  public getPartOpacityByIndex(partIndex: number): number {\n    if (partIndex in this._notExistPartOpacities) {\n      // モデルに存在しないパーツIDの場合、非存在パーツリストから不透明度を返す。\n      return this._notExistPartOpacities[partIndex];\n    }\n\n    // インデックスの範囲内検知\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n\n    return this._partOpacities[partIndex];\n  }\n\n  /**\n   * パーツの不透明度の取得(id)\n   * @param partId パーツのＩｄ\n   * @return パーツの不透明度\n   */\n  public getPartOpacityById(partId: string): number {\n    // 高速化のためにPartIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\n    const index: number = this.getPartIndex(partId);\n\n    if (index < 0) {\n      return 0; // パーツが無いのでスキップ\n    }\n\n    return this.getPartOpacityByIndex(index);\n  }\n\n  /**\n   * パラメータのインデックスの取得\n   * @param パラメータID\n   * @return パラメータのインデックス\n   */\n  public getParameterIndex(parameterId: string): number {\n    let parameterIndex: number;\n    const idCount: number = this._model.parameters.count;\n\n    for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n      if (parameterId != this._parameterIds[parameterIndex]) {\n        continue;\n      }\n\n      return parameterIndex;\n    }\n\n    // モデルに存在していない場合、非存在パラメータIDリスト内を検索し、そのインデックスを返す\n    if (parameterId in this._notExistParameterId) {\n      return this._notExistParameterId[parameterId];\n    }\n\n    // 非存在パラメータIDリストにない場合新しく要素を追加する\n    parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n\n    this._notExistParameterId[parameterId] = parameterIndex;\n    this._notExistParameterValues[parameterIndex] = 0;\n\n    return parameterIndex;\n  }\n\n  /**\n   * パラメータの個数の取得\n   * @return パラメータの個数\n   */\n  public getParameterCount(): number {\n    return this._model.parameters.count;\n  }\n\n  /**\n   * パラメータの最大値の取得\n   * @param parameterIndex パラメータのインデックス\n   * @return パラメータの最大値\n   */\n  public getParameterMaximumValue(parameterIndex: number): number {\n    return this._model.parameters.maximumValues[parameterIndex];\n  }\n\n  /**\n   * パラメータの最小値の取得\n   * @param parameterIndex パラメータのインデックス\n   * @return パラメータの最小値\n   */\n  public getParameterMinimumValue(parameterIndex: number): number {\n    return this._model.parameters.minimumValues[parameterIndex];\n  }\n\n  /**\n   * パラメータのデフォルト値の取得\n   * @param parameterIndex パラメータのインデックス\n   * @return パラメータのデフォルト値\n   */\n  public getParameterDefaultValue(parameterIndex: number): number {\n    return this._model.parameters.defaultValues[parameterIndex];\n  }\n\n  /**\n   * パラメータの値の取得\n   * @param parameterIndex    パラメータのインデックス\n   * @return パラメータの値\n   */\n  public getParameterValueByIndex(parameterIndex: number): number {\n    if (parameterIndex in this._notExistParameterValues) {\n      return this._notExistParameterValues[parameterIndex];\n    }\n\n    // インデックスの範囲内検知\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n\n    return this._parameterValues[parameterIndex];\n  }\n\n  /**\n   * パラメータの値の取得\n   * @param parameterId    パラメータのID\n   * @return パラメータの値\n   */\n  public getParameterValueById(parameterId: string): number {\n    // 高速化のためにparameterIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\n    const parameterIndex: number = this.getParameterIndex(parameterId);\n    return this.getParameterValueByIndex(parameterIndex);\n  }\n\n  /**\n   * パラメータの値の設定\n   * @param parameterIndex パラメータのインデックス\n   * @param value パラメータの値\n   * @param weight 重み\n   */\n  public setParameterValueByIndex(\n    parameterIndex: number,\n    value: number,\n    weight = 1.0,\n  ): void {\n    if (parameterIndex in this._notExistParameterValues) {\n      this._notExistParameterValues[parameterIndex] =\n        weight == 1\n          ? value\n          : this._notExistParameterValues[parameterIndex] *\n          (1 - weight) +\n          value * weight;\n\n      return;\n    }\n\n    // インデックスの範囲内検知\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n\n    if (this._model.parameters.maximumValues[parameterIndex] < value) {\n      value = this._model.parameters.maximumValues[parameterIndex];\n    }\n    if (this._model.parameters.minimumValues[parameterIndex] > value) {\n      value = this._model.parameters.minimumValues[parameterIndex];\n    }\n\n    this._parameterValues[parameterIndex] =\n      weight == 1\n        ? value\n        : (this._parameterValues[parameterIndex] =\n        this._parameterValues[parameterIndex] * (1 - weight) +\n        value * weight);\n  }\n\n  /**\n   * パラメータの値の設定\n   * @param parameterId パラメータのID\n   * @param value パラメータの値\n   * @param weight 重み\n   */\n  public setParameterValueById(\n    parameterId: string,\n    value: number,\n    weight = 1.0,\n  ): void {\n    const index: number = this.getParameterIndex(parameterId);\n    this.setParameterValueByIndex(index, value, weight);\n  }\n\n  /**\n   * パラメータの値の加算(index)\n   * @param parameterIndex パラメータインデックス\n   * @param value 加算する値\n   * @param weight 重み\n   */\n  public addParameterValueByIndex(\n    parameterIndex: number,\n    value: number,\n    weight = 1.0,\n  ): void {\n    this.setParameterValueByIndex(\n      parameterIndex,\n      this.getParameterValueByIndex(parameterIndex) + value * weight,\n    );\n  }\n\n  /**\n   * パラメータの値の加算(id)\n   * @param parameterId パラメータＩＤ\n   * @param value 加算する値\n   * @param weight 重み\n   */\n  public addParameterValueById(\n    parameterId: any,\n    value: number,\n    weight = 1.0,\n  ): void {\n    const index: number = this.getParameterIndex(parameterId);\n    this.addParameterValueByIndex(index, value, weight);\n  }\n\n  /**\n   * パラメータの値の乗算\n   * @param parameterId パラメータのID\n   * @param value 乗算する値\n   * @param weight 重み\n   */\n  public multiplyParameterValueById(\n    parameterId: string,\n    value: number,\n    weight = 1.0,\n  ): void {\n    const index: number = this.getParameterIndex(parameterId);\n    this.multiplyParameterValueByIndex(index, value, weight);\n  }\n\n  /**\n   * パラメータの値の乗算\n   * @param parameterIndex パラメータのインデックス\n   * @param value 乗算する値\n   * @param weight 重み\n   */\n  public multiplyParameterValueByIndex(\n    parameterIndex: number,\n    value: number,\n    weight = 1.0,\n  ): void {\n    this.setParameterValueByIndex(\n      parameterIndex,\n      this.getParameterValueByIndex(parameterIndex) *\n      (1.0 + (value - 1.0) * weight),\n    );\n  }\n\n  public getDrawableIds() {\n    return this._drawableIds.slice();\n  }\n\n  /**\n   * Drawableのインデックスの取得\n   * @param drawableId DrawableのID\n   * @return Drawableのインデックス\n   */\n  public getDrawableIndex(drawableId: string): number {\n    const drawableCount = this._model.drawables.count;\n\n    for (\n      let drawableIndex = 0;\n      drawableIndex < drawableCount;\n      ++drawableIndex\n    ) {\n      if (this._drawableIds[drawableIndex] == drawableId) {\n        return drawableIndex;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * Drawableの個数の取得\n   * @return drawableの個数\n   */\n  public getDrawableCount(): number {\n    return this._model.drawables.count;\n  }\n\n  /**\n   * DrawableのIDを取得する\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのID\n   */\n  public getDrawableId(drawableIndex: number): string {\n    return this._model.drawables.ids[drawableIndex];\n  }\n\n  /**\n   * Drawableの描画順リストの取得\n   * @return Drawableの描画順リスト\n   */\n  public getDrawableRenderOrders(): Int32Array {\n    return this._model.drawables.renderOrders;\n  }\n\n  /**\n   * Drawableのテクスチャインデックスリストの取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのテクスチャインデックスリスト\n   */\n  public getDrawableTextureIndices(drawableIndex: number): number {\n    return this._model.drawables.textureIndices[drawableIndex];\n  }\n\n  /**\n   * DrawableのVertexPositionsの変化情報の取得\n   *\n   * 直近のCubismModel.update関数でDrawableの頂点情報が変化したかを取得する。\n   *\n   * @param   drawableIndex   Drawableのインデックス\n   * @retval  true    Drawableの頂点情報が直近のCubismModel.update関数で変化した\n   * @retval  false   Drawableの頂点情報が直近のCubismModel.update関数で変化していない\n   */\n  public getDrawableDynamicFlagVertexPositionsDidChange(\n    drawableIndex: number,\n  ): boolean {\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(\n      dynamicFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * Drawableの頂点インデックスの個数の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点インデックスの個数\n   */\n  public getDrawableVertexIndexCount(drawableIndex: number): number {\n    return this._model.drawables.indexCounts[drawableIndex];\n  }\n\n  /**\n   * Drawableの頂点の個数の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点の個数\n   */\n  public getDrawableVertexCount(drawableIndex: number): number {\n    return this._model.drawables.vertexCounts[drawableIndex];\n  }\n\n  /**\n   * Drawableの頂点リストの取得\n   * @param drawableIndex drawableのインデックス\n   * @return drawableの頂点リスト\n   */\n  public getDrawableVertices(drawableIndex: number): Float32Array {\n    return this.getDrawableVertexPositions(drawableIndex);\n  }\n\n  /**\n   * Drawableの頂点インデックスリストの取得\n   * @param drarableIndex Drawableのインデックス\n   * @return drawableの頂点インデックスリスト\n   */\n  public getDrawableVertexIndices(drawableIndex: number): Uint16Array {\n    return this._model.drawables.indices[drawableIndex];\n  }\n\n  /**\n   * Drawableの頂点リストの取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点リスト\n   */\n  public getDrawableVertexPositions(drawableIndex: number): Float32Array {\n    return this._model.drawables.vertexPositions[drawableIndex];\n  }\n\n  /**\n   * Drawableの頂点のUVリストの取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの頂点UVリスト\n   */\n  public getDrawableVertexUvs(drawableIndex: number): Float32Array {\n    return this._model.drawables.vertexUvs[drawableIndex];\n  }\n\n  /**\n   * Drawableの不透明度の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableの不透明度\n   */\n  public getDrawableOpacity(drawableIndex: number): number {\n    return this._model.drawables.opacities[drawableIndex];\n  }\n\n  /**\n   * Drawableのカリング情報の取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのカリング情報\n   */\n  public getDrawableCulling(drawableIndex: number): boolean {\n    const constantFlags = this._model.drawables.constantFlags;\n\n    return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(\n      constantFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * Drawableのブレンドモードを取得\n   * @param drawableIndex Drawableのインデックス\n   * @return drawableのブレンドモード\n   */\n  public getDrawableBlendMode(drawableIndex: number): CubismBlendMode {\n    const constantFlags = this._model.drawables.constantFlags;\n\n    return Live2DCubismCore.Utils.hasBlendAdditiveBit(\n      constantFlags[drawableIndex],\n    )\n      ? CubismBlendMode.CubismBlendMode_Additive\n      : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(\n        constantFlags[drawableIndex],\n      )\n        ? CubismBlendMode.CubismBlendMode_Multiplicative\n        : CubismBlendMode.CubismBlendMode_Normal;\n  }\n\n  /**\n   * Drawableのマスクの反転使用の取得\n   *\n   * Drawableのマスク使用時の反転設定を取得する。\n   * マスクを使用しない場合は無視される。\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @return Drawableの反転設定\n   */\n  public getDrawableInvertedMaskBit(drawableIndex: number): boolean {\n    const constantFlags: Uint8Array = this._model.drawables.constantFlags;\n\n    return Live2DCubismCore.Utils.hasIsInvertedMaskBit(\n      constantFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * Drawableのクリッピングマスクリストの取得\n   * @return Drawableのクリッピングマスクリスト\n   */\n  public getDrawableMasks(): Int32Array[] {\n    return this._model.drawables.masks;\n  }\n\n  /**\n   * Drawableのクリッピングマスクの個数リストの取得\n   * @return Drawableのクリッピングマスクの個数リスト\n   */\n  public getDrawableMaskCounts(): Int32Array {\n    return this._model.drawables.maskCounts;\n  }\n\n  /**\n   * クリッピングマスクの使用状態\n   *\n   * @return true クリッピングマスクを使用している\n   * @return false クリッピングマスクを使用していない\n   */\n  public isUsingMasking(): boolean {\n    for (let d = 0; d < this._model.drawables.count; ++d) {\n      if (this._model.drawables.maskCounts[d] <= 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Drawableの表示情報を取得する\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @return true Drawableが表示\n   * @return false Drawableが非表示\n   */\n  public getDrawableDynamicFlagIsVisible(drawableIndex: number): boolean {\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasIsVisibleBit(\n      dynamicFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * DrawableのDrawOrderの変化情報の取得\n   *\n   * 直近のCubismModel.update関数でdrawableのdrawOrderが変化したかを取得する。\n   * drawOrderはartMesh上で指定する0から1000の情報\n   * @param drawableIndex drawableのインデックス\n   * @return true drawableの不透明度が直近のCubismModel.update関数で変化した\n   * @return false drawableの不透明度が直近のCubismModel.update関数で変化している\n   */\n  public getDrawableDynamicFlagVisibilityDidChange(\n    drawableIndex: number,\n  ): boolean {\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(\n      dynamicFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * Drawableの不透明度の変化情報の取得\n   *\n   * 直近のCubismModel.update関数でdrawableの不透明度が変化したかを取得する。\n   *\n   * @param drawableIndex drawableのインデックス\n   * @return true Drawableの不透明度が直近のCubismModel.update関数で変化した\n   * @return false Drawableの不透明度が直近のCubismModel.update関数で変化してない\n   */\n  public getDrawableDynamicFlagOpacityDidChange(\n    drawableIndex: number,\n  ): boolean {\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasOpacityDidChangeBit(\n      dynamicFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * Drawableの描画順序の変化情報の取得\n   *\n   * 直近のCubismModel.update関数でDrawableの描画の順序が変化したかを取得する。\n   *\n   * @param drawableIndex Drawableのインデックス\n   * @return true Drawableの描画の順序が直近のCubismModel.update関数で変化した\n   * @return false Drawableの描画の順序が直近のCubismModel.update関数で変化してない\n   */\n  public getDrawableDynamicFlagRenderOrderDidChange(\n    drawableIndex: number,\n  ): boolean {\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(\n      dynamicFlags[drawableIndex],\n    );\n  }\n\n  /**\n   * 保存されたパラメータの読み込み\n   */\n  public loadParameters(): void {\n    let parameterCount: number = this._model.parameters.count;\n    const savedParameterCount: number = this._savedParameters.length;\n\n    if (parameterCount > savedParameterCount) {\n      parameterCount = savedParameterCount;\n    }\n\n    for (let i = 0; i < parameterCount; ++i) {\n      this._parameterValues[i] = this._savedParameters[i];\n    }\n  }\n\n  /**\n   * 初期化する\n   */\n  public initialize(): void {\n    this._parameterValues = this._model.parameters.values;\n    this._partOpacities = this._model.parts.opacities;\n    this._parameterMaximumValues = this._model.parameters.maximumValues;\n    this._parameterMinimumValues = this._model.parameters.minimumValues;\n\n    {\n      const parameterIds: string[] = this._model.parameters.ids;\n      const parameterCount: number = this._model.parameters.count;\n\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterIds.push(parameterIds[i]);\n      }\n    }\n\n    {\n      const partIds: string[] = this._model.parts.ids;\n      const partCount: number = this._model.parts.count;\n\n      for (let i = 0; i < partCount; ++i) {\n        this._partIds.push(partIds[i]);\n      }\n    }\n\n    {\n      const drawableIds: string[] = this._model.drawables.ids;\n      const drawableCount: number = this._model.drawables.count;\n\n      for (let i = 0; i < drawableCount; ++i) {\n        this._drawableIds.push(drawableIds[i]);\n      }\n    }\n  }\n\n  /**\n   * コンストラクタ\n   * @param model モデル\n   */\n  public constructor(model: Live2DCubismCore.Model) {\n    this._model = model;\n    this._savedParameters = [];\n    this._parameterIds = [];\n    this._drawableIds = [];\n    this._partIds = [];\n\n    this._notExistPartId = {};\n    this._notExistParameterId = {};\n    this._notExistParameterValues = {};\n    this._notExistPartOpacities = {};\n\n    this.initialize();\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    this._model.release();\n    (this as any)._model = undefined;\n  }\n\n  private _notExistPartOpacities: Record<number, number>; // 存在していないパーツの不透明度のリスト\n  private _notExistPartId: Record<string, number>; // 存在していないパーツIDのリスト\n\n  private _notExistParameterValues: Record<number, number>; // 存在していないパラメータの値のリスト\n  private _notExistParameterId: Record<string, number>; // 存在していないパラメータIDのリスト\n\n  private _savedParameters: number[]; // 保存されたパラメータ\n\n  private _model: Live2DCubismCore.Model; // モデル\n\n  private _parameterValues!: Float32Array; // パラメータの値のリスト\n  private _parameterMaximumValues!: Float32Array; // パラメータの最大値のリスト\n  private _parameterMinimumValues!: Float32Array; // パラメータの最小値のリスト\n\n  private _partOpacities!: Float32Array; // パーツの不透明度のリスト\n\n  private _parameterIds: string[];\n  private _partIds: string[];\n  private _drawableIds: string[];\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from './cubismmodel';\n\n/**\n * Mocデータの管理\n *\n * Mocデータの管理を行うクラス。\n */\nexport class CubismMoc {\n  /**\n   * Mocデータの作成\n   */\n  public static create(mocBytes: ArrayBuffer): CubismMoc {\n    const moc: Live2DCubismCore.Moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n\n    if (moc) {\n      return new CubismMoc(moc);\n    }\n\n    throw new Error('Unknown error');\n  }\n\n  /**\n   * モデルを作成する\n   *\n   * @return Mocデータから作成されたモデル\n   */\n  createModel(): CubismModel {\n    let cubismModel: CubismModel;\n\n    const model: Live2DCubismCore.Model = Live2DCubismCore.Model.fromMoc(this._moc);\n\n    if (model) {\n      cubismModel = new CubismModel(model);\n\n      ++this._modelCount;\n\n      return cubismModel;\n    }\n\n    throw new Error('Unknown error');\n  }\n\n  /**\n   * モデルを削除する\n   */\n  deleteModel(model: CubismModel): void {\n    if (model != null) {\n      --this._modelCount;\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  private constructor(moc: Live2DCubismCore.Moc) {\n    this._moc = moc;\n    this._modelCount = 0;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    this._moc._release();\n    (this as Partial<this>)._moc = undefined;\n  }\n\n  _moc: Live2DCubismCore.Moc; // Mocデータ\n  _modelCount: number; // Mocデータから作られたモデルの個数\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismVector2 } from '../math/cubismvector2';\n\n/**\n * 物理演算の適用先の種類\n */\nexport enum CubismPhysicsTargetType {\n  CubismPhysicsTargetType_Parameter // パラメータに対して適用\n}\n\n/**\n * 物理演算の入力の種類\n */\nexport enum CubismPhysicsSource {\n  CubismPhysicsSource_X, // X軸の位置から\n  CubismPhysicsSource_Y, // Y軸の位置から\n  CubismPhysicsSource_Angle // 角度から\n}\n\n/**\n * @brief 物理演算で使用する外部の力\n *\n * 物理演算で使用する外部の力。\n */\nexport class PhysicsJsonEffectiveForces {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n\n  gravity: CubismVector2; // 重力\n  wind: CubismVector2; // 風\n}\n\n/**\n * 物理演算のパラメータ情報\n */\nexport interface CubismPhysicsParameter {\n  id: string; // パラメータ\n  targetType: CubismPhysicsTargetType; // 適用先の種類\n}\n\n/**\n * 物理演算の正規化情報\n */\nexport interface CubismPhysicsNormalization {\n  minimum: number; // 最大値\n  maximum: number; // 最小値\n  defalut: number; // デフォルト値\n}\n\n/**\n * 物理演算の演算委使用する物理点の情報\n */\nexport class CubismPhysicsParticle {\n  constructor() {\n    this.initialPosition = new CubismVector2(0, 0);\n    this.position = new CubismVector2(0, 0);\n    this.lastPosition = new CubismVector2(0, 0);\n    this.lastGravity = new CubismVector2(0, 0);\n    this.force = new CubismVector2(0, 0);\n    this.velocity = new CubismVector2(0, 0);\n  }\n\n  initialPosition: CubismVector2; // 初期位置\n  mobility!: number; // 動きやすさ\n  delay!: number; // 遅れ\n  acceleration!: number; // 加速度\n  radius!: number; // 距離\n  position: CubismVector2; // 現在の位置\n  lastPosition: CubismVector2; // 最後の位置\n  lastGravity: CubismVector2; // 最後の重力\n  force: CubismVector2; // 現在かかっている力\n  velocity: CubismVector2; // 現在の速度\n}\n\n/**\n * 物理演算の物理点の管理\n */\nexport class CubismPhysicsSubRig {\n  inputCount!: number; // 入力の個数\n  outputCount!: number; // 出力の個数\n  particleCount!: number; // 物理点の個数\n  baseInputIndex!: number; // 入力の最初のインデックス\n  baseOutputIndex!: number; // 出力の最初のインデックス\n  baseParticleIndex!: number; // 物理点の最初のインデックス\n  normalizationPosition: CubismPhysicsNormalization = {} as any; // 正規化された位置\n  normalizationAngle: CubismPhysicsNormalization = {} as any; // 正規化された角度\n}\n\n/**\n * 正規化されたパラメータの取得関数の宣言\n * @param targetTranslation     // 演算結果の移動値\n * @param targetAngle           // 演算結果の角度\n * @param value                 // パラメータの値\n * @param parameterMinimunValue // パラメータの最小値\n * @param parameterMaximumValue // パラメータの最大値\n * @param parameterDefaultValue // パラメータのデフォルト値\n * @param normalizationPosition // 正規化された位置\n * @param normalizationAngle    // 正規化された角度\n * @param isInverted            // 値が反転されているか？\n * @param weight                // 重み\n */\nexport interface normalizedPhysicsParameterValueGetter {\n  (\n    targetTranslation: CubismVector2,\n    targetAngle: { angle: number },\n    value: number,\n    parameterMinimunValue: number,\n    parameterMaximumValue: number,\n    parameterDefaultValue: number,\n    normalizationPosition: CubismPhysicsNormalization,\n    normalizationAngle: CubismPhysicsNormalization,\n    isInverted: boolean,\n    weight: number,\n  ): void;\n}\n\n/**\n * 物理演算の値の取得関数の宣言\n * @param translation 移動値\n * @param particles 物理点のリスト\n * @param isInverted 値が反映されているか\n * @param parentGravity 重力\n * @return 値\n */\nexport interface physicsValueGetter {\n  (\n    translation: CubismVector2,\n    particles: CubismPhysicsParticle[],\n    particleIndex: number,\n    isInverted: boolean,\n    parentGravity: CubismVector2,\n  ): number;\n}\n\n/**\n * 物理演算のスケールの取得関数の宣言\n * @param translationScale 移動値のスケール\n * @param angleScale    角度のスケール\n * @return スケール値\n */\nexport interface physicsScaleGetter {\n  (translationScale: CubismVector2, angleScale: number): number;\n}\n\n/**\n * 物理演算の入力情報\n */\nexport class CubismPhysicsInput {\n  source: CubismPhysicsParameter = {} as any; // 入力元のパラメータ\n  sourceParameterIndex!: number; // 入力元のパラメータのインデックス\n  weight!: number; // 重み\n  type!: number; // 入力の種類\n  reflect!: boolean; // 値が反転されているかどうか\n  getNormalizedParameterValue!: normalizedPhysicsParameterValueGetter; // 正規化されたパラメータ値の取得関数\n}\n\n/**\n * @brief 物理演算の出力情報\n *\n * 物理演算の出力情報。\n */\nexport class CubismPhysicsOutput {\n  destination: CubismPhysicsParameter = {} as any; // 出力先のパラメータ\n  destinationParameterIndex!: number; // 出力先のパラメータのインデックス\n  vertexIndex!: number; // 振り子のインデックス\n  translationScale = new CubismVector2(0, 0); // 移動値のスケール\n  angleScale!: number; // 角度のスケール\n  weight!: number; // 重み\n  type!: CubismPhysicsSource; // 出力の種類\n  reflect!: boolean; // 値が反転されているかどうか\n  valueBelowMinimum!: number; // 最小値を下回った時の値\n  valueExceededMaximum!: number; // 最大値をこえた時の値\n  getValue!: physicsValueGetter; // 物理演算の値の取得関数\n  getScale!: physicsScaleGetter; // 物理演算のスケール値の取得関数\n}\n\n/**\n * @brief 物理演算のデータ\n *\n * 物理演算のデータ。\n */\nexport class CubismPhysicsRig {\n  constructor() {\n    this.settings = [];\n    this.inputs = [];\n    this.outputs = [];\n    this.particles = [];\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n\n  subRigCount!: number; // 物理演算の物理点の個数\n  settings: CubismPhysicsSubRig[]; // 物理演算の物理点の管理のリスト\n  inputs: CubismPhysicsInput[]; // 物理演算の入力のリスト\n  outputs: CubismPhysicsOutput[]; // 物理演算の出力のリスト\n  particles: CubismPhysicsParticle[]; // 物理演算の物理点のリスト\n  gravity: CubismVector2; // 重力\n  wind: CubismVector2; // 風\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismVector2 } from '../math/cubismvector2';\n\n/**\n * physics3.jsonのコンテナ。\n */\nexport class CubismPhysicsJson {\n  /**\n   * コンストラクタ\n   * @param json physics3.jsonが読み込まれているバッファ\n   */\n  public constructor(json: CubismSpec.PhysicsJSON) {\n    this._json = json;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    (this as Partial<this>)._json = undefined;\n  }\n\n  /**\n   * 重力の取得\n   * @return 重力\n   */\n  public getGravity(): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n    ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n    return ret;\n  }\n\n  /**\n   * 風の取得\n   * @return 風\n   */\n  public getWind(): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Wind.X;\n    ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n    return ret;\n  }\n\n  /**\n   * 物理店の管理の個数の取得\n   * @return 物理店の管理の個数\n   */\n  public getSubRigCount(): number {\n    return this._json.Meta.PhysicsSettingCount;\n  }\n\n  /**\n   * 入力の総合計の取得\n   * @return 入力の総合計\n   */\n  public getTotalInputCount(): number {\n    return this._json.Meta.TotalInputCount;\n  }\n\n  /**\n   * 出力の総合計の取得\n   * @return 出力の総合計\n   */\n  public getTotalOutputCount(): number {\n    return this._json.Meta.TotalOutputCount;\n  }\n\n  /**\n   * 物理点の個数の取得\n   * @return 物理点の個数\n   */\n  public getVertexCount(): number {\n    return this._json.Meta.VertexCount;\n  }\n\n  /**\n   * 正規化された位置の最小値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された位置の最小値\n   */\n  public getNormalizationPositionMinimumValue(\n    physicsSettingIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n  }\n\n  /**\n   * 正規化された位置の最大値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された位置の最大値\n   */\n  public getNormalizationPositionMaximumValue(\n    physicsSettingIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n  }\n\n  /**\n   * 正規化された位置のデフォルト値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された位置のデフォルト値\n   */\n  public getNormalizationPositionDefaultValue(\n    physicsSettingIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n  }\n\n  /**\n   * 正規化された角度の最小値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された角度の最小値\n   */\n  public getNormalizationAngleMinimumValue(\n    physicsSettingIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n  }\n\n  /**\n   * 正規化された角度の最大値の取得\n   * @param physicsSettingIndex\n   * @return 正規化された角度の最大値\n   */\n  public getNormalizationAngleMaximumValue(\n    physicsSettingIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n  }\n\n  /**\n   * 正規化された角度のデフォルト値の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 正規化された角度のデフォルト値\n   */\n  public getNormalizationAngleDefaultValue(\n    physicsSettingIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n  }\n\n  /**\n   * 入力の個数の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 入力の個数\n   */\n  public getInputCount(physicsSettingIndex: number): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n  }\n\n  /**\n   * 入力の重みの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param inputIndex 入力のインデックス\n   * @return 入力の重み\n   */\n  public getInputWeight(\n    physicsSettingIndex: number,\n    inputIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n  }\n\n  /**\n   * 入力の反転の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param inputIndex 入力のインデックス\n   * @return 入力の反転\n   */\n  public getInputReflect(\n    physicsSettingIndex: number,\n    inputIndex: number,\n  ): boolean {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n  }\n\n  /**\n   * 入力の種類の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param inputIndex 入力のインデックス\n   * @return 入力の種類\n   */\n  public getInputType(\n    physicsSettingIndex: number,\n    inputIndex: number,\n  ): string {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n  }\n\n  /**\n   * 入力元のIDの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param inputIndex 入力のインデックス\n   * @return 入力元のID\n   */\n  public getInputSourceId(\n    physicsSettingIndex: number,\n    inputIndex: number,\n  ): string {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n  }\n\n  /**\n   * 出力の個数の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @return 出力の個数\n   */\n  public getOutputCount(physicsSettingIndex: number): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n  }\n\n  /**\n   * 出力の物理点のインデックスの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の物理点のインデックス\n   */\n  public getOutputVertexIndex(\n    physicsSettingIndex: number,\n    outputIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n  }\n\n  /**\n   * 出力の角度のスケールを取得する\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の角度のスケール\n   */\n  public getOutputAngleScale(\n    physicsSettingIndex: number,\n    outputIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n  }\n\n  /**\n   * 出力の重みの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の重み\n   */\n  public getOutputWeight(\n    physicsSettingIndex: number,\n    outputIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n  }\n\n  /**\n   * 出力先のIDの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力先のID\n   */\n  public getOutputDestinationId(\n    physicsSettingIndex: number,\n    outputIndex: number,\n  ): string {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n  }\n\n  /**\n   * 出力の種類の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の種類\n   */\n  public getOutputType(\n    physicsSettingIndex: number,\n    outputIndex: number,\n  ): string {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n  }\n\n  /**\n   * 出力の反転の取得\n   * @param physicsSettingIndex 物理演算のインデックス\n   * @param outputIndex 出力のインデックス\n   * @return 出力の反転\n   */\n  public getOutputReflect(\n    physicsSettingIndex: number,\n    outputIndex: number,\n  ): boolean {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n  }\n\n  /**\n   * 物理点の個数の取得\n   * @param physicsSettingIndex 物理演算男設定のインデックス\n   * @return 物理点の個数\n   */\n  public getParticleCount(physicsSettingIndex: number): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n  }\n\n  /**\n   * 物理点の動きやすさの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の動きやすさ\n   */\n  public getParticleMobility(\n    physicsSettingIndex: number,\n    vertexIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n  }\n\n  /**\n   * 物理点の遅れの取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の遅れ\n   */\n  public getParticleDelay(\n    physicsSettingIndex: number,\n    vertexIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n  }\n\n  /**\n   * 物理点の加速度の取得\n   * @param physicsSettingIndex 物理演算の設定\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の加速度\n   */\n  public getParticleAcceleration(\n    physicsSettingIndex: number,\n    vertexIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n  }\n\n  /**\n   * 物理点の距離の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の距離\n   */\n  public getParticleRadius(\n    physicsSettingIndex: number,\n    vertexIndex: number,\n  ): number {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n  }\n\n  /**\n   * 物理点の位置の取得\n   * @param physicsSettingIndex 物理演算の設定のインデックス\n   * @param vertexIndex 物理点のインデックス\n   * @return 物理点の位置\n   */\n  public getParticlePosition(\n    physicsSettingIndex: number,\n    vertexIndex: number,\n  ): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0, 0);\n    ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n    ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n    return ret;\n  }\n\n  _json: CubismSpec.PhysicsJSON; // physics3.jsonデータ\n}\n","/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismMath } from '../math/cubismmath';\nimport { CubismVector2 } from '../math/cubismvector2';\nimport { CubismModel } from '../model/cubismmodel';\nimport {\n  CubismPhysicsInput,\n  CubismPhysicsNormalization,\n  CubismPhysicsOutput,\n  CubismPhysicsParticle,\n  CubismPhysicsRig,\n  CubismPhysicsSource,\n  CubismPhysicsSubRig,\n  CubismPhysicsTargetType,\n} from './cubismphysicsinternal';\nimport { CubismPhysicsJson } from './cubismphysicsjson';\n\n// physics types tags.\nconst PhysicsTypeTagX = 'X';\nconst PhysicsTypeTagY = 'Y';\nconst PhysicsTypeTagAngle = 'Angle';\n\n// Constant of air resistance.\nconst AirResistance = 5.0;\n\n// Constant of maximum weight of input and output ratio.\nconst MaximumWeight = 100.0;\n\n// Constant of threshold of movement.\nconst MovementThreshold = 0.001;\n\n/**\n * 物理演算クラス\n */\nexport class CubismPhysics {\n  /**\n   * インスタンスの作成\n   * @param json    physics3.jsonが読み込まれているバッファ\n   * @return 作成されたインスタンス\n   */\n  public static create(json: CubismSpec.PhysicsJSON): CubismPhysics {\n    const ret: CubismPhysics = new CubismPhysics();\n\n    ret.parse(json);\n    ret._physicsRig.gravity.y = 0;\n\n    return ret;\n  }\n\n  /**\n   * 物理演算の評価\n   * @param model 物理演算の結果を適用するモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */\n  public evaluate(model: CubismModel, deltaTimeSeconds: number): void {\n    let totalAngle: { angle: number };\n    let weight: number;\n    let radAngle: number;\n    let outputValue: number;\n    const totalTranslation: CubismVector2 = new CubismVector2();\n    let currentSetting: CubismPhysicsSubRig;\n    let currentInput: CubismPhysicsInput[];\n    let currentOutput: CubismPhysicsOutput[];\n    let currentParticles: CubismPhysicsParticle[];\n\n    let parameterValue: Float32Array;\n    let parameterMaximumValue: Float32Array;\n    let parameterMinimumValue: Float32Array;\n    let parameterDefaultValue: Float32Array;\n\n    parameterValue = model.getModel().parameters.values;\n    parameterMaximumValue = model.getModel().parameters.maximumValues;\n    parameterMinimumValue = model.getModel().parameters.minimumValues;\n    parameterDefaultValue = model.getModel().parameters.defaultValues;\n\n    for (\n      let settingIndex = 0;\n      settingIndex < this._physicsRig.subRigCount;\n      ++settingIndex\n    ) {\n      totalAngle = { angle: 0.0 };\n      totalTranslation.x = 0.0;\n      totalTranslation.y = 0.0;\n      currentSetting = this._physicsRig.settings[settingIndex];\n      currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n      currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n      currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n\n      // Load input parameters\n      for (let i = 0; i < currentSetting.inputCount; ++i) {\n        weight = currentInput[i].weight / MaximumWeight;\n\n        if (currentInput[i].sourceParameterIndex == -1) {\n          currentInput[i].sourceParameterIndex = model.getParameterIndex(\n            currentInput[i].source.id,\n          );\n        }\n\n        currentInput[i].getNormalizedParameterValue(\n          totalTranslation,\n          totalAngle,\n          parameterValue[currentInput[i].sourceParameterIndex],\n          parameterMinimumValue[currentInput[i].sourceParameterIndex],\n          parameterMaximumValue[currentInput[i].sourceParameterIndex],\n          parameterDefaultValue[currentInput[i].sourceParameterIndex],\n          currentSetting.normalizationPosition,\n          currentSetting.normalizationAngle,\n          currentInput[i].reflect,\n          weight,\n        );\n      }\n\n      radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n\n      totalTranslation.x =\n        totalTranslation.x * CubismMath.cos(radAngle) -\n        totalTranslation.y * CubismMath.sin(radAngle);\n      totalTranslation.y =\n        totalTranslation.x * CubismMath.sin(radAngle) +\n        totalTranslation.y * CubismMath.cos(radAngle);\n\n      // Calculate particles position.\n      updateParticles(\n        currentParticles,\n        currentSetting.particleCount,\n        totalTranslation,\n        totalAngle.angle,\n        this._options.wind,\n        MovementThreshold * currentSetting.normalizationPosition.maximum,\n        deltaTimeSeconds,\n        AirResistance,\n      );\n\n      // Update output parameters.\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\n        const particleIndex = currentOutput[i].vertexIndex;\n\n        if (\n          particleIndex < 1 ||\n          particleIndex >= currentSetting.particleCount\n        ) {\n          break;\n        }\n\n        if (currentOutput[i].destinationParameterIndex == -1) {\n          currentOutput[\n            i\n            ].destinationParameterIndex = model.getParameterIndex(\n            currentOutput[i].destination.id,\n          );\n        }\n\n        const translation: CubismVector2 = new CubismVector2();\n        translation.x =\n          currentParticles[particleIndex].position.x -\n          currentParticles[particleIndex - 1].position.x;\n        translation.y =\n          currentParticles[particleIndex].position.y -\n          currentParticles[particleIndex - 1].position.y;\n\n        outputValue = currentOutput[i].getValue(\n          translation,\n          currentParticles,\n          particleIndex,\n          currentOutput[i].reflect,\n          this._options.gravity,\n        );\n\n        const destinationParameterIndex: number =\n          currentOutput[i].destinationParameterIndex;\n        const outParameterValue: Float32Array =\n          !Float32Array.prototype.slice &&\n          'subarray' in Float32Array.prototype\n            ? JSON.parse(\n            JSON.stringify(\n              parameterValue.subarray(destinationParameterIndex),\n            ),\n            ) // 値渡しするため、JSON.parse, JSON.stringify\n            : parameterValue.slice(destinationParameterIndex);\n\n        updateOutputParameterValue(\n          outParameterValue,\n          parameterMinimumValue[destinationParameterIndex],\n          parameterMaximumValue[destinationParameterIndex],\n          outputValue,\n          currentOutput[i],\n        );\n\n        // 値を反映\n        for (\n          let offset: number = destinationParameterIndex, outParamIndex = 0;\n          offset < parameterValue.length;\n          offset++, outParamIndex++\n        ) {\n          parameterValue[offset] = outParameterValue[outParamIndex];\n        }\n      }\n    }\n  }\n\n  /**\n   * オプションの設定\n   * @param options オプション\n   */\n  public setOptions(options: Options): void {\n    this._options = options;\n  }\n\n  /**\n   * オプションの取得\n   * @return オプション\n   */\n  public getOption(): Options {\n    return this._options;\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    // set default options\n    this._options = new Options();\n    this._options.gravity.y = -1.0;\n    this._options.gravity.x = 0;\n    this._options.wind.x = 0;\n    this._options.wind.y = 0;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    (this as Partial<this>)._physicsRig = undefined;\n  }\n\n  /**\n   * physics3.jsonをパースする。\n   * @param physicsJson physics3.jsonが読み込まれているバッファ\n   */\n  public parse(physicsJson: CubismSpec.PhysicsJSON): void {\n    this._physicsRig = new CubismPhysicsRig();\n\n    let json: CubismPhysicsJson = new CubismPhysicsJson(physicsJson);\n\n    this._physicsRig.gravity = json.getGravity();\n    this._physicsRig.wind = json.getWind();\n    this._physicsRig.subRigCount = json.getSubRigCount();\n\n    let inputIndex = 0,\n      outputIndex = 0,\n      particleIndex = 0;\n\n    for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n      const setting = new CubismPhysicsSubRig();\n\n      setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n      setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n      setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n      setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n      setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n      setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n\n      // Input\n      setting.inputCount = json.getInputCount(i);\n      setting.baseInputIndex = inputIndex;\n      inputIndex += setting.inputCount;\n\n      for (let j = 0; j < setting.inputCount; ++j) {\n        const input = new CubismPhysicsInput();\n\n        input.sourceParameterIndex = -1;\n        input.weight = json.getInputWeight(i, j);\n        input.reflect = json.getInputReflect(i, j);\n\n        switch (json.getInputType(i, j)) {\n          case PhysicsTypeTagX:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n            break;\n\n          case PhysicsTypeTagY:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n            break;\n\n          case PhysicsTypeTagAngle:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n            break;\n        }\n\n        input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        input.source.id = json.getInputSourceId(i, j);\n\n        this._physicsRig.inputs.push(input);\n      }\n\n      // Output\n      setting.outputCount = json.getOutputCount(i);\n      setting.baseOutputIndex = outputIndex;\n      outputIndex += setting.outputCount;\n\n      for (let j = 0; j < setting.outputCount; ++j) {\n        const output = new CubismPhysicsOutput();\n\n        output.destinationParameterIndex = -1;\n        output.vertexIndex = json.getOutputVertexIndex(i, j);\n        output.angleScale = json.getOutputAngleScale(i, j);\n        output.weight = json.getOutputWeight(i, j);\n        output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n\n        output.destination.id = json.getOutputDestinationId(i, j);\n\n        switch (json.getOutputType(i, j)) {\n          case PhysicsTypeTagX:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            output.getValue = getOutputTranslationX;\n            output.getScale = getOutputScaleTranslationX;\n            break;\n\n          case PhysicsTypeTagY:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            output.getValue = getOutputTranslationY;\n            output.getScale = getOutputScaleTranslationY;\n            break;\n\n          case PhysicsTypeTagAngle:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            output.getValue = getOutputAngle;\n            output.getScale = getOutputScaleAngle;\n            break;\n        }\n\n        output.reflect = json.getOutputReflect(i, j);\n\n        this._physicsRig.outputs.push(output);\n      }\n\n      // Particle\n      setting.particleCount = json.getParticleCount(i);\n      setting.baseParticleIndex = particleIndex;\n      particleIndex += setting.particleCount;\n\n      for (let j = 0; j < setting.particleCount; ++j) {\n        const particle = new CubismPhysicsParticle();\n\n        particle.mobility = json.getParticleMobility(i, j);\n        particle.delay = json.getParticleDelay(i, j);\n        particle.acceleration = json.getParticleAcceleration(i, j);\n        particle.radius = json.getParticleRadius(i, j);\n        particle.position = json.getParticlePosition(i, j);\n\n        this._physicsRig.particles.push(particle);\n      }\n\n      this._physicsRig.settings.push(setting);\n    }\n\n    this.initialize();\n\n    json.release();\n  }\n\n  /**\n   * 初期化する\n   */\n  public initialize(): void {\n    let strand: CubismPhysicsParticle[];\n    let currentSetting: CubismPhysicsSubRig;\n    let radius: CubismVector2;\n\n    for (\n      let settingIndex = 0;\n      settingIndex < this._physicsRig.subRigCount;\n      ++settingIndex\n    ) {\n      currentSetting = this._physicsRig.settings[settingIndex];\n      strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n\n      // Initialize the top of particle.\n      strand[0].initialPosition = new CubismVector2(0.0, 0.0);\n      strand[0].lastPosition = new CubismVector2(\n        strand[0].initialPosition.x,\n        strand[0].initialPosition.y,\n      );\n      strand[0].lastGravity = new CubismVector2(0.0, -1.0);\n      strand[0].lastGravity.y *= -1.0;\n      strand[0].velocity = new CubismVector2(0.0, 0.0);\n      strand[0].force = new CubismVector2(0.0, 0.0);\n\n      // Initialize paritcles.\n      for (let i = 1; i < currentSetting.particleCount; ++i) {\n        radius = new CubismVector2(0.0, 0.0);\n        radius.y = strand[i].radius;\n        strand[i].initialPosition = new CubismVector2(\n          strand[i - 1].initialPosition.x + radius.x,\n          strand[i - 1].initialPosition.y + radius.y,\n        );\n        strand[i].position = new CubismVector2(\n          strand[i].initialPosition.x,\n          strand[i].initialPosition.y,\n        );\n        strand[i].lastPosition = new CubismVector2(\n          strand[i].initialPosition.x,\n          strand[i].initialPosition.y,\n        );\n        strand[i].lastGravity = new CubismVector2(0.0, -1.0);\n        strand[i].lastGravity.y *= -1.0;\n        strand[i].velocity = new CubismVector2(0.0, 0.0);\n        strand[i].force = new CubismVector2(0.0, 0.0);\n      }\n    }\n  }\n\n  _physicsRig!: CubismPhysicsRig; // 物理演算のデータ\n  _options: Options; // オプション\n}\n\n/**\n * 物理演算のオプション\n */\nexport class Options {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n\n  gravity: CubismVector2; // 重力方向\n  wind: CubismVector2; // 風の方向\n}\n\nfunction getInputTranslationXFromNormalizedParameterValue(\n  targetTranslation: CubismVector2,\n  targetAngle: { angle: number },\n  value: number,\n  parameterMinimumValue: number,\n  parameterMaximumValue: number,\n  parameterDefaultValue: number,\n  normalizationPosition: CubismPhysicsNormalization,\n  normalizationAngle: CubismPhysicsNormalization,\n  isInverted: boolean,\n  weight: number,\n): void {\n  targetTranslation.x +=\n    normalizeParameterValue(\n      value,\n      parameterMinimumValue,\n      parameterMaximumValue,\n      parameterDefaultValue,\n      normalizationPosition.minimum,\n      normalizationPosition.maximum,\n      normalizationPosition.defalut,\n      isInverted,\n    ) * weight;\n}\n\nfunction getInputTranslationYFromNormalizedParamterValue(\n  targetTranslation: CubismVector2,\n  targetAngle: { angle: number },\n  value: number,\n  parameterMinimumValue: number,\n  parameterMaximumValue: number,\n  parameterDefaultValue: number,\n  normalizationPosition: CubismPhysicsNormalization,\n  normalizationAngle: CubismPhysicsNormalization,\n  isInverted: boolean,\n  weight: number,\n): void {\n  targetTranslation.y +=\n    normalizeParameterValue(\n      value,\n      parameterMinimumValue,\n      parameterMaximumValue,\n      parameterDefaultValue,\n      normalizationPosition.minimum,\n      normalizationPosition.maximum,\n      normalizationPosition.defalut,\n      isInverted,\n    ) * weight;\n}\n\nfunction getInputAngleFromNormalizedParameterValue(\n  targetTranslation: CubismVector2,\n  targetAngle: { angle: number },\n  value: number,\n  parameterMinimumValue: number,\n  parameterMaximumValue: number,\n  parameterDefaultValue: number,\n  normalizaitionPosition: CubismPhysicsNormalization,\n  normalizationAngle: CubismPhysicsNormalization,\n  isInverted: boolean,\n  weight: number,\n): void {\n  targetAngle.angle +=\n    normalizeParameterValue(\n      value,\n      parameterMinimumValue,\n      parameterMaximumValue,\n      parameterDefaultValue,\n      normalizationAngle.minimum,\n      normalizationAngle.maximum,\n      normalizationAngle.defalut,\n      isInverted,\n    ) * weight;\n}\n\nfunction getOutputTranslationX(\n  translation: CubismVector2,\n  particles: CubismPhysicsParticle[],\n  particleIndex: number,\n  isInverted: boolean,\n  parentGravity: CubismVector2,\n): number {\n  let outputValue: number = translation.x;\n\n  if (isInverted) {\n    outputValue *= -1.0;\n  }\n\n  return outputValue;\n}\n\nfunction getOutputTranslationY(\n  translation: CubismVector2,\n  particles: CubismPhysicsParticle[],\n  particleIndex: number,\n  isInverted: boolean,\n  parentGravity: CubismVector2,\n): number {\n  let outputValue: number = translation.y;\n\n  if (isInverted) {\n    outputValue *= -1.0;\n  }\n  return outputValue;\n}\n\nfunction getOutputAngle(\n  translation: CubismVector2,\n  particles: CubismPhysicsParticle[],\n  particleIndex: number,\n  isInverted: boolean,\n  parentGravity: CubismVector2,\n): number {\n  let outputValue: number;\n\n  if (particleIndex >= 2) {\n    parentGravity = particles[particleIndex - 1].position.substract(\n      particles[particleIndex - 2].position,\n    );\n  } else {\n    parentGravity = parentGravity.multiplyByScaler(-1.0);\n  }\n\n  outputValue = CubismMath.directionToRadian(parentGravity, translation);\n\n  if (isInverted) {\n    outputValue *= -1.0;\n  }\n\n  return outputValue;\n}\n\nfunction getRangeValue(min: number, max: number): number {\n  return Math.abs(Math.max(min, max) - Math.min(min, max));\n}\n\nfunction getDefaultValue(min: number, max: number): number {\n  const minValue: number = Math.min(min, max);\n  return minValue + getRangeValue(min, max) / 2.0;\n}\n\nfunction getOutputScaleTranslationX(\n  translationScale: CubismVector2,\n  angleScale: number,\n): number {\n  return translationScale.x;\n}\n\nfunction getOutputScaleTranslationY(\n  translationScale: CubismVector2,\n  angleScale: number,\n): number {\n  return translationScale.y;\n}\n\nfunction getOutputScaleAngle(\n  translationScale: CubismVector2,\n  angleScale: number,\n): number {\n  return angleScale;\n}\n\n/**\n * Updates particles.\n *\n * @param strand                Target array of particle.\n * @param strandCount           Count of particle.\n * @param totalTranslation      Total translation value.\n * @param totalAngle            Total angle.\n * @param windDirection         Direction of Wind.\n * @param thresholdValue        Threshold of movement.\n * @param deltaTimeSeconds      Delta time.\n * @param airResistance         Air resistance.\n */\nfunction updateParticles(\n  strand: CubismPhysicsParticle[],\n  strandCount: number,\n  totalTranslation: CubismVector2,\n  totalAngle: number,\n  windDirection: CubismVector2,\n  thresholdValue: number,\n  deltaTimeSeconds: number,\n  airResistance: number,\n) {\n  let totalRadian: number;\n  let delay: number;\n  let radian: number;\n  let currentGravity: CubismVector2;\n  let direction: CubismVector2 = new CubismVector2(0.0, 0.0);\n  let velocity: CubismVector2 = new CubismVector2(0.0, 0.0);\n  let force: CubismVector2 = new CubismVector2(0.0, 0.0);\n  let newDirection: CubismVector2 = new CubismVector2(0.0, 0.0);\n\n  strand[0].position = new CubismVector2(\n    totalTranslation.x,\n    totalTranslation.y,\n  );\n\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\n  currentGravity = CubismMath.radianToDirection(totalRadian);\n  currentGravity.normalize();\n\n  for (let i = 1; i < strandCount; ++i) {\n    strand[i].force = currentGravity\n      .multiplyByScaler(strand[i].acceleration)\n      .add(windDirection);\n\n    strand[i].lastPosition = new CubismVector2(\n      strand[i].position.x,\n      strand[i].position.y,\n    );\n\n    delay = strand[i].delay * deltaTimeSeconds * 30.0;\n\n    direction = strand[i].position.substract(strand[i - 1].position);\n\n    radian =\n      CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) /\n      airResistance;\n\n    direction.x =\n      CubismMath.cos(radian) * direction.x -\n      direction.y * CubismMath.sin(radian);\n    direction.y =\n      CubismMath.sin(radian) * direction.x +\n      direction.y * CubismMath.cos(radian);\n\n    strand[i].position = strand[i - 1].position.add(direction);\n\n    velocity = strand[i].velocity.multiplyByScaler(delay);\n    force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n\n    strand[i].position = strand[i].position.add(velocity).add(force);\n\n    newDirection = strand[i].position.substract(strand[i - 1].position);\n    newDirection.normalize();\n\n    strand[i].position = strand[i - 1].position.add(\n      newDirection.multiplyByScaler(strand[i].radius),\n    );\n\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n      strand[i].position.x = 0.0;\n    }\n\n    if (delay != 0.0) {\n      strand[i].velocity = strand[i].position.substract(\n        strand[i].lastPosition,\n      );\n      strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n      strand[i].velocity = strand[i].velocity.multiplyByScaler(\n        strand[i].mobility,\n      );\n    }\n\n    strand[i].force = new CubismVector2(0.0, 0.0);\n    strand[i].lastGravity = new CubismVector2(\n      currentGravity.x,\n      currentGravity.y,\n    );\n  }\n}\n\n/**\n * Updates output parameter value.\n * @param parameterValue            Target parameter value.\n * @param parameterValueMinimum     Minimum of parameter value.\n * @param parameterValueMaximum     Maximum of parameter value.\n * @param translation               Translation value.\n */\nfunction updateOutputParameterValue(\n  parameterValue: Float32Array,\n  parameterValueMinimum: number,\n  parameterValueMaximum: number,\n  translation: number,\n  output: CubismPhysicsOutput,\n): void {\n  let outputScale: number;\n  let value: number;\n  let weight: number;\n\n  outputScale = output.getScale(output.translationScale, output.angleScale);\n\n  value = translation * outputScale;\n\n  if (value < parameterValueMinimum) {\n    if (value < output.valueBelowMinimum) {\n      output.valueBelowMinimum = value;\n    }\n\n    value = parameterValueMinimum;\n  } else if (value > parameterValueMaximum) {\n    if (value > output.valueExceededMaximum) {\n      output.valueExceededMaximum = value;\n    }\n\n    value = parameterValueMaximum;\n  }\n\n  weight = output.weight / MaximumWeight;\n\n  if (weight >= 1.0) {\n    parameterValue[0] = value;\n  } else {\n    value = parameterValue[0] * (1.0 - weight) + value * weight;\n    parameterValue[0] = value;\n  }\n}\n\nfunction normalizeParameterValue(\n  value: number,\n  parameterMinimum: number,\n  parameterMaximum: number,\n  parameterDefault: number,\n  normalizedMinimum: number,\n  normalizedMaximum: number,\n  normalizedDefault: number,\n  isInverted: boolean,\n) {\n  let result = 0.0;\n\n  const maxValue: number = CubismMath.max(parameterMaximum, parameterMinimum);\n\n  if (maxValue < value) {\n    value = maxValue;\n  }\n\n  const minValue: number = CubismMath.min(parameterMaximum, parameterMinimum);\n\n  if (minValue > value) {\n    value = minValue;\n  }\n\n  const minNormValue: number = CubismMath.min(\n    normalizedMinimum,\n    normalizedMaximum,\n  );\n  const maxNormValue: number = CubismMath.max(\n    normalizedMinimum,\n    normalizedMaximum,\n  );\n  const middleNormValue: number = normalizedDefault;\n\n  const middleValue: number = getDefaultValue(minValue, maxValue);\n  const paramValue: number = value - middleValue;\n\n  switch (Math.sign(paramValue)) {\n    case 1: {\n      const nLength: number = maxNormValue - middleNormValue;\n      const pLength: number = maxValue - middleValue;\n\n      if (pLength != 0.0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n\n      break;\n    }\n    case -1: {\n      const nLength: number = minNormValue - middleNormValue;\n      const pLength: number = minValue - middleValue;\n\n      if (pLength != 0.0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n\n      break;\n    }\n    case 0: {\n      result = middleNormValue;\n\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  return isInverted ? result : result * -1.0;\n}\n","import { Cubism4InternalModel } from '@/cubism4/Cubism4InternalModel';\nimport { Cubism4ModelSettings } from '@/cubism4/Cubism4ModelSettings';\nimport { cubism4Ready } from '@/cubism4/setup';\nimport { Live2DFactory, Live2DFactoryOptions } from '@/factory/Live2DFactory';\nimport { CubismPose } from '@cubism/effect/cubismpose';\nimport { CubismMoc } from '@cubism/model/cubismmoc';\nimport { CubismModel } from '@cubism/model/cubismmodel';\nimport { CubismPhysics } from '@cubism/physics/cubismphysics';\nimport { config } from '@/config';\nimport { config as cubism4Config } from '@cubism/config';\n\nconfig.cubism4 = cubism4Config;\n\nLive2DFactory.registerRuntime({\n    version: 4,\n\n    ready: cubism4Ready,\n\n    test(source: any): boolean {\n        return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n    },\n\n    isValidMoc(modelData: ArrayBuffer): boolean {\n        if (modelData.byteLength < 4) {\n            return false;\n        }\n\n        const view = new Int8Array(modelData, 0, 4);\n\n        return String.fromCharCode(...view) === 'MOC3';\n    },\n\n    createModelSettings(json: object): Cubism4ModelSettings {\n        return new Cubism4ModelSettings(json as CubismSpec.ModelJSON & { url: string });\n    },\n\n    createCoreModel(data: ArrayBuffer): CubismModel {\n        const moc = CubismMoc.create(data);\n\n        try {\n            const model = moc.createModel();\n\n            // store the moc instance so we can reference it later\n            (model as any).__moc = moc;\n\n            return model;\n        } catch (e) {\n            try {\n                moc.release();\n            } catch (ignored) {\n            }\n\n            throw e;\n        }\n    },\n\n    createInternalModel(coreModel: CubismModel, settings: Cubism4ModelSettings, options?: Live2DFactoryOptions): Cubism4InternalModel {\n        const model = new Cubism4InternalModel(coreModel, settings, options);\n\n        const coreModelWithMoc = coreModel as { __moc?: CubismMoc };\n\n        if (coreModelWithMoc.__moc) {\n            // transfer the moc to InternalModel, because the coreModel will\n            // probably have been set to undefined when we receive the \"destroy\" event\n            (model as any).__moc = coreModelWithMoc.__moc;\n\n            delete coreModelWithMoc.__moc;\n\n            // release the moc when destroying\n            model.once('destroy', releaseMoc);\n        }\n\n        return model;\n    },\n\n    createPhysics(coreModel: CubismModel, data: any): CubismPhysics {\n        return CubismPhysics.create(data);\n    },\n\n    createPose(coreModel: CubismModel, data: any): CubismPose {\n        return CubismPose.create(data);\n    },\n});\n\nfunction releaseMoc(this: Cubism4InternalModel) {\n    ((this as any).__moc as CubismMoc | undefined)?.release();\n}\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__5072__","__WEBPACK_EXTERNAL_MODULE__4893__","__WEBPACK_EXTERNAL_MODULE__8704__","__WEBPACK_EXTERNAL_MODULE__8623__","__WEBPACK_EXTERNAL_MODULE__5417__","__WEBPACK_EXTERNAL_MODULE__5888__","DataView","getNative","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","entries","index","length","this","clear","entry","set","prototype","get","has","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","Promise","Set","setCacheAdd","setCacheHas","SetCache","values","__data__","add","push","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","data","size","Symbol","Uint8Array","WeakMap","func","thisArg","args","call","apply","array","predicate","resIndex","result","value","baseTimes","isArguments","isArray","isBuffer","isIndex","isTypedArray","hasOwnProperty","Object","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","key","iteratee","Array","offset","eq","defineProperty","object","fromIndex","fromRight","baseFor","createBaseFor","keys","castPath","toKey","path","undefined","arrayPush","keysFunc","symbolsFunc","getRawTag","objectToString","symToStringTag","toStringTag","baseFindIndex","baseIsNaN","strictIndexOf","comparator","baseGetTag","isObjectLike","baseIsEqualDeep","baseIsEqual","other","bitmask","customizer","stack","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","source","matchData","noCustomizer","objValue","srcValue","COMPARE_PARTIAL_FLAG","isFunction","isMasked","isObject","toSource","reIsHostCtor","funcProto","Function","objectProto","funcToString","toString","reIsNative","RegExp","replace","test","isLength","typedArrayTags","baseMatches","baseMatchesProperty","identity","property","isPrototype","nativeKeys","baseIsMatch","getMatchData","matchesStrictComparable","hasIn","isKey","isStrictComparable","baseGet","arrayMap","baseIndexOf","baseIndexOfWith","baseUnary","copyArray","splice","indexOf","seen","computed","overRest","setToString","start","constant","baseSetToString","string","n","isSymbol","symbolProto","symbolToString","baseToString","cache","stringToPath","coreJsData","iterable","props","e","arraySome","cacheHas","isPartial","arrLength","othLength","arrStacked","othStacked","arrValue","othValue","compared","othIndex","mapToArray","setToArray","symbolValueOf","valueOf","tag","byteLength","byteOffset","buffer","name","message","convert","stacked","getAllKeys","objProps","objLength","objStacked","skipCtor","objCtor","constructor","othCtor","freeGlobal","g","baseGetAllKeys","getSymbols","isKeyable","map","baseIsNative","getValue","nativeObjectToString","isOwn","unmasked","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","symbol","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","resolve","Ctor","ctorString","hasFunc","nativeCreate","reIsUint","type","reIsDeepProp","reIsPlainProp","uid","maskSrcKey","exec","IE_PROTO","assocIndexOf","pop","getMapData","forEach","memoize","overArg","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","binding","transform","arg","nativeMax","Math","max","arguments","otherArgs","freeSelf","shortOut","nativeNow","Date","now","count","lastCalled","stamp","remaining","pairs","LARGE_ARRAY_SIZE","memoizeCapped","rePropName","reEscapeChar","charCodeAt","match","number","quote","subString","defaultValue","baseHasIn","hasPath","baseIsArguments","stubFalse","Buffer","baseIsTypedArray","nodeIsTypedArray","arrayLikeKeys","baseKeys","isArrayLike","baseAssignValue","baseForOwn","baseIteratee","resolver","TypeError","memoized","Cache","baseProperty","basePropertyDeep","pull","baseRest","basePullAll","window","Live2D","Error","originalUpdateParam","Live2DMotion","updateParam","model","isFinished","onFinishHandler","Live2DCubismCore","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","d","a","definition","o","enumerable","globalThis","obj","prop","r","nmd","paths","children","LOGICAL_WIDTH","LOGICAL_HEIGHT","config","LOG_LEVEL_VERBOSE","LOG_LEVEL_WARNING","LOG_LEVEL_ERROR","LOG_LEVEL_NONE","logLevel","sound","motionSync","motionFadingDuration","idleMotionFadingDuration","expressionFadingDuration","VERSION","logger","clamp","num","lower","upper","rand","min","random","copyProperty","from","to","fromKey","filter","item","applyMixins","derivedCtor","baseCtors","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","folderName","url","lastSlashIndex","lastIndexOf","slice","log","messages","console","warn","error","MotionPriority","ExpressionManager","EventEmitter","settings","options","super","expressions","reserveExpressionIndex","destroyed","init","defaultExpression","createExpression","currentExpression","stopAllExpressions","loadExpression","definitions","expression","_loadExpression","setRandomExpression","availableIndices","i","floor","setExpression","resetExpression","_setExpression","restoreExpression","getExpressionIndex","update","updateParameters","destroy","emit","FocusController","targetX","targetY","x","y","vx","vy","focus","instant","dt","dx","dy","abs","sqrt","maxSpeed","ax","ay","maxA","v","maxV","ModelSettings","json","resolveURL","replaceFiles","replacer","moc","pose","physics","textures","getDefinedFiles","files","file","validateFiles","assertFileExists","expectedFile","shouldThrow","actualPath","includes","texture","MotionState","debug","currentPriority","NONE","reservePriority","reserve","group","priority","currentGroup","currentIndex","dump","reservedGroup","reservedIndex","reservedIdleGroup","reservedIdleIndex","IDLE","setReservedIdle","FORCE","setReserved","motion","setCurrent","complete","isActive","reset","shouldRequestIdleMotion","shouldOverrideExpression","requestedGroup","requestedIndex","join","SoundManager","volume","_volume","audios","audio","static","onFinish","onError","Audio","preload","addEventListener","dispose","reject","play","catch","dispatchEvent","ErrorEvent","readyState","HAVE_ENOUGH_DATA","pause","removeAttribute","MotionPreloadStrategy","MotionManager","motionGroups","state","playing","idleMotionGroup","groups","idle","setupMotions","stopAllMotions","motionPreload","ALL","loadMotion","then","_loadMotion","startMotion","NORMAL","currentAudio","soundURL","getSoundFile","readyToPlay","src","getMotionName","expressionManager","_startMotion","startRandomMotion","groupDefs","_stopAllMotions","tempBounds","width","height","InternalModel","focusController","originalWidth","originalHeight","localTransform","Matrix","drawingMatrix","hitAreas","textureFlipY","viewport","setupLayout","setupHitAreas","getSize","layout","assign","getLayout","scale","offsetX","centerX","left","right","offsetY","centerY","top","bottom","translate","getHitAreaDefs","hitArea","def","hitTest","hitAreaName","isHit","drawIndex","bounds","getDrawableBounds","vertices","getDrawableVertices","updateTransform","copyFrom","append","motionManager","NetworkError","status","aborted","XHRLoader","target","onload","onerror","xhr","XMLHttpRequest","allXhrSet","xhrSet","xhrMap","listeners","cancelXHRs","once","open","responseType","response","onabort","onloadend","delete","abort","runMiddlewares","middleware","context","dispatch","err","fn","bind","loader","next","createXHR","send","Live2DLoader","middlewares","urlToJSON","load","live2dModel","jsonToSettings","runtime","Live2DFactory","findRuntime","createModelSettings","waitUntilReady","ready","setupOptionals","internalModel","tasks","createPose","coreModel","createPhysics","all","setupEssentials","live2DModel","textureLoadings","tex","textureOptions","resourceOptions","crossorigin","crossOrigin","Texture","event","autoLoad","baseTexture","valid","resource","_live2d_load","errorHandler","removeEventListener","createTexture","createInternalModel","modelData","isValidMoc","createCoreModel","runtimes","sort","b","version","textureLoaded","modelLoaded","readyEventEmitted","live2DModelMiddlewares","handleError","releaseTasks","motionTasksMap","taskGroup","getMotionFile","motionDataType","createMotion","expressionTasksMap","getExpressionFile","InteractionMixin","_autoInteract","autoInteract","on","onTap","off","registerInteraction","manager","interactionManager","unregisterInteraction","onPointerMove","tap","global","Live2DTransform","Transform","tempPoint","Point","tempMatrix","TickerClass","PIXI","Ticker","Live2DModel","Container","anchor","ObservablePoint","onAnchorChange","glContextID","elapsedTime","performance","deltaTime","_autoUpdate","setupLive2DModel","onLoad","tickerClass","autoUpdate","_destroyed","shared","onTickerUpdate","remove","_options","interactive","pivot","toModelPosition","hitAreaNames","position","clone","skipUpdate","_recursivePostUpdateTransform","parent","displayObjectUpdateTransform","_tempDisplayObjectParent","worldTransform","applyInverse","containsPoint","point","getBounds","contains","_calculateBounds","_bounds","addFrame","deltaMS","_render","renderer","plugins","interaction","batch","geometry","shader","shouldUpdateTexture","CONTEXT_UID","updateWebGLContext","gl","_glTextures","pixelStorei","WebGLRenderingContext","UNPACK_FLIP_Y_WEBGL","bindTexture","touched","textureGC","framebuffer","internalTransform","globalUniforms","uniforms","projectionMatrix","draw","FileLoader","settingsURL","filePath","resolved","filesMap","fileMap","definedFile","decodeURI","actualFile","find","webkitRelativePath","URL","createObjectURL","_objectURL","settingsFile","endsWith","settingsText","readText","settingsJSON","JSON","parse","reader","FileReader","readAsText","File","createSettings","encodeURI","upload","objectURL","revokeObjectURL","resourceObjectURL","unshift","ZipLoader","filePaths","getFilePaths","requiredFilePaths","getFiles","settingsFilePath","ZIP_PROTOCOL","sourceURL","zipBlob","startsWith","zipReader","unzip","releaseReader","Rectangle","HitAreaFrames","Graphics","initialized","texts","strokeWidth","normalColor","activeColor","textStyle","TextStyle","fontSize","fill","stroke","strokeThickness","text","Text","visible","addChild","lineStyle","color","tx","ty","drawRect","EyeState","Live2DExpression","AMotion","params","setFadeIn","fade_in","setFadeOut","fade_out","param","calc","val","updateParamExe","time","weight","motionQueueEnt","setParamFloat","Cubism2ExpressionManager","queueManager","MotionQueueManager","findIndex","Cubism2MotionManager","motions","defaultFadingDuration","Live2DEyeBlink","blinkInterval","closingDuration","closedDuration","openingDuration","eyeState","Idle","eyeParamValue","closedTimer","nextBlinkTimeLeft","leftParam","getParamIndex","rightParam","setEyeParams","Closing","Closed","Opening","tempMatrixArray","Float32Array","Cubism2InternalModel","drawDataCount","disableCulling","eyeBlink","eyeballXParamIndex","eyeballYParamIndex","angleXParamIndex","angleYParamIndex","angleZParamIndex","bodyAngleXParamIndex","breathParamIndex","initParams","initOpacities","setPartsOpacity","saveParam","arr","getModelContext","_$aS","culling","drawParamWebGL","clipManager","originalSetupClip","setupClip","modelContext","drawParam","getCanvasWidth","getCanvasHeight","center_x","center_y","firstDraw","setGL","glno","WebGLBuffer","curFrameNo","getParameter","FRAMEBUFFER_BINDING","getMaskRenderTexture","bindFramebuffer","FRAMEBUFFER","setTexture","getDrawDataIndex","getDrawableIDs","ids","drawData","getDrawData","getDrawDataID","getDrawableIndex","getTransformedPoints","motionUpdated","updateFocus","updateNaturalMovements","loadParam","addToParamFloat","t","PI","sin","matrix","c","setMatrix","Cubism2ModelSettings","isValidJSON","copy","every","SRC_TYPE_MAP","PhysicsHair","Src","SRC_TO_X","SRC_TO_Y","angle","SRC_TO_G_ANGLE","TARGET_TYPE_MAP","Live2DPhysics","physicsHairs","physics_hair","physicsHair","setup","regist","mass","ptype","addSrcParam","targets","addTargetParam","elapsed","Live2DPartsParam","paramIndex","partsIndex","link","initIndex","getPartsDataIndex","PartsDataID","getID","Live2DPose","opacityAnimDuration","partsGroups","parts_visible","parts","l","getParamFloat","p","normalizePartsOpacityGroup","partsGroup","visibleOpacity","visibleIndex","originalOpacity","getPartsOpacity","a1","opacity","copyOpacity","partGroup","CubismBlendMode","registerRuntime","view","Int8Array","fromCharCode","Live2DModelWebGL","loadModel","getError","vector2","ret","substract","multiply","multiplyByScaler","scalar","division","divisionByScalar","getLength","getDistanceWith","dot","normalize","pow","isEqual","rhs","isNotEqual","CubismMath","cos","degrees","radian","atan2","directionToRadian","degree","radianToDegrees","totalAngle","CubismMatrix44","_tr","loadIdentity","dst","j","k","tr","getArray","getScaleX","getScaleY","getTranslateX","getTranslateY","transformX","transformY","invertTransformX","invertTransformY","translateRelative","tr1","translateX","translateY","scaleRelative","multiplyByMatrix","m","cloneMatrix","CubismRenderer","_isCulling","_isPremultipliedAlpha","_anisortopy","_modelColor","CubismTextureColor","_mvpMatrix4x4","initialize","_model","drawModel","getModel","doDrawModel","setMvpMatrix","matrix44","getMvpMatrix","setModelColor","red","green","blue","alpha","R","G","B","A","getModelColor","setIsPremultipliedAlpha","enable","isPremultipliedAlpha","setIsCulling","isCulling","setAnisotropy","getAnisotropy","s_option","s_isStarted","s_isInitialized","Constant","LogLevel","vertexOffset","vertexStep","CubismFramework","option","CubismLogInfo","_isStarted","Logging","csmSetLogFunction","logFunction","Version","csmGetVersion","minor","patch","versionNumber","CubismLogWarning","staticRelease","csmGetLogFunction","loggingLevel","LogLevel_Off","CubismLogDebug","fmt","CubismDebug","print","CubismLogError","format","getLoggingLevel","logPrint","coreLogFunction","ACubismMotion","_fadeInSeconds","_fadeOutSeconds","_weight","_offsetSeconds","_firedEventValues","release","motionQueueEntry","userTimeSeconds","isAvailable","isStarted","setIsStarted","setStartTime","setFadeInStartTime","duration","getDuration","getEndTime","setEndTime","getStartTime","fadeWeight","getEasingSine","getFadeInStartTime","setState","doUpdateParameters","setIsFinished","setFadeInTime","fadeInSeconds","setFadeOutTime","fadeOutSeconds","getFadeOutTime","getFadeInTime","setWeight","getWeight","getLoopDuration","setOffsetTime","offsetSeconds","getFiredEvent","beforeCheckTimeSeconds","motionTimeSeconds","setFinishedMotionHandler","onFinishedMotionHandler","_onFinishedMotion","getFinishedMotionHandler","CubismExpressionMotion","_parameters","fadeInTime","FadeInTime","fadeOutTime","FadeOutTime","parameters","Parameters","parameterId","Id","Value","blendType","Blend","ExpressionBlendType","ExpressionBlendType_Multiply","ExpressionBlendType_Overwrite","ExpressionBlendType_Add","parameter","addParameterValueById","multiplyParameterValueById","setParameterValueById","CubismMotionQueueEntry","_autoDelete","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_motionQueueEntryHandle","_isTriggeredFadeOut","_motion","startFadeOut","newEndTimeSeconds","startTime","endTime","f","setIsAvailable","timeSeconds","getStateTime","getStateWeight","getLastCheckEventSeconds","setLastCheckEventSeconds","checkSeconds","isTriggeredFadeOut","getFadeOutSeconds","CubismMotionQueueManager","_userTimeSeconds","_eventCustomData","_motions","autoDelete","InvalidMotionQueueEntryHandleValue","isFinishedByHandle","motionQueueEntryNumber","getCubismMotionQueueEntry","setEventCallback","callback","customData","_eventCallBack","doUpdateMotion","updated","firedList","Cubism4ExpressionManager","Name","create","CubismModelSettingsJson","Groups","HitAreas","Layout","FileReferences","Moc","Expressions","Motions","Textures","Physics","Pose","getEyeBlinkParameters","Ids","getLipSyncParameters","Cubism4ModelSettings","Sound","CubismMotionCurveTarget","CubismMotionSegmentType","CubismMotionPoint","CubismMotionSegment","basePointIndex","segmentType","CubismMotionCurve","CubismMotionCurveTarget_Model","segmentCount","baseSegmentIndex","CubismMotionEvent","fireTime","CubismMotionData","loop","curveCount","eventCount","fps","curves","segments","points","events","CubismMotionJson","_json","getMotionDuration","Meta","Duration","isMotionLoop","Loop","getMotionCurveCount","CurveCount","getMotionFps","Fps","getMotionTotalSegmentCount","TotalSegmentCount","getMotionTotalPointCount","TotalPointCount","getMotionFadeInTime","getMotionFadeOutTime","getMotionCurveTarget","curveIndex","Curves","Target","getMotionCurveId","getMotionCurveFadeInTime","getMotionCurveFadeOutTime","getMotionCurveSegmentCount","Segments","getMotionCurveSegment","segmentIndex","getEventCount","UserDataCount","getTotalEventValueSize","TotalUserDataSize","getEventTime","userDataIndex","UserData","Time","getEventValue","lerpPoints","linearEvaluate","bezierEvaluate","p01","p12","p23","p012","p123","steppedEvaluate","inverseSteppedEvaluate","evaluateCurve","motionData","curve","totalSegmentCount","pointPosition","CubismMotionSegmentType_Bezier","segment","evaluate","CubismMotion","_eyeBlinkParameterIds","_lipSyncParameterIds","_sourceFrameRate","_loopDurationSeconds","_isLoop","_isLoopFadeIn","_lastWeight","_motionData","_modelCurveIdEyeBlink","_modelCurveIdLipSync","timeOffsetSeconds","lipSyncValue","Number","MAX_VALUE","eyeBlinkValue","MaxTargetSize","lipSyncFlags","eyeBlinkFlags","tmpFadeIn","tmpFadeOut","parameterIndex","CubismMotionCurveTarget_Parameter","getParameterIndex","sourceValue","getParameterValueByIndex","fin","fout","setParameterValueByIndex","getParameterValueById","CubismMotionCurveTarget_PartOpacity","setIsLoop","isLoop","setIsLoopFadeIn","loopFadeIn","isLoopFadeIn","setParameterFadeInTime","setParameterFadeOutTime","getParameterFadeInTime","getParameterFadeOutTime","setEffectIds","eyeBlinkParameterIds","lipSyncParameterIds","motionJson","totalPointCount","segmentPosition","CubismMotionSegmentType_Linear","CubismMotionSegmentType_Stepped","CubismMotionSegmentType_InverseStepped","userdatacount","u","Cubism4MotionManager","eyeBlinkIds","lipSyncIds","caller","eventValue","CubismBreath","_breathParameters","_currentTime","setParameters","breathParameters","getParameters","deltaTimeSeconds","peak","cycle","BreathParameterData","CubismEyeBlink","modelSetting","_blinkingState","EyeState_First","_nextBlinkingTime","_stateStartTimeSeconds","_blinkingIntervalSeconds","_closingSeconds","_closedSeconds","_openingSeconds","_parameterIds","setBlinkingInterval","blinkingInterval","setBlinkingSetting","closing","closed","opening","setParameterIds","parameterIds","getParameterIds","parameterValue","EyeState_Closing","EyeState_Closed","EyeState_Opening","EyeState_Interval","determinNextBlinkingTiming","CloseIfZero","csmRect","w","h","getCenterX","getCenterY","getRight","getBottom","setRect","expand","s_instance","s_viewport","s_fbo","supportMoreMaskDivisions","CubismClippingManager_WebGL","_maskRenderTexture","_colorBuffer","_currentFrameNo","_clippingMaskBufferSize","_clippingContextListForMask","_clippingContextListForDraw","_channelColors","_tmpBoundsOnModel","_tmpMatrix","_tmpMatrixForMask","_tmpMatrixForDraw","tmp","getChannelFlagAsColor","channelNo","_maskTexture","frameNo","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","CubismRenderTextureResource","calcClippedDrawTotalBounds","clippingContext","clippedDrawTotalMinX","clippedDrawTotalMinY","clippedDrawTotalMaxX","MIN_VALUE","clippedDrawTotalMaxY","clippedDrawCount","_clippedDrawableIndexList","clippedDrawableIndex","drawableIndex","drawableVertexCount","getDrawableVertexCount","drawableVertexes","minX","minY","maxX","maxY","pi","_allClippedDrawRect","_isUsing","deleteFramebuffer","deleteTexture","drawableCount","drawableMasks","drawableMaskCounts","findSameClip","CubismClippingContext","addClippedDrawable","setupClippingContext","usingClipCount","clipIndex","cc","preDraw","setupLayoutBounds","clearColor","COLOR_BUFFER_BIT","clipContext","allClipedDrawRect","layoutBoundsOnTex01","_layoutBounds","MARGIN","scaleX","scaleY","_matrixForMask","_matrixForDraw","clipDrawCount","_clippingIdCount","clipDrawIndex","_clippingIdList","getDrawableDynamicFlagVertexPositionsDidChange","getDrawableCulling","setClippingContextBufferForMask","drawMesh","getDrawableTextureIndices","getDrawableVertexIndexCount","getDrawableVertexIndices","getDrawableVertexUvs","getDrawableOpacity","CubismBlendMode_Normal","sameCount","clipId","div","mod","curClipIndex","layoutCount","_layoutChannelNo","xpos","ypos","getColorBuffer","getClippingContextListForDraw","setClippingMaskBufferSize","getClippingMaskBufferSize","clippingDrawableIndices","clipCount","_owner","getClippingManager","setGl","CubismShader_WebGL","_shaderSets","releaseShaderProgram","setupShaderProgram","textureId","vertexCount","vertexArray","indexArray","uvArray","bufferData","colorBlendMode","baseColor","matrix4x4","invertedMask","SRC_COLOR","DST_COLOR","SRC_ALPHA","DST_ALPHA","generateShaders","clippingContextBufferForMask","getClippingContextBufferForMask","shaderSet","ShaderNames","ShaderNames_SetupMask","useProgram","shaderProgram","activeTexture","TEXTURE0","uniform1i","samplerTexture0Location","vertex","createBuffer","bindBuffer","ARRAY_BUFFER","DYNAMIC_DRAW","enableVertexAttribArray","attributePositionLocation","vertexAttribPointer","FLOAT","uv","attributeTexCoordLocation","colorChannel","uniform4f","uniformChannelFlagLocation","uniformMatrix4fv","uniformClipMatrixLocation","rect","uniformBaseColorLocation","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","clippingContextBufferForDraw","getClippingContextBufferForDraw","ShaderNames_NormalPremultipliedAlpha","ONE","CubismBlendMode_Additive","ShaderNames_AddPremultipliedAlpha","CubismBlendMode_Multiplicative","ShaderNames_MultPremultipliedAlpha","TEXTURE1","samplerTexture1Location","uniformMatrixLocation","ELEMENT_ARRAY_BUFFER","blendFuncSeparate","deleteProgram","loadShaderProgram","vertexShaderSrcSetupMask","fragmentShaderSrcsetupMask","vertexShaderSrc","fragmentShaderSrcPremultipliedAlpha","vertexShaderSrcMasked","fragmentShaderSrcMaskPremultipliedAlpha","fragmentShaderSrcMaskInvertedPremultipliedAlpha","getAttribLocation","getUniformLocation","vertexShaderSource","fragmentShaderSource","createProgram","vertShader","compileShaderSource","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","deleteShader","shaderType","shaderSource","createShader","compileShader","getShaderInfoLog","getShaderParameter","COMPILE_STATUS","CubismRenderer_WebGL","_clippingContextBufferForMask","_clippingContextBufferForDraw","_clippingManager","_textures","_sortedDrawableIndexList","_bufferData","isUsingMasking","getDrawableCount","getDrawableMasks","getDrawableMaskCounts","modelTextureNo","glTexture","getBindedTextures","deleteBuffer","renderOrder","getDrawableRenderOrders","order","getDrawableDynamicFlagIsVisible","setClippingContextBufferForDraw","getDrawableBlendMode","getDrawableInvertedMaskBit","textureNo","indexCount","CULL_FACE","disable","frontFace","CCW","modelColorRGBA","drawtexture","getInstance","drawElements","TRIANGLES","UNSIGNED_SHORT","deleteInstance","setRenderState","fbo","getExtension","SCISSOR_TEST","STENCIL_TEST","DEPTH_TEST","CW","BLEND","colorMask","clip","startUp","doStaticRelease","Cubism4InternalModel","lipSync","breath","idParamAngleX","idParamAngleY","idParamAngleZ","idParamEyeBallX","idParamEyeBallY","idParamBodyAngleX","idParamBreath","pixelsPerUnit","centeringTransform","canvasinfo","CanvasWidth","CanvasHeight","_","charAt","toLowerCase","PixelsPerUnit","getDrawableIds","prepend","saveParameters","loadParameters","startupPromise","startupRetries","cubism4Ready","startUpWithRetry","startUpCubism4","cause","setTimeout","CubismPose","_fadeTimeSeconds","_lastModel","_partGroups","_partGroupCounts","pose3json","poseListInfo","poseCount","poseIndex","idListInfo","idCount","groupCount","groupIndex","partInfo","partData","PartData","partId","linkListInfo","Link","linkCount","linkIndex","linkPart","beginIndex","partGroupCount","doFade","copyPartOpacities","partIndex","setPartOpacityByIndex","getPartOpacityByIndex","linkPartIndex","visiblePartIndex","newOpacity","assignment","getPartIndex","clonePartData","CubismModel","_savedParameters","_drawableIds","_partIds","_notExistPartId","_notExistParameterId","_notExistParameterValues","_notExistPartOpacities","drawables","resetDynamicFlags","parameterCount","savedParameterCount","_parameterValues","partCount","getPartCount","_partOpacities","setPartOpacityById","getPartOpacityById","getParameterCount","getParameterMaximumValue","maximumValues","getParameterMinimumValue","minimumValues","getParameterDefaultValue","defaultValues","addParameterValueByIndex","multiplyParameterValueByIndex","drawableId","getDrawableId","renderOrders","textureIndices","dynamicFlags","Utils","hasVertexPositionsDidChangeBit","indexCounts","vertexCounts","getDrawableVertexPositions","indices","vertexPositions","vertexUvs","opacities","constantFlags","hasIsDoubleSidedBit","hasBlendAdditiveBit","hasBlendMultiplicativeBit","hasIsInvertedMaskBit","masks","maskCounts","hasIsVisibleBit","getDrawableDynamicFlagVisibilityDidChange","hasVisibilityDidChangeBit","getDrawableDynamicFlagOpacityDidChange","hasOpacityDidChangeBit","getDrawableDynamicFlagRenderOrderDidChange","hasRenderOrderDidChangeBit","_parameterMaximumValues","_parameterMinimumValues","partIds","drawableIds","CubismMoc","_moc","_modelCount","mocBytes","fromArrayBuffer","createModel","cubismModel","Model","fromMoc","deleteModel","_release","CubismPhysicsTargetType","CubismPhysicsSource","CubismPhysicsParticle","initialPosition","lastPosition","lastGravity","force","velocity","CubismPhysicsSubRig","normalizationPosition","normalizationAngle","CubismPhysicsInput","CubismPhysicsOutput","destination","translationScale","CubismPhysicsRig","inputs","outputs","particles","gravity","wind","CubismPhysicsJson","getGravity","EffectiveForces","Gravity","X","Y","getWind","Wind","getSubRigCount","PhysicsSettingCount","getTotalInputCount","TotalInputCount","getTotalOutputCount","TotalOutputCount","getVertexCount","VertexCount","getNormalizationPositionMinimumValue","physicsSettingIndex","PhysicsSettings","Normalization","Position","Minimum","getNormalizationPositionMaximumValue","Maximum","getNormalizationPositionDefaultValue","Default","getNormalizationAngleMinimumValue","Angle","getNormalizationAngleMaximumValue","getNormalizationAngleDefaultValue","getInputCount","Input","getInputWeight","inputIndex","Weight","getInputReflect","Reflect","getInputType","Type","getInputSourceId","Source","getOutputCount","Output","getOutputVertexIndex","outputIndex","VertexIndex","getOutputAngleScale","Scale","getOutputWeight","getOutputDestinationId","Destination","getOutputType","getOutputReflect","getParticleCount","Vertices","getParticleMobility","vertexIndex","Mobility","getParticleDelay","Delay","getParticleAcceleration","Acceleration","getParticleRadius","Radius","getParticlePosition","PhysicsTypeTagAngle","CubismPhysics","Options","_physicsRig","radAngle","outputValue","totalTranslation","currentSetting","currentInput","currentOutput","currentParticles","parameterMaximumValue","parameterMinimumValue","parameterDefaultValue","settingIndex","subRigCount","baseInputIndex","baseOutputIndex","baseParticleIndex","inputCount","sourceParameterIndex","getNormalizedParameterValue","reflect","degreesToRadian","updateParticles","particleCount","maximum","outputCount","particleIndex","destinationParameterIndex","translation","outParameterValue","stringify","subarray","updateOutputParameterValue","outParamIndex","setOptions","getOption","physicsJson","setting","minimum","defalut","input","CubismPhysicsSource_X","getInputTranslationXFromNormalizedParameterValue","CubismPhysicsSource_Y","getInputTranslationYFromNormalizedParamterValue","CubismPhysicsSource_Angle","getInputAngleFromNormalizedParameterValue","targetType","CubismPhysicsTargetType_Parameter","output","angleScale","getOutputTranslationX","getScale","getOutputScaleTranslationX","getOutputTranslationY","getOutputScaleTranslationY","getOutputAngle","getOutputScaleAngle","particle","mobility","delay","acceleration","radius","strand","targetTranslation","targetAngle","isInverted","normalizeParameterValue","normalizaitionPosition","parentGravity","strandCount","windDirection","thresholdValue","airResistance","totalRadian","currentGravity","direction","newDirection","radianToDirection","parameterValueMinimum","parameterValueMaximum","outputScale","valueBelowMinimum","valueExceededMaximum","parameterMinimum","parameterMaximum","parameterDefault","normalizedMinimum","normalizedMaximum","normalizedDefault","maxValue","minValue","minNormValue","maxNormValue","middleNormValue","middleValue","getRangeValue","paramValue","sign","nLength","pLength","releaseMoc","__moc","cubism4","ignored","coreModelWithMoc"],"sourceRoot":""}